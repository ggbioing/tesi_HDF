%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Acr9514.tmp.pdf
%%Creator: Adobe Acrobat 8.0
%%For: luigi
%%CreationDate: 07/06/2011, 23.50.26
%%BoundingBox: 0 0 632 805
%%HiResBoundingBox: 0 0 632 805
%%CropBox: 0 0 632 805
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	1 index dup/ID get exch/Pattern add_res
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.30 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.30 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.30 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get ne dup
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
				if
				end
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} (% &end XMP packet& %) ReadBypdfmark_5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c316 44.253921, Sun Oct 01 2006 17:14:39">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xap="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xap:ModifyDate="2011-06-07T23:49:50+02:00"
   xap:CreateDate="2011-06-07T23:49:50+02:00"
   xap:MetadataDate="2011-06-07T23:49:50+02:00"
   xap:CreatorTool="Penta Systems International Inc."
   dc:format="application/pdf"
   xapMM:DocumentID="uuid:504afa70-4045-4a68-9316-1f2f4546f297"
   xapMM:InstanceID="uuid:68048213-33f0-48b1-814b-b3dfa8acb571"
   pdf:Producer="Adobe Acrobat 6.0">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Harrison's Principles of Internal Medicine 16th Edition</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Harrison's Principles of Internal Medicine 16th Edition</rdf:li>
    </rdf:Alt>
   </dc:description>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Shahram</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -805 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 805 li
632 805 li
632 0 li
cp
clp
[1 0 0 1 -33 0 ]ct
.2 setflat
.498 lw
0 lc
0 lj
10 ml
[] 0 dsh
false sadj
42.091 -16.443 mo
42.091 -4.48799 li
653.831 -16.443 mo
653.831 -4.48799 li
11.955 13.693 mo
23.91 13.693 li
672.013 13.693 mo
683.968 13.693 li
11.955 796.539 mo
23.91 796.539 li
672.013 796.539 mo
683.968 796.539 li
42.091 814.72 mo
42.091 826.675 li
653.831 814.72 mo
653.831 826.675 li
false sop
0 0 0 1 cmyk
@
352.667 -16.4399 mo
352.667 -21.939 348.204 -26.402 342.705 -26.402 cv
337.206 -26.402 332.743 -21.939 332.743 -16.4399 cv
332.743 -10.9409 337.206 -6.47791 342.705 -6.47791 cv
348.204 -6.47791 352.667 -10.9409 352.667 -16.4399 cv
/1 
[/DeviceGray] /CSA add_res
1 gry
f
350.675 -16.4399 mo
350.675 -20.8389 347.104 -24.4099 342.705 -24.4099 cv
338.306 -24.4099 334.735 -20.8389 334.735 -16.4399 cv
334.735 -12.0409 338.306 -8.46994 342.705 -8.46994 cv
347.104 -8.46994 350.675 -12.0409 350.675 -16.4399 cv
330.752 -16.4429 mo
354.661 -16.4429 li
342.707 -4.48794 mo
342.707 -28.3979 li
0 gry
@
346.69 -16.4399 mo
346.69 -18.6399 344.905 -20.4249 342.705 -20.4249 cv
340.505 -20.4249 338.72 -18.6399 338.72 -16.4399 cv
338.72 -14.24 340.505 -12.455 342.705 -12.455 cv
344.905 -12.455 346.69 -14.24 346.69 -16.4399 cv
f
338.722 -16.443 mo
346.692 -16.443 li
342.707 -12.458 mo
342.707 -20.428 li
1 gry
@
21.917 396 mo
21.917 390.501 17.454 386.038 11.955 386.038 cv
6.456 386.038 1.993 390.501 1.993 396 cv
1.993 401.499 6.456 405.962 11.955 405.962 cv
17.454 405.962 21.917 401.499 21.917 396 cv
f
19.925 396 mo
19.925 391.601 16.354 388.03 11.955 388.03 cv
7.556 388.03 3.985 391.601 3.985 396 cv
3.985 400.399 7.556 403.97 11.955 403.97 cv
16.354 403.97 19.925 400.399 19.925 396 cv
0 396 mo
23.91 396 li
11.955 407.955 mo
11.955 384.046 li
0 gry
@
15.94 396 mo
15.94 393.8 14.155 392.015 11.955 392.015 cv
9.755 392.015 7.97 393.8 7.97 396 cv
7.97 398.2 9.755 399.985 11.955 399.985 cv
14.155 399.985 15.94 398.2 15.94 396 cv
f
7.97 396 mo
15.94 396 li
11.955 399.985 mo
11.955 392.016 li
1 gry
@
693.377 396 mo
693.377 390.501 688.914 386.038 683.415 386.038 cv
677.916 386.038 673.453 390.501 673.453 396 cv
673.453 401.499 677.916 405.962 683.415 405.962 cv
688.914 405.962 693.377 401.499 693.377 396 cv
f
691.4 396 mo
691.4 391.601 687.829 388.03 683.43 388.03 cv
679.031 388.03 675.46 391.601 675.46 396 cv
675.46 400.399 679.031 403.97 683.43 403.97 cv
687.829 403.97 691.4 400.399 691.4 396 cv
671.466 396 mo
695.376 396 li
683.421 407.955 mo
683.421 384.046 li
0 gry
@
687.4 396 mo
687.4 393.8 685.615 392.015 683.415 392.015 cv
681.215 392.015 679.43 393.8 679.43 396 cv
679.43 398.2 681.215 399.985 683.415 399.985 cv
685.615 399.985 687.4 398.2 687.4 396 cv
f
679.436 396 mo
687.406 396 li
683.421 399.985 mo
683.421 392.016 li
1 gry
@
352.667 827.37 mo
352.667 821.871 348.204 817.408 342.705 817.408 cv
337.206 817.408 332.743 821.871 332.743 827.37 cv
332.743 832.869 337.206 837.332 342.705 837.332 cv
348.204 837.332 352.667 832.869 352.667 827.37 cv
f
350.675 827.37 mo
350.675 822.971 347.104 819.4 342.705 819.4 cv
338.306 819.4 334.735 822.971 334.735 827.37 cv
334.735 831.769 338.306 835.34 342.705 835.34 cv
347.104 835.34 350.675 831.769 350.675 827.37 cv
330.752 827.372 mo
354.661 827.372 li
342.707 839.327 mo
342.707 815.418 li
0 gry
@
346.69 827.37 mo
346.69 825.17 344.905 823.385 342.705 823.385 cv
340.505 823.385 338.72 825.17 338.72 827.37 cv
338.72 829.57 340.505 831.355 342.705 831.355 cv
344.905 831.355 346.69 829.57 346.69 827.37 cv
f
338.722 827.372 mo
346.692 827.372 li
342.707 831.357 mo
342.707 823.387 li
1 gry
@
86.225 44.826 mo
337.277 44.826 li
337.277 54.9871 li
86.225 54.9871 li
cp
0 0 0 0 cmyk
f
86.225 -14.45 mo
337.277 -14.45 li
337.277 -4.48792 li
86.225 -4.48792 li
cp
f
514.607 -14.45 mo
550.472 -14.45 li
550.472 -4.48792 li
514.607 -4.48792 li
cp
f
570.396 -14.45 mo
600.283 -14.45 li
600.283 -4.48792 li
570.396 -4.48792 li
cp
f
672.013 44.826 mo
707.878 44.826 li
707.878 51.999 li
672.013 51.999 li
cp
f
672.013 65.7469 mo
707.878 65.7469 li
707.878 71.725 li
672.013 71.725 li
cp
f
672.013 741.198 mo
707.878 741.198 li
707.878 762.119 li
672.013 762.119 li
cp
f
713.855 756.44 mo
749.72 756.44 li
749.72 763.613 li
713.855 763.613 li
cp
f
86.225 423.597 mo
600.284 423.597 li
600.284 441.329 li
86.225 441.329 li
cp
f
86.225 441.329 mo
600.284 441.329 li
600.284 751.658 li
86.225 751.658 li
cp
f
86.225 61.264 mo
337.277 61.264 li
337.277 423.597 li
86.225 423.597 li
cp
f
349.231 40.343 mo
600.283 40.343 li
600.283 423.598 li
349.231 423.598 li
cp
f
86.225 6.47095 mo
337.277 6.47095 li
337.277 44.8259 li
86.225 44.8259 li
cp
.05 .06 0 0 cmyk
f
86.225 42.833 mo
337.277 42.833 li
337.277 54.788 li
86.225 54.788 li
cp
.5 .6 0 0 cmyk
f
0 0 0 0 cmyk
true set_gvm
%ADOBeginSubsetFont: OLQBAA+SolexBoldLining Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /OLQBAA+SolexBoldLining def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 2000, Emigre Inc.; Designed by Zuzana Licko) def
/Weight (Bold) def
/ItalicAngle 0 def
/BaseFontName (SolexBoldLining) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 52 /four put
dup 54 /six put
dup 68 /D put
dup 73 /I put
dup 75 /K put
dup 80 /P put
dup 84 /T put
dup 85 /U put
dup 88 /X put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 121 /y put
def
/FontBBox {-37 -216 848 1000} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-10 -0 500 510 690 700 703 704] def
/StdHW [114] def
/StdVW [107] def
/StemSnapH [57 77 98 114] def
/StemSnapV [63 75 92 107] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
24 dict dup begin
/one <1C60D8A8C9B76D61D2B2442D7E764FF329D0828269005D8A770DCC89DA
9C5C3E9F8441C49256C9965766DAD4014B3047EA6D4CC645B471E5> |-
/four <1C60D8A8C9B76D61D2B31588190D5B177F1742F83BC98623E3AAFE740
05D221C3AB2D7B49D0701FC62643A426256A7E71BE972BBC3F4C4C0EE4C5CA81
84828CC6F060A8DE4358AA6B32C6ACD71E18DA381ADCED2> |-
/six <1C60D8A8C9B76D61D8FD5C206C25AD50FBFAC6E932A5E262DBB518E248
15DD20BC98C4127C488BCFE7FCAE9617CB35BEE865E03796B08842F7F065C342
2B86F8E966F046D47311047D14AD34FBDE2061053AC82A7D1FC87CA4A747CE1C
D2ECEA0EB977B5F0BADBB535C0E82D66A7216F7C7D2580B292832A0366C90F> |-
/D <1C60D8A8C9B7A73DC525FD98B1A47763EA6331BEB8ED2112C634ACF2B65F
E73771E9DBDDAD4D62BA9B121A458FAA012E37DB4EA3B71BC5C6CF122FD9710A
0A523A69A8D30A83B341AB64AC45970402FFAA339EC957> |-
/I <1C60D8A8C9B8666CB700595507C5D3B13D890702BB362F3410897A27C4BF
4136C74A62D1> |-
/K <1C60D8A8C9B765F5565165BA42CB0954260C7B9BF53553CAB0FF65385BB9
24FEBD242499BF6A2CD4E86E439A8764B34D20DE39B6B08C87C2BA8AF78C0B2E
194B4A828EB3A6E5A2F8D9AEBBF316D7F2B6769C19> |-
/P <1C60D8A8C9B76C902ED46C41F7F1DE40980F133F26C522B01BA0A593C32C
1A70FC1E0F1E2A8570A3F83F05C80D7CF780FF798734BAFAC1C5D1B9BEE92E05
F3403CD9E227729B0D9D031196D0EEBDE976945E18B8F931> |-
/T <1C60D8A8C9B8151C558CFF53507152861C81E0DD9CD07E8C72DFEDFB21A9
9AE7AECB56134FE7C9318581981C10826C1B76> |-
/U <1C60D8A8C9B7551CBDF053ABB4832068A5A543606694ADB3FC0EFCCF90F1
5C58FE497D5BBCE161C1E8D13C5DA81E6B6F8597607349190E09A1922CC6EB9F
634BB135> |-
/X <1C60D8A8C9B70582B0E009F82773EEC7383D998EF543F68D4455F4262E17
3EB77C9B0A57248DF56EFBA6D8EE9BBB2C6E1418A4EB1D615CAA6B59BA163B07
7B22088F9116> |-
/a <1C60D8A8C9B732D4FF0AEF0AAB0A58456758DC578D82196ED82F4DB0A717
8FF808A1C3E36C99A77F47BE91FD7C00C069EBCFFFFFCB1008D021EB21288E2C
928C36C3DD6D67075491D8D2CC77FDC45902B5C516A8F5DD1B6CEA8BE85B1F87
DD8992883C06E67F040F3E2B1CA335036EE7552E029EB49F8F8E216849A977F9
18538C356D0E> |-
/c <1C60D8A8C9B820E2AFE137736C39E6F9FBF03B00AD0F5F85915B6825AFA5
1762115A6F10464AA08A58E43712EECEC23735C5A22BE5B941A6F1704DA9557D
36DA0D1FA4D7783A3DC9D0DAB83D86DFC3D8EE> |-
/d <1C60D8A8C9B7157BBDC2FFA5867095D47AC97F0798E063873D80AECEB74F
96641DAA30203C6F7A45346321265330507E9023247D2EF05F058D0AC71E81B1
51947EA4AB0990F492CBAF773F594076B5CA220790ECB54DD5F31CC359499D8A
3792E76C84B1C1DCAB4F6C55CBA8500612F5DB28452A77F1652D> |-
/e <1C60D8A8C9B70EDCBA0CF58BFF1B5DADA7F75A1DC0D4C1BF96C8CD170CA4
C6C8AE703C8022A72A73F2B4CDD7F16794C23E582042544A15F7A6112743761F
3C0F2171CBB4831064DB417E1F56D0FC363B9788BB5428F2BE4192DB82AA5E68
9F51C0A8540791AF> |-
/f <1C60D8A8C9B8476F7FB347BF0D34A5C51FC593FE28E32A70DC87F852270C
50400CC50A7BAE97355A1FBCC7F7115E4E81BCAC8E265DF97C8462BD2E242292
9C7DFB6D949BB3D18934EF027AD1D8BF4C89B4EE> |-
/h <1C60D8A8C9B719BD55FCAD755F0D5FAD5859F9AB6EF2BFD8DF3D1CD2B68E
2E2E867888DFCDCA402CB50DDB62C9158B2B25BF23A73F474571DF5106306009
05C7B53068DDDCF6ACA67FCE53B257B3B6C0A886680D177EB601> |-
/i <1C60D8A8C9B874A6F98A2E49F478951615360645842DDCA2E13143B9670D
DA19CF6CFFBF4F305BB4CDE66252AAA638333B85F5BADFECD446386BCD499F19
55CB2A2FDD3827F2> |-
/n <1C60D8A8C9B713D440780CC0C16528F4D35F53CAEF620A69F282F72AC694
BB3A3F08E03F4AD30784BE0DB9B2D65DE574D861466FE157C44F32B3A9D1F988
D7C09288286B2F4656016513203397A5EDB9B08E2FE74E07B3463B72169836> |-
/o <1C60D8A8C9B71DE7A4E0AEEC351777FDB0840E1E86F77C2EE11379DD7B69
6CC597F51FDF6DE2FEF777FFCEE0223FFBCC6ADE64B6AFE3CD5CD37FAE20286E
92ABB459F8AF83AF6117141743B4A8C827947E53C3FC15122DC05D> |-
/r <1C60D8A8C9B8476F7FB347BF35AEC5A73B21F31E2447465641CFDB74FF78
C9C21F7A5A333E0D22537E4C872BE2CDB0B4C48F3136784D365B094259A7EBCA
0244680BBE0C> |-
/s <1C60D8A8C9B81005CE194BD9596F35D4085342BDBEF2985A761510651B01
EFD3E1BC60289E404133CD919EB3E35FF44A1F8BCA7E2650BA88DB67113F22DA
6298FB71F4FD369E120C8C47DFA39FF60FF27770493080398EF15CEE12AD12B5
40A86954A5E5481A1A7B6407DA> |-
/t <1C60D8A8C9B84FD8F43011B6282ACE343301BF6A22FF0949526F10EA0134
D5916B1CC70A50B442235647D8DAB2BC355D4C95305A53C7BBBDD55DE60F87AD
3A2D96B76EFA8E545014666A4D82B30B5E> |-
/y <1C60D8A8C9B719BD250B85750C60AA23C338A74278749BFF18C710EE1509
2AAEDA7712B7EBC9FF2ED095ABD6F5177060221B1435F0C5DC46BA2109669D4E
D5E6F4886D64883F7A82D039095A0F0390CECAC9C2C8B447A1E92D72E78DCB9B
6C2B61838E58C427DE529BE469A043F6> |-
/.notdef <1C60D8A8C9B8524C50> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/LJKSOP+SolexBoldLining /OLQBAA+SolexBoldLining findfont ct_VMDictPut
/LJKSOP+SolexBoldLining*1 
[49{/.notdef}rp /one 2{/.notdef}rp /four /.notdef /six 13{/.notdef}rp /D 
4{/.notdef}rp /I /.notdef /K 4{/.notdef}rp /P 3{/.notdef}rp /T 
/U 2{/.notdef}rp /X 8{/.notdef}rp /a /.notdef /c /d 
/e /f /.notdef /h /i 4{/.notdef}rp /n /o 
2{/.notdef}rp /r /s /t 4{/.notdef}rp /y 134{/.notdef}rp]
LJKSOP+SolexBoldLining nf
LJKSOP+SolexBoldLining*1 [8.468 0 0 -8.468 0 0 ]msf
181.464 51.9988 mo
(PartXIDisordersoftheKidneyandUrinaryTract)
[3.6497 3.32797 2.48111 5.2502 3.43806 6.23239 4.23401 2.08315 2.92987 3.50575 2.48112 3.57347 
3.36182 2.48112 5.57188 3.50577 5.36871 2.41341 3.53963 6.24939 3.70901 2.08316 3.57349 3.59039 
3.36182 6.32559 3.32797 3.59039 6.46106 4.11539 2.48111 2.08313 3.59042 3.32797 2.48111 6.27478 
2.90454 2.48111 3.32797 2.79446 0 ]xsh
LJKSOP+SolexBoldLining*1 [9.9624 0 0 -9.9624 0 0 ]msf
92.202 51.9988 mo
(1664)
[4.28376 4.28376 4.28376 0 ]xsh
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: BSFBAA+Helvetica Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /BSFBAA+Helvetica def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All rights reserved.Helvetica is a trademark of Linotype AG and/or its subsidiaries.) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (Helvetica) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 55 /seven put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 80 /P put
dup 84 /T put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 117 /u put
dup 119 /w put
def
/FontBBox {-166 -225 1000 931} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 -0 523 538 718 737 740 741] def
/StdHW [90] def
/StdVW [78] def
/StemSnapH [51 71 90 102] def
/StemSnapV [44 60 78 105] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
34 dict dup begin
/hyphen <1C60D8A8C9B81F2C3AC7E2E3658B443C3CC085306BBB315F62787ED
6A652B9> |-
/slash <1C60D8A8C9B854D07B3D27D845602CAC767492303638D52A67A388E2
FB8C41> |-
/zero <1C60D8A8C9B7EF32A47EF8F60AC38116B88EEA56F2DCAAF58E4E289B0
6F57A835C3B933A6716B6C0C01715A9AED8A6896AE2284B01784556B096DDDEE
293771517903786C37A04262A7E8EA068650B993411B38C6CED0E44> |-
/one <1C60D8A8C9B7EF325775475DECBAED056ED4394619D2DEC7FB3B68B98E
8BFA4A8E8A6856ABE83C88E9A84671E2D8E6> |-
/two <1C60D8A8C9B7EF325749CA44FA0BEEC290FA6386623C470B0299E4C1C5
1799CF6D76C74BB2151BB42F17E91E4B269E9BA99FCC1D35BA036BFCA26395EB
08BBCA09284678744D785077AFC39E4D0132F2C4698420F8B46034335C34C8AA
D8734E5173C95B69> |-
/four <1C60D8A8C9B7EF32577547528B50576EC3DEB18EF91F6CD138504424E
EEA8F911BC8E9E1F8FE05105C088CF7153BD96718575D80A71620FBAE2B11368
6156F732D44> |-
/six <1C60D8A8C9B7EF32A47EF8F7DBE53644C8C292FBAF99414175AF7A4470
4566D0691750DD33B392854F784C306B7C2793DD8CAE0CCEEF53891058D0B02E
C9B5CB5F85903CBE309EA0268D2297802C58F9791F26E1B28D144A8BDC3FB724
C3A35138950C7B352C7A97FDFA3C801F90DC1F53B60207F1DFB3E568F04B057D
BAE750E2E85780EF25374A> |-
/seven <1C60D8A8C9B7EF325775475D655E511790D95477A1D0CAC381E07620
6967902D80114CA86CA86F6BC334309380FB92C506456848E1> |-
/colon <1C60D8A8C9B854D088E9AF67782D87CF665DEAA39541FD1625A03AC7
7B15E848F9A115BC0BB47EC2> |-
/A <1C60D8A8C9B64EDF885A62AF749E41B33AC692AC44DFFF56E7C62DD5F672
4A42CEBD0F0F82C4C12DF265720BB80869DD794BAC01BAE77E2FEE60F00D2551
EBB74457> |-
/B <1C60D8A8C9B64EDF886611B29D3CD815E78365EB2EDD44801C7F2530FA14
139E7B7E6A1B38672652B593A404D33377712065AA27144E529483DA26C8FA16
7C9DE8DC4195F2C11E60C7CBAE08ACE6F3F53EEC531099FDFD30F9ADE0C65FC9
D964967596140382FF263DE74DF2F8DA> |-
/C <1C60D8A8C9B6079FED197B0A7C8200B6BE6B128BBBD08528E4C30FB70CBD
BBB1BF26E3F6EB9E3F78EECE94949FB4AE8B98CCBB6CDFF3B300F7F6F29359FF
CF67DFCB4FDD53926C44AFBCF7367CBBE2C5FD933C25161435724C4786AE1DCA
81> |-
/E <1C60D8A8C9B64EDF886611B29B9061D1A6E75B68D9C65902641B4C4EFB27
19471E2597907A6C8E8A6E5A643C1BDACA1AD42DFC09629B2F0332659E> |-
/F <1C60D8A8C9B7D8BE6A3AF0A180C6354D19FC6296BBE6108C44B937EF99C3
1BD89ABA54CC4D61623D580C25941F161A5BB1156612D5> |-
/G <1C60D8A8C9B6FF867A194674B2FF3AD81D1B8AE46A28E9764400FDDA3A8B
7E81F60AE98F5853ED42F34B2D1EFA759D0359345077C756D0F547CB838FD952
B136F18EAA0AFCAA1B641A8B2D6AAA7D34E299BD6E9DD22B3D3FF981141AACE1
1EF35EC8AD255300FC14B5B46A85186EB1B4AE2D6690BFB06BDFDFCD7F62EA62
CC81> |-
/H <1C60D8A8C9B6079F1E3397E84680907823AB2D44F7A25DC677E3968CC6AF
5C842BDAD9D662079A943D3BA5E72CC6CF39FAA94F37EB387FC1ECC1874839C2> |-
/I <1C60D8A8C9B854D088F8C6CEDB51D6B16BC69F567F795B65BA52AF4E020E
E15E> |-
/L <1C60D8A8C9B7EF325749CA44F782155CE8AFAB32C4051163ECC8AB65DBC5
6B9E3374E931E7AC> |-
/M <1C60D8A8C9B6B41CC7EAE2A107E9A85D46C74B036EBC285C3324BBEABE89
940BD033C467F4FEBBD51BAE9797E4DC7798D6917B9AC40C2F8BCD2267BAE08F
3E2666BBB68312EF315F570EA3158F838125563A2A43798350BEB088> |-
/P <1C60D8A8C9B64EDF885A62AFD2CA6C3524DD09D7D69315BBDA69C3D12F57
8255E8A751ACB341FE32C97B3F4B8CF1A88BBB75F9D1F175EFB7567AD38F97C6
62F74363F4FC51B39D3562CEDCE825> |-
/T <1C60D8A8C9B7D8BE6A3AF0AFB861DAE71941CE7383C4B22B6299959D5ECC
FE8F5C2C7724C6425A3EA391795D> |-
/a <1C60D8A8C9B7EF32A0B41A53EBE674F7C910D37FC2AA831C7177D13294CB
04491E262442620CC3EA7768F976CD9E6BE8F1E699EDEF165926A16E96E845DF
A3465DE96F22A1969F3FEB6A3ECD21926E880E2F77119F88F6522C71160A21B3
467A522C3313A1CD2C9A3E9339674FD31D5B0A871FA0F6A9537C7EC778E12014
B05C2DAE719BCD0A5A15962E8BD70C1D71AD6270E04C023D> |-
/c <1C60D8A8C9B7A73D329304ED83C8D755030B37923550F21A57EFE410B342
38DCA49F8FE420B3451D5A8866872122D53D030969953D06FC5A863F690FE9FC
FFCF63FAAB2954C2529F5EDA3780C22389B7FAB1DF92BBBA70> |-
/d <1C60D8A8C9B7EF32A0B41A53EBE674A1DC6328C2073DA068D0B384472E5F
DF7FA10576D9B143988D1C7A5267B4BE8A13AA85271021BE27A13B1C69FBE3FC
34E4649B7BE8A7F25D9C26E19BD72E7BBFD0C751927B14C4E2BB003CBF78EA1F
B82D06F5375B01185BD18089B3B517> |-
/e <1C60D8A8C9B7EF32A0B41A5CB982CD9F07DDC986396549910B6B312B745D
6E15EA13A6C03E8D258C46C7068D6508EA99B36ED1B6D12552329ABF29E23764
55F8106D51CC61C281D1F2CE9AFC84426C914BC65EE9624C520DE52599E25451
EE09F26490E27FD8947316> |-
/i <1C60D8A8C9B88C080E86A32DE533FCFDA129ECCBE4CA2C7C3BC742F6CD13
74017FA533AD26AD06641E0A> |-
/l <1C60D8A8C9B88C080E86A32C46123C8980FB83271F98748121BC737702E0
3C3B> |-
/n <1C60D8A8C9B7EF325775475DF3D1B08720200445986575E854C8CA2151A1
B77466AE01BFC723A8CAA224D2B2527ABBEFB6DCCFE1778FD853C854792A51D2
8A6213694567FB8157E5> |-
/o <1C60D8A8C9B7EF32A1E5398D401598DBC254A12A9E017DD088E4430FF9BE
0B1DAFF436D572484FC89042A83DFE0702D6200B4A520D09044B89F253E75151
A351D039D472C91CC63F86B67C1BA79B35E3AD45099A01105B22BD089E> |-
/r <1C60D8A8C9B81F2C468D7C786A84EFF28EA5A3759D1DBEB0D8F551C0409A
1BB6F284A9E8FE28A551014DFAF040D60B585F425B8FA7A8674796DF96> |-
/s <1C60D8A8C9B7A73D329304ED83C8D75766125C636F89CFB63618F5BC5059
BC32D1944921678C3950F94982F6A42B9C98ECDA5CC9311D901480017606D28A
07589AEF78A4D66A3A66FA5713BF2C6C3848D0DEFE4418162736CEC7CE0FC41A
3F727F7E90CB29B82D2D1F32F584108E7E70C76592241A5E3670E0> |-
/u <1C60D8A8C9B7EF32A0B41A53CE38A8BDF846F59D2C838500988CE4D5C9D1
4C07219A67486B0F0ABEA8A66E08AC2C4426DC794471CFB488A6B3B2E685A940
EF218633A16A1E49730C> |-
/w <1C60D8A8C9B6079F1E22E04387EA02B74B05BDD7C68A96B178D50CA44A93
80C2CB77D5DE061C06734445B54B66442A75F6FE63252DD94CADC2EF05D38BE0
DE0D685C06A77A> |-
/.notdef <1C60D8A8C9B8524C50> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/LJKSOQ+Helvetica /BSFBAA+Helvetica findfont ct_VMDictPut
/LJKSOQ+Helvetica*1 
[45{/.notdef}rp /hyphen /.notdef /slash /zero /one /two /.notdef 
/four /.notdef /six /seven 2{/.notdef}rp /colon 6{/.notdef}rp /A 
/B /C /.notdef /E /F /G /H /I 
2{/.notdef}rp /L /M 2{/.notdef}rp /P 3{/.notdef}rp /T 12{/.notdef}rp 
/a /.notdef /c /d /e 3{/.notdef}rp /i 2{/.notdef}rp 
/l /.notdef /n /o 2{/.notdef}rp /r /s /.notdef 
/u /.notdef /w 136{/.notdef}rp]
LJKSOQ+Helvetica nf
LJKSOQ+Helvetica*1 [8.9662 0 0 -8.9662 0 0 ]msf
86.2246 -4.48804 mo
(42704Harrison/Braunwald:HPIM16/eMcGraw-Hill)
[4.98521 4.98521 4.9852 4.98521 13.9514 6.4736 4.9852 2.98569 2.98567 1.99049 4.48311 4.9852 
4.98521 2.4926 5.98051 2.98569 4.9852 4.9852 4.98521 6.47359 4.98521 1.99049 4.9852 2.49261 
6.4736 5.98051 2.4926 9.71033 4.9852 4.9852 2.49261 13.9514 7.46878 4.48309 6.97571 2.98566 
4.98523 6.47357 2.98569 6.4736 1.99051 1.99048 0 ]xsh
514.603 -4.48804 mo
(BATCHLEFT)
[5.98053 5.98053 5.47827 6.47357 31.8749 4.98517 5.98053 5.47827 0 ]xsh
672.013 44.328 mo
692.038 44.328 li
692.038 44.826 li
672.013 44.826 li
cp
f
true set_gvm
%ADOBeginSubsetFont: BSFBAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LJKSOQ+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/f <1C60D8A8C9B854D088F8C6CFF0E446A7AAF9B5714DF92B36429254C713E8
CBF1239856D9D9BD5F6C6951C0DD3873CFE5CDEE7B2CBCDC28F7C875B6B8D317
7D1E65854A93B3258E958580F68967> |-
/h <1C60D8A8C9B7EF325775475DF3D1B0B27A404434A272CC181E12E5AE3EA5
FA5195B94701A2CB8ECCEF26E77FBD2772913C378AEA8414AA80F1368D48ACF9
8FDE99D26EC81FF4ABB02708407D46> |-
/p <1C60D8A8C9B7EF32A0B41A53EBE6749D7F1D554D2EEEDBE528E4DF4F27C6
8B132667088E2CCFD5B8C2F4BD9886641042EAE3AE2B7EC45950B53B52E2D085
5DAF2994F404CF28DCF85FE6E11A2492090B91CC86F14F8183EA65A06E8C99FA
40C002AC95B5921C9F> |-
/t <1C60D8A8C9B854D087962750C7AB8C2DE814C7AA5896E4261C28B7B0745C
837D7A572BF084CF374ED4190DF3BA3B4978431D4BCAAF0B7CA530186105F444
1E0373459972113E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LJKSOQ+Helvetica /Encoding get
dup 102 /f put
dup 104 /h put
dup 112 /p put
dup 116 /t put
pop
%ADOEndSubsetFont
reset_gvm
/LJKSOQ+Helvetica*1 
[45{/.notdef}rp /hyphen /.notdef /slash /zero /one /two /.notdef 
/four /.notdef /six /seven 2{/.notdef}rp /colon 6{/.notdef}rp /A 
/B /C /.notdef /E /F /G /H /I 
2{/.notdef}rp /L /M 2{/.notdef}rp /P 3{/.notdef}rp /T 12{/.notdef}rp 
/a /.notdef /c /d /e /f /.notdef /h 
/i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef 
/r /s /t /u /.notdef /w 136{/.notdef}rp]
LJKSOQ+Helvetica nf
LJKSOQ+Helvetica*1 [3.985 0 0 -3.985 0 0 ]msf
693.233 44.8258 mo
(topofrh)
[1.10785 2.21564 3.35938 2.21564 2.30334 1.32697 0 ]xsh
672.013 51.501 mo
688.949 51.501 li
688.949 51.999 li
672.013 51.999 li
cp
f
true set_gvm
%ADOBeginSubsetFont: BSFBAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LJKSOQ+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/b <1C60D8A8C9B7EF32A0B41A53EBE674A1DC6328A95CB7F7FD80222CB3F60C
63FEB1CCEFD603A15737E871F5F68DC4F7982DC3B6B65DDFD59EBD2711A129A8
095B76528E75E8F700D2BA16447CDE1899AC69460A6E1A85B5C8430594051470
38755392B0F1E120BE50A2EB25> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LJKSOQ+Helvetica /Encoding get
dup 98 /b put
pop
%ADOEndSubsetFont
reset_gvm
/LJKSOQ+Helvetica*1 
[45{/.notdef}rp /hyphen /.notdef /slash /zero /one /two /.notdef 
/four /.notdef /six /seven 2{/.notdef}rp /colon 6{/.notdef}rp /A 
/B /C /.notdef /E /F /G /H /I 
2{/.notdef}rp /L /M 2{/.notdef}rp /P 3{/.notdef}rp /T 12{/.notdef}rp 
/a /b /c /d /e /f /.notdef /h 
/i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef 
/r /s /t /u /.notdef /w 136{/.notdef}rp]
LJKSOQ+Helvetica nf
LJKSOQ+Helvetica*1 [3.985 0 0 -3.985 0 0 ]msf
690.144 51.9988 mo
(baseofrh)
[2.21564 2.2157 1.99249 3.35931 2.2157 2.25153 1.32697 0 ]xsh
672.013 65.249 mo
688.402 65.249 li
688.402 65.7471 li
672.013 65.7471 li
cp
f
true set_gvm
%ADOBeginSubsetFont: BSFBAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LJKSOQ+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g <1C60D8A8C9B7EF3227AC7586E5FB33D5C8DEEB48CCD4CD550432513F9766
7BE66F064BF9527C72645B6E74D5E9CB0F1182BFAA887A91915C167F3C7A54ED
42D3056473BCA43280CA32655532BD4A59191206C9AB8B9E84661E14AAD88C43
24DD515EC8D6F22DFC9DD6B197E98EDCD6D439E1962D302D8A2D8CBDC6EFA854
7A01CBB036585DFC1D7156F517> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LJKSOQ+Helvetica /Encoding get
dup 103 /g put
pop
%ADOEndSubsetFont
reset_gvm
/LJKSOQ+Helvetica*1 
[45{/.notdef}rp /hyphen /.notdef /slash /zero /one /two /.notdef 
/four /.notdef /six /seven 2{/.notdef}rp /colon 6{/.notdef}rp /A 
/B /C /.notdef /E /F /G /H /I 
2{/.notdef}rp /L /M 2{/.notdef}rp /P 3{/.notdef}rp /T 12{/.notdef}rp 
/a /b /c /d /e /f /g /h 
/i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef 
/r /s /t /u /.notdef /w 136{/.notdef}rp]
LJKSOQ+Helvetica nf
LJKSOQ+Helvetica*1 [3.985 0 0 -3.985 0 0 ]msf
689.597 65.7468 mo
(capheight)
[1.99249 2.21564 3.41119 2.21564 2.2157 .884644 2.21564 2.2157 0 ]xsh
672.013 71.226 mo
686.061 71.226 li
686.061 71.724 li
672.013 71.724 li
cp
f
true set_gvm
%ADOBeginSubsetFont: BSFBAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LJKSOQ+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/x <1C60D8A8C9B7A73DC536B07219E610DA3D900E26266CAE433B9B41E82B76
68DC3ED1EA5B70CA81214A5B1866491838CE196A1EA047F92E83DA8A01C72521
991FDA5E9C765A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LJKSOQ+Helvetica /Encoding get
dup 120 /x put
pop
%ADOEndSubsetFont
reset_gvm
/LJKSOQ+Helvetica*1 
[45{/.notdef}rp /hyphen /.notdef /slash /zero /one /two /.notdef 
/four /.notdef /six /seven 2{/.notdef}rp /colon 6{/.notdef}rp /A 
/B /C /.notdef /E /F /G /H /I 
2{/.notdef}rp /L /M 2{/.notdef}rp /P 3{/.notdef}rp /T 12{/.notdef}rp 
/a /b /c /d /e /f /g /h 
/i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef 
/r /s /t /u /.notdef /w /x 135{/.notdef}rp]
LJKSOQ+Helvetica nf
LJKSOQ+Helvetica*1 [3.985 0 0 -3.985 0 0 ]msf
687.256 71.7244 mo
(baseoftext)
[2.21564 2.2157 1.99249 3.35931 2.2157 2.25153 1.10779 2.2157 1.99249 0 ]xsh
672.013 740.7 mo
697.915 740.7 li
697.915 741.198 li
672.013 741.198 li
cp
f
LJKSOQ+Helvetica*1 [3.985 0 0 -3.985 0 0 ]msf
699.11 741.198 mo
(short)
[1.99249 2.21564 2.2157 1.32697 0 ]xsh
672.013 751.16 mo
697.02 751.16 li
697.02 751.658 li
672.013 751.658 li
cp
f
LJKSOQ+Helvetica*1 [3.985 0 0 -3.985 0 0 ]msf
698.215 751.658 mo
(stand)
[1.99249 1.10785 2.21564 2.2157 0 ]xsh
713.855 763.115 mo
732.285 763.115 li
732.285 763.613 li
713.855 763.613 li
cp
f
LJKSOQ+Helvetica*1 [3.985 0 0 -3.985 0 0 ]msf
733.481 763.613 mo
(dropfolio)
[2.21564 1.32703 2.21564 3.31152 1.10785 2.21564 .884705 .884644 0 ]xsh
1 setflat
444.093 453.487 mo
503.251 453.487 li
503.251 500.915 li
444.093 500.915 li
cp
0 0 0 .5 cmyk
f
.249 lw
4 ml
true sadj
444.093 453.487 mo
503.251 453.487 li
503.251 500.915 li
444.093 500.915 li
cp
@
377.913 464.446 mo
437.07 464.446 li
437.07 500.915 li
377.913 500.915 li
cp
f
377.913 464.446 mo
437.07 464.446 li
437.07 500.915 li
377.913 500.915 li
cp
@
509.546 481.05 mo
545.457 481.05 li
545.457 500.915 li
509.546 500.915 li
cp
f
509.546 481.05 mo
545.457 481.05 li
545.457 500.915 li
509.546 500.915 li
cp
@
gsave
232.194 581.201 mo
332.918 581.201 li
332.918 614.291 li
232.194 614.291 li
cp
clp
792 -33.015 mo
792 1190.98 li
0 1190.98 li
0 -33.015 li
cp
level3{
gsave
clp
[0 .305405 -1 0 0 1191 ]ct
/0 
<<
/ShadingType 2 
/BBox [-4007.85 -792 -.0491631 0 ] 
/ColorSpace /0 /CSA get_res
/Coords [-1996.65 -334.911 -1891.94 -334.911 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.375 .75 0 0 ]
/C1 [.125 .25 0 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.125 .25 0 0 ]
/C1 [.375 .75 0 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.375 .75 0 0 ]
/C1 [.375 .75 0 .14 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.375 .75 0 .14 ]
/C1 [.375 .75 0 0 ]
/N 1 
>>
]
/Bounds [.30338 .71349 .86517 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 .305405 -1 0 0 1191 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~?X@#D>[(B7=]ea+<E)pr;Gg7e:JOVX91qlK84Q0>779L06:!k$5!;%k4$#A^3&``Q1c.!D0eb:7/hJV)
.k2tr-RL/d,U4KW+WqmM+X&$S,:"N\-71)f-n-Sp.k</%/M8Y/0/,+81,:XB1c7-K2`E]U3BB2_4?Pbi
5!M7s5X@_'6UO7177Ka:84Z<D8kVfN9heAX:Jakb;,U=k<)cju<``@)=]np3>?kE=?=$uG?XI/I?XI/I
?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I
~>
<~^V.7j\@8lPZEUL6X/W%pUnaWVSt):<Q^3l!OcPN]MM[+BKS"`(I=$9bGBItIE,KN.BkV*h@prbO>[(?4
<`Dso:JFMT8Ol3;69me%6:4127n?3E9MJ8X;,U=l<``C+>$P?>?XR>QA7]CeBkhF#DJsK6F*)PJG^4U^
I"$QqJV&Q/L51VCMi<XVOHG]iQ'Rc(R[]h<StMdOUSOcbW2Zi!Xfek4ZEppG\%&u[]Y2%o^V@Ou^V@Ou
^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou
~>
0 <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<N?*"9eu7#RLhG$k3[W%hK<c',2/s(Dn#
.)B0Y:*ZlLJ+sS<V+WqjI*#fe6(`*r&'GD)k&.]6[$k!CK#R:P;"9S]+~>
]
>>
-1996.65 -334.911 -1891.94 -334.911 [-4007.85 -792 -.0491631 0 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
grestore
.498 lw
232.194 581.201 mo
332.918 581.201 li
332.918 614.291 li
232.194 614.291 li
cp
true sop
0 0 0 1 nzopmsc
@
331.645 619.019 mo
331.645 619.019 331.645 610.11 326.191 596.474 cv
320.737 582.838 315.463 581.502 307.1 581.383 cv
307.1 581.383 316.736 584.838 321.464 596.11 cv
326.191 607.382 326.191 618.973 326.191 618.973 cv
331.645 619.019 li
false sop
0 0 0 0 cmyk
f
gsave
378.007 584.838 mo
581.524 584.838 li
581.524 707.266 li
378.007 707.266 li
cp
clp
0 -33.015 mo
792 -33.015 li
792 1190.98 li
0 1190.98 li
cp
level3{
gsave
clp
[1 0 0 .619598 0 1191 ]ct
/1 
<<
/ShadingType 2 
/BBox [0 -1975.5 792 -.0242329 ] 
/ColorSpace /0 /CSA get_res
/Coords [377.758 -981.484 581.773 -981.484 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.5 0 .5 0 ]
/C1 [0 0 0 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 0 0 0 ]
/C1 [.25 0 .25 0 ]
/N 1 
>>
]
/Bounds [.7 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 .619598 0 1191 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~IsuipI!^3dH$OXYG'8"MFE;JBEH#i7DJa6,CMITuBP;$jAS#C^@q&kS?sd5H?!LT<>$5!1=&r@%<)cdo
;,L.c:JOVX9M7uM8OuBB7R]a66UO1+5X7Ot5!;"i4$#A^3&``R2)I-G1,1L;0/"q0/1`;$.Ocbn-RL,c
,U4NX+WqmL*Zc=A)]K\5)&O/*()7Mt'+tlh&.]9]%1EXQ$47(F#6tG:"U"o/!W`9$!!*-'!sAc3#7(SA
$4@7O%1Wm[&J>]i'GVB"(Dn#.)]Th<*ZlLJ+X/-V,pjrd-n-Vq.kE8)0/#"61,CaD2)[BQ3B9,^4?Ykl
~>
0 <~IsuipI!^3dH$OXYG'8"MFE;JBEH#i7DJa6,CMITuBP;$jAS#C^@q&kS?sd5H?!LT<>$5!1=&r@%<)cdo
;,L.c:JOVX9M7uM8OuBB7R]a66UO1+5X7Ot5!;"i4$#A^3&``R2)I-G1,1L;0/"q0/1`;$.Ocbn-RL,c
,U4NX+WqmL*Zc=A)]K\5)&O/*()7Mt'+tlh&.]9]%1EXQ$47(F#6tG:"U"o/!W`9$!!*-'!sAc3#7(SA
$4@7O%1Wm[&J>]i'GVB"(Dn#.)]Th<*ZlLJ+X/-V,pjrd-n-Vq.kE8)0/#"61,CaD2)[BQ3B9,^4?Ykl
~>
0 ]
>>
377.758 -981.484 581.773 -981.484 [0 -1975.5 792 -.0242329 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
grestore
378.007 584.838 mo
581.524 584.838 li
581.524 707.266 li
378.007 707.266 li
cp
true sop
0 gry
@
gsave
331.3 761.621 mo
403.059 761.621 li
403.059 689.862 li
331.3 689.862 li
cp
clp
gsave
378.007 584.838 mo
581.524 584.838 li
581.524 707.266 li
378.007 707.266 li
cp
clp
1 lc
379.887 706.929 mo
379.887 706.929 li
380.759 705.309 mo
380.759 705.309 li
386.988 702.569 mo
386.988 702.569 li
377.893 703.939 mo
377.893 703.939 li
377.27 696.09 mo
377.27 696.09 li
385.244 705.434 mo
385.244 705.434 li
389.355 692.104 mo
389.355 692.104 li
389.729 700.824 mo
389.729 700.824 li
390.974 708.05 mo
390.974 708.05 li
391.099 695.841 mo
391.099 695.841 li
384.995 690.733 mo
384.995 690.733 li
383.624 703.192 mo
383.624 703.192 li
391.224 703.565 mo
391.224 703.565 li
392.22 700.326 mo
392.22 700.326 li
380.634 692.228 mo
380.634 692.228 li
383.001 692.727 mo
383.001 692.727 li
380.011 701.697 mo
380.011 701.697 li
383.25 697.585 mo
383.25 697.585 li
381.008 696.464 mo
381.008 696.464 li
387.112 698.707 mo
387.112 698.707 li
388.483 695.467 mo
388.483 695.467 li
385.742 694.72 mo
385.742 694.72 li
391.847 693.35 mo
391.847 693.35 li
396.954 706.431 mo
396.954 706.431 li
397.826 704.811 mo
397.826 704.811 li
394.961 703.441 mo
394.961 703.441 li
394.338 695.592 mo
394.338 695.592 li
402.311 704.936 mo
402.311 704.936 li
402.062 690.235 mo
402.062 690.235 li
400.692 702.693 mo
400.692 702.693 li
395.21 689.986 mo
395.21 689.986 li
393.964 699.454 mo
393.964 699.454 li
393.964 706.431 mo
393.964 706.431 li
395.086 693.35 mo
395.086 693.35 li
397.702 691.73 mo
397.702 691.73 li
400.069 692.228 mo
400.069 692.228 li
397.079 701.198 mo
397.079 701.198 li
400.318 697.087 mo
400.318 697.087 li
398.076 695.966 mo
398.076 695.966 li
402.81 694.222 mo
402.81 694.222 li
400.318 689.737 mo
400.318 689.737 li
395.459 689.861 mo
395.459 689.861 li
false sop
0 gry
@
grestore
grestore
gsave
403.029 761.621 mo
474.788 761.621 li
474.788 689.862 li
403.029 689.862 li
cp
clp
gsave
378.007 584.838 mo
581.524 584.838 li
581.524 707.266 li
378.007 707.266 li
cp
clp
1 lc
404.026 691.356 mo
404.026 691.356 li
407.389 690.858 mo
407.389 690.858 li
406.143 693.972 mo
406.143 693.972 li
404.275 696.464 mo
404.275 696.464 li
422.837 694.595 mo
422.837 694.595 li
410.504 693.474 mo
410.504 693.474 li
405.894 697.835 mo
405.894 697.835 li
414.989 694.471 mo
414.989 694.471 li
417.854 698.457 mo
417.854 698.457 li
406.766 701.572 mo
406.766 701.572 li
403.901 699.454 mo
403.901 699.454 li
406.019 705.683 mo
406.019 705.683 li
404.026 706.68 mo
404.026 706.68 li
416.484 702.693 mo
416.484 702.693 li
420.969 705.559 mo
420.969 705.559 li
416.982 705.683 mo
416.982 705.683 li
410.504 707.303 mo
410.504 707.303 li
409.258 704.313 mo
409.258 704.313 li
419.474 694.845 mo
419.474 694.845 li
427.322 692.851 mo
427.322 692.851 li
413.12 691.481 mo
413.12 691.481 li
415.487 696.589 mo
415.487 696.589 li
418.975 691.855 mo
418.975 691.855 li
430.562 695.094 mo
430.562 695.094 li
432.181 695.966 mo
432.181 695.966 li
419.225 700.575 mo
419.225 700.575 li
429.191 703.939 mo
429.191 703.939 li
433.427 703.565 mo
433.427 703.565 li
433.552 693.1 mo
433.552 693.1 li
441.4 692.477 mo
441.4 692.477 li
432.057 700.451 mo
432.057 700.451 li
445.387 704.562 mo
445.387 704.562 li
436.666 704.936 mo
436.666 704.936 li
429.44 706.182 mo
429.44 706.182 li
423.087 703.067 mo
423.087 703.067 li
424.831 704.936 mo
424.831 704.936 li
441.649 706.306 mo
441.649 706.306 li
446.757 700.202 mo
446.757 700.202 li
434.299 698.831 mo
434.299 698.831 li
447.006 693.35 mo
447.006 693.35 li
437.538 692.104 mo
437.538 692.104 li
419.225 703.814 mo
419.225 703.814 li
430.562 692.104 mo
430.562 692.104 li
424.457 690.858 mo
424.457 690.858 li
433.925 706.431 mo
433.925 706.431 li
422.962 707.801 mo
422.962 707.801 li
437.164 707.427 mo
437.164 707.427 li
445.262 695.841 mo
445.262 695.841 li
408.386 701.323 mo
408.386 701.323 li
413.618 699.828 mo
413.618 699.828 li
409.632 697.461 mo
409.632 697.461 li
412.497 703.192 mo
412.497 703.192 li
413.868 706.182 mo
413.868 706.182 li
423.959 698.208 mo
423.959 698.208 li
421.342 698.457 mo
421.342 698.457 li
428.444 701.074 mo
428.444 701.074 li
428.693 697.71 mo
428.693 697.71 li
426.575 696.09 mo
426.575 696.09 li
425.329 701.946 mo
425.329 701.946 li
444.764 698.208 mo
444.764 698.208 li
435.794 695.218 mo
435.794 695.218 li
439.905 698.457 mo
439.905 698.457 li
441.026 696.215 mo
441.026 696.215 li
438.784 702.319 mo
438.784 702.319 li
false sop
0 gry
@
442.023 703.69 mo
442.023 703.69 li
442.771 700.949 mo
442.771 700.949 li
444.141 707.054 mo
444.141 707.054 li
451.616 706.929 mo
451.616 706.929 li
452.488 705.309 mo
452.488 705.309 li
458.717 702.569 mo
458.717 702.569 li
449.623 703.939 mo
449.623 703.939 li
449 696.09 mo
449 696.09 li
456.973 705.434 mo
456.973 705.434 li
461.084 692.104 mo
461.084 692.104 li
461.458 700.824 mo
461.458 700.824 li
462.704 708.05 mo
462.704 708.05 li
462.828 695.841 mo
462.828 695.841 li
456.724 690.733 mo
456.724 690.733 li
455.353 703.192 mo
455.353 703.192 li
446.134 690.858 mo
446.134 690.858 li
448.626 699.952 mo
448.626 699.952 li
448.626 706.929 mo
448.626 706.929 li
462.953 703.565 mo
462.953 703.565 li
416.235 692.602 mo
416.235 692.602 li
463.95 700.326 mo
463.95 700.326 li
452.363 692.228 mo
452.363 692.228 li
454.73 692.727 mo
454.73 692.727 li
451.741 701.697 mo
451.741 701.697 li
454.98 697.585 mo
454.98 697.585 li
452.737 696.464 mo
452.737 696.464 li
458.842 698.707 mo
458.842 698.707 li
460.212 695.467 mo
460.212 695.467 li
457.471 694.72 mo
457.471 694.72 li
463.576 693.35 mo
463.576 693.35 li
468.684 706.431 mo
468.684 706.431 li
469.556 704.811 mo
469.556 704.811 li
466.69 703.441 mo
466.69 703.441 li
466.067 695.592 mo
466.067 695.592 li
474.041 704.936 mo
474.041 704.936 li
473.792 690.235 mo
473.792 690.235 li
472.421 702.693 mo
472.421 702.693 li
466.94 689.986 mo
466.94 689.986 li
465.694 699.454 mo
465.694 699.454 li
465.694 706.431 mo
465.694 706.431 li
466.815 693.35 mo
466.815 693.35 li
469.431 691.73 mo
469.431 691.73 li
471.798 692.228 mo
471.798 692.228 li
468.808 701.198 mo
468.808 701.198 li
472.047 697.087 mo
472.047 697.087 li
469.805 695.966 mo
469.805 695.966 li
474.539 694.222 mo
474.539 694.222 li
438.909 708.175 mo
438.909 708.175 li
472.047 689.737 mo
472.047 689.737 li
402.78 694.222 mo
402.78 694.222 li
467.189 689.861 mo
467.189 689.861 li
@
grestore
grestore
gsave
474.758 761.621 mo
546.517 761.621 li
546.517 689.862 li
474.758 689.862 li
cp
clp
gsave
378.007 584.838 mo
581.524 584.838 li
581.524 707.266 li
378.007 707.266 li
cp
clp
gsave
0 -33.015 mo
792 -33.015 li
792 1190.98 li
0 1190.98 li
cp
clp
1 lc
475.755 691.356 mo
475.755 691.356 li
479.119 690.858 mo
479.119 690.858 li
477.873 693.972 mo
477.873 693.972 li
476.004 696.464 mo
476.004 696.464 li
494.567 694.595 mo
494.567 694.595 li
482.233 693.474 mo
482.233 693.474 li
477.624 697.835 mo
477.624 697.835 li
486.718 694.471 mo
486.718 694.471 li
489.583 698.457 mo
489.583 698.457 li
478.496 701.572 mo
478.496 701.572 li
475.63 699.454 mo
475.63 699.454 li
477.748 705.683 mo
477.748 705.683 li
475.755 706.68 mo
475.755 706.68 li
488.213 702.693 mo
488.213 702.693 li
492.698 705.559 mo
492.698 705.559 li
488.711 705.683 mo
488.711 705.683 li
482.233 707.303 mo
482.233 707.303 li
480.987 704.313 mo
480.987 704.313 li
491.203 694.845 mo
491.203 694.845 li
499.052 692.851 mo
499.052 692.851 li
484.849 691.481 mo
484.849 691.481 li
487.216 696.589 mo
487.216 696.589 li
490.705 691.855 mo
490.705 691.855 li
502.291 695.094 mo
502.291 695.094 li
503.91 695.966 mo
503.91 695.966 li
490.954 700.575 mo
490.954 700.575 li
500.92 703.939 mo
500.92 703.939 li
505.156 703.565 mo
505.156 703.565 li
505.281 693.1 mo
505.281 693.1 li
513.13 692.477 mo
513.13 692.477 li
503.786 700.451 mo
503.786 700.451 li
517.116 704.562 mo
517.116 704.562 li
508.395 704.936 mo
508.395 704.936 li
501.17 706.182 mo
501.17 706.182 li
494.816 703.067 mo
494.816 703.067 li
496.56 704.936 mo
496.56 704.936 li
513.379 706.306 mo
513.379 706.306 li
518.487 700.202 mo
518.487 700.202 li
506.028 698.831 mo
506.028 698.831 li
518.736 693.35 mo
518.736 693.35 li
509.267 692.104 mo
509.267 692.104 li
490.954 703.814 mo
490.954 703.814 li
502.291 692.104 mo
502.291 692.104 li
496.186 690.858 mo
496.186 690.858 li
505.655 706.431 mo
505.655 706.431 li
494.691 707.801 mo
494.691 707.801 li
508.894 707.427 mo
508.894 707.427 li
516.992 695.841 mo
516.992 695.841 li
480.115 701.323 mo
480.115 701.323 li
485.348 699.828 mo
485.348 699.828 li
481.361 697.461 mo
481.361 697.461 li
484.226 703.192 mo
484.226 703.192 li
485.597 706.182 mo
485.597 706.182 li
495.688 698.208 mo
495.688 698.208 li
493.072 698.457 mo
493.072 698.457 li
500.173 701.074 mo
500.173 701.074 li
500.422 697.71 mo
500.422 697.71 li
498.304 696.09 mo
498.304 696.09 li
497.058 701.946 mo
497.058 701.946 li
516.493 698.208 mo
516.493 698.208 li
507.523 695.218 mo
507.523 695.218 li
511.635 698.457 mo
511.635 698.457 li
512.756 696.215 mo
512.756 696.215 li
510.513 702.319 mo
510.513 702.319 li
false sop
0 gry
@
513.752 703.69 mo
513.752 703.69 li
514.5 700.949 mo
514.5 700.949 li
515.87 707.054 mo
515.87 707.054 li
523.345 706.929 mo
523.345 706.929 li
524.217 705.309 mo
524.217 705.309 li
530.446 702.569 mo
530.446 702.569 li
521.352 703.939 mo
521.352 703.939 li
520.729 696.09 mo
520.729 696.09 li
528.702 705.434 mo
528.702 705.434 li
532.813 692.104 mo
532.813 692.104 li
533.187 700.824 mo
533.187 700.824 li
534.433 708.05 mo
534.433 708.05 li
534.558 695.841 mo
534.558 695.841 li
528.453 690.733 mo
528.453 690.733 li
527.083 703.192 mo
527.083 703.192 li
517.864 690.858 mo
517.864 690.858 li
520.355 699.952 mo
520.355 699.952 li
520.355 706.929 mo
520.355 706.929 li
534.682 703.565 mo
534.682 703.565 li
487.964 692.602 mo
487.964 692.602 li
535.679 700.326 mo
535.679 700.326 li
524.093 692.228 mo
524.093 692.228 li
526.46 692.727 mo
526.46 692.727 li
523.47 701.697 mo
523.47 701.697 li
526.709 697.585 mo
526.709 697.585 li
524.466 696.464 mo
524.466 696.464 li
530.571 698.707 mo
530.571 698.707 li
531.941 695.467 mo
531.941 695.467 li
529.201 694.72 mo
529.201 694.72 li
535.305 693.35 mo
535.305 693.35 li
540.413 706.431 mo
540.413 706.431 li
541.285 704.811 mo
541.285 704.811 li
538.42 703.441 mo
538.42 703.441 li
537.797 695.592 mo
537.797 695.592 li
545.77 704.936 mo
545.77 704.936 li
545.521 690.235 mo
545.521 690.235 li
544.15 702.693 mo
544.15 702.693 li
538.669 689.986 mo
538.669 689.986 li
537.423 699.454 mo
537.423 699.454 li
537.423 706.431 mo
537.423 706.431 li
538.544 693.35 mo
538.544 693.35 li
541.16 691.73 mo
541.16 691.73 li
543.528 692.228 mo
543.528 692.228 li
540.538 701.198 mo
540.538 701.198 li
543.777 697.087 mo
543.777 697.087 li
541.534 695.966 mo
541.534 695.966 li
546.268 694.222 mo
546.268 694.222 li
510.638 708.175 mo
510.638 708.175 li
543.777 689.737 mo
543.777 689.737 li
474.509 694.222 mo
474.509 694.222 li
538.918 689.861 mo
538.918 689.861 li
@
grestore
grestore
grestore
gsave
546.487 761.621 mo
618.246 761.621 li
618.246 689.862 li
546.487 689.862 li
cp
clp
gsave
378.007 584.838 mo
581.524 584.838 li
581.524 707.266 li
378.007 707.266 li
cp
clp
1 lc
547.484 691.356 mo
547.484 691.356 li
550.848 690.858 mo
550.848 690.858 li
549.602 693.972 mo
549.602 693.972 li
547.733 696.464 mo
547.733 696.464 li
566.296 694.595 mo
566.296 694.595 li
553.962 693.474 mo
553.962 693.474 li
549.353 697.835 mo
549.353 697.835 li
558.447 694.471 mo
558.447 694.471 li
561.313 698.457 mo
561.313 698.457 li
550.225 701.572 mo
550.225 701.572 li
547.36 699.454 mo
547.36 699.454 li
549.477 705.683 mo
549.477 705.683 li
547.484 706.68 mo
547.484 706.68 li
559.942 702.693 mo
559.942 702.693 li
564.427 705.559 mo
564.427 705.559 li
560.441 705.683 mo
560.441 705.683 li
553.962 707.303 mo
553.962 707.303 li
552.717 704.313 mo
552.717 704.313 li
562.932 694.845 mo
562.932 694.845 li
570.781 692.851 mo
570.781 692.851 li
556.579 691.481 mo
556.579 691.481 li
558.946 696.589 mo
558.946 696.589 li
562.434 691.855 mo
562.434 691.855 li
574.02 695.094 mo
574.02 695.094 li
575.64 695.966 mo
575.64 695.966 li
562.683 700.575 mo
562.683 700.575 li
572.65 703.939 mo
572.65 703.939 li
576.885 703.565 mo
576.885 703.565 li
577.01 693.1 mo
577.01 693.1 li
575.515 700.451 mo
575.515 700.451 li
580.125 704.936 mo
580.125 704.936 li
572.899 706.182 mo
572.899 706.182 li
566.545 703.067 mo
566.545 703.067 li
568.289 704.936 mo
568.289 704.936 li
577.758 698.831 mo
577.758 698.831 li
580.997 692.104 mo
580.997 692.104 li
562.683 703.814 mo
562.683 703.814 li
574.02 692.104 mo
574.02 692.104 li
567.916 690.858 mo
567.916 690.858 li
577.384 706.431 mo
577.384 706.431 li
566.421 707.801 mo
566.421 707.801 li
580.623 707.427 mo
580.623 707.427 li
551.845 701.323 mo
551.845 701.323 li
557.077 699.828 mo
557.077 699.828 li
553.09 697.461 mo
553.09 697.461 li
555.956 703.192 mo
555.956 703.192 li
557.326 706.182 mo
557.326 706.182 li
567.417 698.208 mo
567.417 698.208 li
564.801 698.457 mo
564.801 698.457 li
571.902 701.074 mo
571.902 701.074 li
572.151 697.71 mo
572.151 697.71 li
570.034 696.09 mo
570.034 696.09 li
568.788 701.946 mo
568.788 701.946 li
579.253 695.218 mo
579.253 695.218 li
582.243 702.319 mo
582.243 702.319 li
559.693 692.602 mo
559.693 692.602 li
582.367 708.175 mo
582.367 708.175 li
546.238 694.222 mo
546.238 694.222 li
false sop
0 gry
@
grestore
grestore
gsave
331.3 689.891 mo
403.059 689.891 li
403.059 618.132 li
331.3 618.132 li
cp
clp
gsave
378.007 584.838 mo
581.524 584.838 li
581.524 707.266 li
378.007 707.266 li
cp
clp
gsave
0 -33.015 mo
792 -33.015 li
792 1190.98 li
0 1190.98 li
cp
clp
1 lc
378.765 659.618 mo
378.765 659.618 li
381.257 661.487 mo
381.257 661.487 li
379.388 642.924 mo
379.388 642.924 li
378.267 655.257 mo
378.267 655.257 li
382.627 659.867 mo
382.627 659.867 li
379.264 650.772 mo
379.264 650.772 li
383.624 649.277 mo
383.624 649.277 li
386.365 658.995 mo
386.365 658.995 li
384.247 661.86 mo
384.247 661.86 li
390.476 659.742 mo
390.476 659.742 li
391.473 661.736 mo
391.473 661.736 li
387.486 649.277 mo
387.486 649.277 li
390.352 644.793 mo
390.352 644.793 li
390.476 648.779 mo
390.476 648.779 li
392.096 655.257 mo
392.096 655.257 li
390.476 656.005 mo
390.476 656.005 li
378.392 644.543 mo
378.392 644.543 li
377.644 638.439 mo
377.644 638.439 li
380.883 649.028 mo
380.883 649.028 li
379.887 635.2 mo
379.887 635.2 li
380.759 633.58 mo
380.759 633.58 li
385.368 646.537 mo
385.368 646.537 li
388.732 636.57 mo
388.732 636.57 li
386.988 630.839 mo
386.988 630.839 li
377.893 632.21 mo
377.893 632.21 li
377.27 624.361 mo
377.27 624.361 li
385.244 633.705 mo
385.244 633.705 li
389.355 620.374 mo
389.355 620.374 li
389.729 629.095 mo
389.729 629.095 li
390.974 636.321 mo
390.974 636.321 li
387.86 642.675 mo
387.86 642.675 li
389.729 640.93 mo
389.729 640.93 li
391.099 624.112 mo
391.099 624.112 li
384.995 619.004 mo
384.995 619.004 li
383.624 631.462 mo
383.624 631.462 li
388.607 646.537 mo
388.607 646.537 li
391.224 631.836 mo
391.224 631.836 li
392.096 644.419 mo
392.096 644.419 li
392.22 628.597 mo
392.22 628.597 li
380.634 620.499 mo
380.634 620.499 li
386.116 657.375 mo
386.116 657.375 li
384.621 652.143 mo
384.621 652.143 li
382.254 656.13 mo
382.254 656.13 li
387.984 653.264 mo
387.984 653.264 li
390.974 651.894 mo
390.974 651.894 li
383.001 641.803 mo
383.001 641.803 li
383.25 644.419 mo
383.25 644.419 li
384.745 637.691 mo
384.745 637.691 li
382.503 637.068 mo
382.503 637.068 li
380.883 639.186 mo
380.883 639.186 li
386.739 640.432 mo
386.739 640.432 li
383.001 620.997 mo
383.001 620.997 li
380.011 629.967 mo
380.011 629.967 li
383.25 625.856 mo
383.25 625.856 li
381.008 624.735 mo
381.008 624.735 li
387.112 626.977 mo
387.112 626.977 li
388.483 623.738 mo
388.483 623.738 li
385.742 622.991 mo
385.742 622.991 li
391.847 621.62 mo
391.847 621.62 li
393.217 661.237 mo
393.217 661.237 li
392.719 657.874 mo
392.719 657.874 li
395.833 659.12 mo
395.833 659.12 li
398.325 660.988 mo
398.325 660.988 li
396.456 642.425 mo
396.456 642.425 li
false sop
0 gry
@
395.335 654.759 mo
395.335 654.759 li
399.695 659.369 mo
399.695 659.369 li
397.328 651.769 mo
397.328 651.769 li
400.318 647.409 mo
400.318 647.409 li
401.315 661.362 mo
401.315 661.362 li
395.459 644.045 mo
395.459 644.045 li
394.712 637.941 mo
394.712 637.941 li
393.342 652.143 mo
393.342 652.143 li
397.951 648.53 mo
397.951 648.53 li
393.715 646.288 mo
393.715 646.288 li
396.954 634.701 mo
396.954 634.701 li
397.826 633.082 mo
397.826 633.082 li
402.436 646.038 mo
402.436 646.038 li
394.961 631.711 mo
394.961 631.711 li
394.338 623.863 mo
394.338 623.863 li
402.311 633.206 mo
402.311 633.206 li
402.062 618.506 mo
402.062 618.506 li
400.692 630.964 mo
400.692 630.964 li
395.21 618.257 mo
395.21 618.257 li
393.964 627.725 mo
393.964 627.725 li
393.964 634.701 mo
393.964 634.701 li
393.964 640.93 mo
393.964 640.93 li
395.086 621.62 mo
395.086 621.62 li
397.702 620.001 mo
397.702 620.001 li
401.689 651.645 mo
401.689 651.645 li
399.321 655.631 mo
399.321 655.631 li
400.069 641.304 mo
400.069 641.304 li
400.318 643.92 mo
400.318 643.92 li
401.813 637.193 mo
401.813 637.193 li
399.571 636.57 mo
399.571 636.57 li
397.951 638.688 mo
397.951 638.688 li
400.069 620.499 mo
400.069 620.499 li
397.079 629.469 mo
397.079 629.469 li
400.318 625.358 mo
400.318 625.358 li
398.076 624.237 mo
398.076 624.237 li
402.81 622.492 mo
402.81 622.492 li
379.388 688.77 mo
379.388 688.77 li
377.644 684.285 mo
377.644 684.285 li
379.887 681.046 mo
379.887 681.046 li
380.759 679.426 mo
380.759 679.426 li
388.732 682.416 mo
388.732 682.416 li
386.988 676.686 mo
386.988 676.686 li
377.893 678.056 mo
377.893 678.056 li
377.395 668.463 mo
377.395 668.463 li
385.244 679.551 mo
385.244 679.551 li
389.355 666.221 mo
389.355 666.221 li
389.729 674.941 mo
389.729 674.941 li
390.974 682.167 mo
390.974 682.167 li
387.86 688.521 mo
387.86 688.521 li
389.729 686.777 mo
389.729 686.777 li
391.099 669.958 mo
391.099 669.958 li
384.995 664.85 mo
384.995 664.85 li
383.624 677.308 mo
383.624 677.308 li
378.142 664.601 mo
378.142 664.601 li
391.224 677.682 mo
391.224 677.682 li
392.22 674.443 mo
392.22 674.443 li
380.634 666.345 mo
380.634 666.345 li
383.001 687.649 mo
383.001 687.649 li
384.745 683.538 mo
384.745 683.538 li
382.503 682.915 mo
382.503 682.915 li
380.883 685.033 mo
380.883 685.033 li
386.739 686.278 mo
386.739 686.278 li
383.001 666.844 mo
383.001 666.844 li
380.011 675.813 mo
380.011 675.813 li
@
383.126 673.446 mo
383.126 673.446 li
381.008 670.581 mo
381.008 670.581 li
387.112 672.823 mo
387.112 672.823 li
388.483 669.584 mo
388.483 669.584 li
385.368 669.709 mo
385.368 669.709 li
391.847 667.466 mo
391.847 667.466 li
396.456 688.272 mo
396.456 688.272 li
395.459 689.891 mo
395.459 689.891 li
394.712 683.787 mo
394.712 683.787 li
396.954 680.548 mo
396.954 680.548 li
397.826 678.928 mo
397.826 678.928 li
394.961 677.558 mo
394.961 677.558 li
394.338 669.709 mo
394.338 669.709 li
402.311 679.053 mo
402.311 679.053 li
402.062 664.352 mo
402.062 664.352 li
400.692 676.81 mo
400.692 676.81 li
395.21 664.103 mo
395.21 664.103 li
393.964 673.571 mo
393.964 673.571 li
393.964 680.548 mo
393.964 680.548 li
393.964 686.777 mo
393.964 686.777 li
393.84 666.719 mo
393.84 666.719 li
397.702 665.847 mo
397.702 665.847 li
400.069 687.15 mo
400.069 687.15 li
400.318 689.767 mo
400.318 689.767 li
401.813 683.039 mo
401.813 683.039 li
399.571 682.416 mo
399.571 682.416 li
397.951 684.534 mo
397.951 684.534 li
400.069 666.345 mo
400.069 666.345 li
397.079 675.315 mo
397.079 675.315 li
400.318 671.204 mo
400.318 671.204 li
398.076 670.083 mo
398.076 670.083 li
402.81 668.339 mo
402.81 668.339 li
400.318 618.007 mo
400.318 618.007 li
402.062 690.265 mo
402.062 690.265 li
395.21 690.016 mo
395.21 690.016 li
395.459 618.132 mo
395.459 618.132 li
@
grestore
grestore
grestore
gsave
403.029 689.891 mo
474.788 689.891 li
474.788 618.132 li
403.029 618.132 li
cp
clp
1 lc
404.026 619.627 mo
404.026 619.627 li
407.389 619.129 mo
407.389 619.129 li
406.143 622.243 mo
406.143 622.243 li
404.275 624.735 mo
404.275 624.735 li
422.837 622.866 mo
422.837 622.866 li
410.504 621.745 mo
410.504 621.745 li
405.894 626.105 mo
405.894 626.105 li
414.989 622.742 mo
414.989 622.742 li
417.854 626.728 mo
417.854 626.728 li
406.766 629.843 mo
406.766 629.843 li
403.901 627.725 mo
403.901 627.725 li
406.019 633.954 mo
406.019 633.954 li
404.026 634.951 mo
404.026 634.951 li
416.484 630.964 mo
416.484 630.964 li
420.969 633.829 mo
420.969 633.829 li
416.982 633.954 mo
416.982 633.954 li
410.504 635.573 mo
410.504 635.573 li
409.258 632.583 mo
409.258 632.583 li
419.474 623.115 mo
419.474 623.115 li
427.322 621.122 mo
427.322 621.122 li
413.12 619.752 mo
413.12 619.752 li
415.487 624.859 mo
415.487 624.859 li
418.975 620.125 mo
418.975 620.125 li
430.562 623.364 mo
430.562 623.364 li
432.181 624.237 mo
432.181 624.237 li
419.225 628.846 mo
419.225 628.846 li
429.191 632.21 mo
429.191 632.21 li
433.427 631.836 mo
433.427 631.836 li
433.552 621.371 mo
433.552 621.371 li
441.4 620.748 mo
441.4 620.748 li
432.057 628.721 mo
432.057 628.721 li
445.387 632.833 mo
445.387 632.833 li
436.666 633.206 mo
436.666 633.206 li
429.44 634.452 mo
429.44 634.452 li
423.087 631.338 mo
423.087 631.338 li
424.831 633.206 mo
424.831 633.206 li
441.649 634.577 mo
441.649 634.577 li
446.757 628.472 mo
446.757 628.472 li
434.299 627.102 mo
434.299 627.102 li
447.006 621.62 mo
447.006 621.62 li
437.538 620.374 mo
437.538 620.374 li
419.225 632.085 mo
419.225 632.085 li
430.562 620.374 mo
430.562 620.374 li
424.457 619.129 mo
424.457 619.129 li
433.925 634.701 mo
433.925 634.701 li
422.962 636.072 mo
422.962 636.072 li
437.164 635.698 mo
437.164 635.698 li
445.262 624.112 mo
445.262 624.112 li
408.386 629.594 mo
408.386 629.594 li
413.618 628.099 mo
413.618 628.099 li
409.632 625.732 mo
409.632 625.732 li
412.497 631.462 mo
412.497 631.462 li
413.868 634.452 mo
413.868 634.452 li
423.959 626.479 mo
423.959 626.479 li
421.342 626.728 mo
421.342 626.728 li
428.444 629.344 mo
428.444 629.344 li
428.693 625.981 mo
428.693 625.981 li
426.575 624.361 mo
426.575 624.361 li
425.329 630.216 mo
425.329 630.216 li
444.764 626.479 mo
444.764 626.479 li
435.794 623.489 mo
435.794 623.489 li
439.905 626.728 mo
439.905 626.728 li
441.026 624.486 mo
441.026 624.486 li
438.784 630.59 mo
438.784 630.59 li
false sop
0 gry
@
442.023 631.961 mo
442.023 631.961 li
442.771 629.22 mo
442.771 629.22 li
444.141 635.324 mo
444.141 635.324 li
404.026 672.699 mo
404.026 672.699 li
407.389 672.201 mo
407.389 672.201 li
406.143 675.315 mo
406.143 675.315 li
404.275 677.807 mo
404.275 677.807 li
422.837 675.938 mo
422.837 675.938 li
410.504 674.817 mo
410.504 674.817 li
405.894 679.177 mo
405.894 679.177 li
413.494 676.686 mo
413.494 676.686 li
417.854 679.8 mo
417.854 679.8 li
406.766 682.915 mo
406.766 682.915 li
403.901 680.797 mo
403.901 680.797 li
406.019 687.026 mo
406.019 687.026 li
404.026 688.023 mo
404.026 688.023 li
416.484 684.036 mo
416.484 684.036 li
420.969 686.901 mo
420.969 686.901 li
416.982 687.026 mo
416.982 687.026 li
410.504 688.645 mo
410.504 688.645 li
409.756 687.026 mo
409.756 687.026 li
421.218 674.941 mo
421.218 674.941 li
427.322 674.194 mo
427.322 674.194 li
413.12 672.823 mo
413.12 672.823 li
416.733 677.433 mo
416.733 677.433 li
418.228 674.194 mo
418.228 674.194 li
430.562 676.436 mo
430.562 676.436 li
432.181 677.308 mo
432.181 677.308 li
419.225 681.918 mo
419.225 681.918 li
429.191 685.282 mo
429.191 685.282 li
434.922 683.538 mo
434.922 683.538 li
433.552 674.443 mo
433.552 674.443 li
441.4 673.82 mo
441.4 673.82 li
432.057 681.793 mo
432.057 681.793 li
445.387 685.905 mo
445.387 685.905 li
436.666 686.278 mo
436.666 686.278 li
429.44 687.524 mo
429.44 687.524 li
423.087 684.41 mo
423.087 684.41 li
424.831 686.278 mo
424.831 686.278 li
441.649 687.649 mo
441.649 687.649 li
446.757 681.544 mo
446.757 681.544 li
434.299 680.174 mo
434.299 680.174 li
447.006 674.692 mo
447.006 674.692 li
437.538 673.446 mo
437.538 673.446 li
419.225 685.157 mo
419.225 685.157 li
430.562 673.446 mo
430.562 673.446 li
424.332 673.446 mo
424.332 673.446 li
433.925 687.773 mo
433.925 687.773 li
421.342 688.645 mo
421.342 688.645 li
443.394 671.702 mo
443.394 671.702 li
437.164 688.77 mo
437.164 688.77 li
445.262 677.184 mo
445.262 677.184 li
408.386 682.665 mo
408.386 682.665 li
413.618 681.171 mo
413.618 681.171 li
409.632 678.803 mo
409.632 678.803 li
412.497 684.534 mo
412.497 684.534 li
413.868 687.524 mo
413.868 687.524 li
423.959 679.551 mo
423.959 679.551 li
421.342 679.8 mo
421.342 679.8 li
428.07 681.295 mo
428.07 681.295 li
428.693 679.053 mo
428.693 679.053 li
426.575 677.433 mo
426.575 677.433 li
425.329 683.288 mo
425.329 683.288 li
444.764 679.551 mo
444.764 679.551 li
@
435.794 676.561 mo
435.794 676.561 li
438.909 679.676 mo
438.909 679.676 li
441.026 677.558 mo
441.026 677.558 li
438.784 683.662 mo
438.784 683.662 li
442.023 685.033 mo
442.023 685.033 li
442.771 682.292 mo
442.771 682.292 li
444.141 688.396 mo
444.141 688.396 li
404.026 642.799 mo
404.026 642.799 li
407.389 642.301 mo
407.389 642.301 li
406.143 645.415 mo
406.143 645.415 li
404.275 647.907 mo
404.275 647.907 li
422.837 646.038 mo
422.837 646.038 li
410.504 644.917 mo
410.504 644.917 li
405.894 649.277 mo
405.894 649.277 li
414.49 647.533 mo
414.49 647.533 li
417.854 649.9 mo
417.854 649.9 li
406.766 653.015 mo
406.766 653.015 li
403.901 650.897 mo
403.901 650.897 li
406.019 657.126 mo
406.019 657.126 li
404.026 658.123 mo
404.026 658.123 li
416.484 654.136 mo
416.484 654.136 li
420.969 657.002 mo
420.969 657.002 li
416.982 657.126 mo
416.982 657.126 li
410.504 658.746 mo
410.504 658.746 li
409.756 657.126 mo
409.756 657.126 li
421.218 645.042 mo
421.218 645.042 li
427.322 644.294 mo
427.322 644.294 li
414.49 643.796 mo
414.49 643.796 li
418.228 648.032 mo
418.228 648.032 li
418.975 643.298 mo
418.975 643.298 li
430.562 646.537 mo
430.562 646.537 li
432.181 647.409 mo
432.181 647.409 li
419.225 652.018 mo
419.225 652.018 li
429.191 655.382 mo
429.191 655.382 li
434.922 653.638 mo
434.922 653.638 li
433.552 644.543 mo
433.552 644.543 li
441.4 643.92 mo
441.4 643.92 li
432.057 651.894 mo
432.057 651.894 li
445.387 656.005 mo
445.387 656.005 li
436.666 656.379 mo
436.666 656.379 li
429.44 657.625 mo
429.44 657.625 li
423.087 654.51 mo
423.087 654.51 li
424.831 656.379 mo
424.831 656.379 li
441.649 657.749 mo
441.649 657.749 li
446.757 651.645 mo
446.757 651.645 li
434.299 650.274 mo
434.299 650.274 li
445.885 644.793 mo
445.885 644.793 li
438.161 644.793 mo
438.161 644.793 li
419.225 655.257 mo
419.225 655.257 li
430.562 643.547 mo
430.562 643.547 li
424.332 643.547 mo
424.332 643.547 li
433.925 657.874 mo
433.925 657.874 li
421.342 658.746 mo
421.342 658.746 li
443.394 641.803 mo
443.394 641.803 li
437.164 658.87 mo
437.164 658.87 li
445.262 647.284 mo
445.262 647.284 li
408.386 652.766 mo
408.386 652.766 li
413.618 651.271 mo
413.618 651.271 li
409.632 648.904 mo
409.632 648.904 li
412.497 654.635 mo
412.497 654.635 li
413.868 657.625 mo
413.868 657.625 li
423.959 649.651 mo
423.959 649.651 li
421.342 649.9 mo
421.342 649.9 li
428.07 651.395 mo
428.07 651.395 li
@
428.693 649.153 mo
428.693 649.153 li
426.575 647.533 mo
426.575 647.533 li
425.329 653.389 mo
425.329 653.389 li
444.764 649.651 mo
444.764 649.651 li
435.794 646.661 mo
435.794 646.661 li
439.905 649.9 mo
439.905 649.9 li
441.026 647.658 mo
441.026 647.658 li
438.784 653.762 mo
438.784 653.762 li
@
440.653 654.012 mo
440.653 654.012 li
442.771 652.392 mo
442.771 652.392 li
444.141 658.497 mo
444.141 658.497 li
447.878 661.736 mo
447.878 661.736 li
447.38 658.372 mo
447.38 658.372 li
450.495 659.618 mo
450.495 659.618 li
452.986 661.487 mo
452.986 661.487 li
451.118 642.924 mo
451.118 642.924 li
449.996 655.257 mo
449.996 655.257 li
454.357 659.867 mo
454.357 659.867 li
450.993 650.772 mo
450.993 650.772 li
455.353 649.277 mo
455.353 649.277 li
458.094 658.995 mo
458.094 658.995 li
455.976 661.86 mo
455.976 661.86 li
462.205 659.742 mo
462.205 659.742 li
463.202 661.736 mo
463.202 661.736 li
459.215 649.277 mo
459.215 649.277 li
462.081 644.793 mo
462.081 644.793 li
462.205 648.779 mo
462.205 648.779 li
463.825 655.257 mo
463.825 655.257 li
462.205 656.005 mo
462.205 656.005 li
450.121 644.543 mo
450.121 644.543 li
449.373 638.439 mo
449.373 638.439 li
448.003 652.641 mo
448.003 652.641 li
452.613 649.028 mo
452.613 649.028 li
448.377 646.786 mo
448.377 646.786 li
451.616 635.2 mo
451.616 635.2 li
452.488 633.58 mo
452.488 633.58 li
457.098 646.537 mo
457.098 646.537 li
460.461 636.57 mo
460.461 636.57 li
458.717 630.839 mo
458.717 630.839 li
449.623 632.21 mo
449.623 632.21 li
449 624.361 mo
449 624.361 li
456.973 633.705 mo
456.973 633.705 li
461.084 620.374 mo
461.084 620.374 li
461.458 629.095 mo
461.458 629.095 li
462.704 636.321 mo
462.704 636.321 li
459.589 642.675 mo
459.589 642.675 li
461.458 640.93 mo
461.458 640.93 li
462.828 624.112 mo
462.828 624.112 li
456.724 619.004 mo
456.724 619.004 li
455.353 631.462 mo
455.353 631.462 li
446.134 619.129 mo
446.134 619.129 li
448.626 628.223 mo
448.626 628.223 li
460.337 646.537 mo
460.337 646.537 li
448.626 635.2 mo
448.626 635.2 li
448.626 641.429 mo
448.626 641.429 li
462.953 631.836 mo
462.953 631.836 li
463.825 644.419 mo
463.825 644.419 li
416.235 620.873 mo
416.235 620.873 li
463.95 628.597 mo
463.95 628.597 li
452.363 620.499 mo
452.363 620.499 li
457.845 657.375 mo
457.845 657.375 li
456.35 652.143 mo
456.35 652.143 li
453.983 656.13 mo
453.983 656.13 li
459.714 653.264 mo
459.714 653.264 li
462.704 651.894 mo
462.704 651.894 li
454.73 641.803 mo
454.73 641.803 li
454.98 644.419 mo
454.98 644.419 li
456.475 637.691 mo
456.475 637.691 li
454.232 637.068 mo
454.232 637.068 li
452.613 639.186 mo
452.613 639.186 li
458.468 640.432 mo
458.468 640.432 li
454.73 620.997 mo
454.73 620.997 li
@
451.741 629.967 mo
451.741 629.967 li
454.98 625.856 mo
454.98 625.856 li
452.737 624.735 mo
452.737 624.735 li
458.842 626.977 mo
458.842 626.977 li
460.212 623.738 mo
460.212 623.738 li
457.471 622.991 mo
457.471 622.991 li
463.576 621.62 mo
463.576 621.62 li
464.946 661.237 mo
464.946 661.237 li
464.448 657.874 mo
464.448 657.874 li
467.562 659.12 mo
467.562 659.12 li
470.054 660.988 mo
470.054 660.988 li
468.185 642.425 mo
468.185 642.425 li
467.064 654.759 mo
467.064 654.759 li
471.424 659.369 mo
471.424 659.369 li
469.057 651.769 mo
469.057 651.769 li
472.047 647.409 mo
472.047 647.409 li
473.044 661.362 mo
473.044 661.362 li
467.189 644.045 mo
467.189 644.045 li
466.441 637.941 mo
466.441 637.941 li
465.071 652.143 mo
465.071 652.143 li
469.68 648.53 mo
469.68 648.53 li
465.445 646.288 mo
465.445 646.288 li
468.684 634.701 mo
468.684 634.701 li
469.556 633.082 mo
469.556 633.082 li
474.165 646.038 mo
474.165 646.038 li
466.69 631.711 mo
466.69 631.711 li
466.067 623.863 mo
466.067 623.863 li
474.041 633.206 mo
474.041 633.206 li
473.792 618.506 mo
473.792 618.506 li
472.421 630.964 mo
472.421 630.964 li
466.94 618.257 mo
466.94 618.257 li
465.694 627.725 mo
465.694 627.725 li
465.694 634.701 mo
465.694 634.701 li
465.694 640.93 mo
465.694 640.93 li
466.815 621.62 mo
466.815 621.62 li
469.431 620.001 mo
469.431 620.001 li
473.418 651.645 mo
473.418 651.645 li
471.051 655.631 mo
471.051 655.631 li
471.798 641.304 mo
471.798 641.304 li
472.047 643.92 mo
472.047 643.92 li
473.542 637.193 mo
473.542 637.193 li
471.3 636.57 mo
471.3 636.57 li
469.68 638.688 mo
469.68 638.688 li
471.798 620.499 mo
471.798 620.499 li
468.808 629.469 mo
468.808 629.469 li
472.047 625.358 mo
472.047 625.358 li
469.805 624.237 mo
469.805 624.237 li
474.539 622.492 mo
474.539 622.492 li
451.118 688.77 mo
451.118 688.77 li
449.373 684.285 mo
449.373 684.285 li
451.616 681.046 mo
451.616 681.046 li
452.488 679.426 mo
452.488 679.426 li
460.461 682.416 mo
460.461 682.416 li
458.717 676.686 mo
458.717 676.686 li
449.623 678.056 mo
449.623 678.056 li
449.124 668.463 mo
449.124 668.463 li
456.973 679.551 mo
456.973 679.551 li
461.084 666.221 mo
461.084 666.221 li
461.458 674.941 mo
461.458 674.941 li
462.704 682.167 mo
462.704 682.167 li
459.589 688.521 mo
459.589 688.521 li
461.458 686.777 mo
461.458 686.777 li
462.828 669.958 mo
462.828 669.958 li
456.724 664.85 mo
456.724 664.85 li
@
455.353 677.308 mo
455.353 677.308 li
449.872 664.601 mo
449.872 664.601 li
448.626 674.069 mo
448.626 674.069 li
448.626 681.046 mo
448.626 681.046 li
448.626 687.275 mo
448.626 687.275 li
462.953 677.682 mo
462.953 677.682 li
463.95 674.443 mo
463.95 674.443 li
452.363 666.345 mo
452.363 666.345 li
454.73 687.649 mo
454.73 687.649 li
456.475 683.538 mo
456.475 683.538 li
454.232 682.915 mo
454.232 682.915 li
452.613 685.033 mo
452.613 685.033 li
458.468 686.278 mo
458.468 686.278 li
454.73 666.844 mo
454.73 666.844 li
451.741 675.813 mo
451.741 675.813 li
454.855 673.446 mo
454.855 673.446 li
452.737 670.581 mo
452.737 670.581 li
458.842 672.823 mo
458.842 672.823 li
460.212 669.584 mo
460.212 669.584 li
457.098 669.709 mo
457.098 669.709 li
463.576 667.466 mo
463.576 667.466 li
468.185 688.272 mo
468.185 688.272 li
467.189 689.891 mo
467.189 689.891 li
466.441 683.787 mo
466.441 683.787 li
468.684 680.548 mo
468.684 680.548 li
469.556 678.928 mo
469.556 678.928 li
466.69 677.558 mo
466.69 677.558 li
466.067 669.709 mo
466.067 669.709 li
474.041 679.053 mo
474.041 679.053 li
473.792 664.352 mo
473.792 664.352 li
472.421 676.81 mo
472.421 676.81 li
466.94 664.103 mo
466.94 664.103 li
465.694 673.571 mo
465.694 673.571 li
465.694 680.548 mo
465.694 680.548 li
465.694 686.777 mo
465.694 686.777 li
465.569 666.719 mo
465.569 666.719 li
469.431 665.847 mo
469.431 665.847 li
471.798 687.15 mo
471.798 687.15 li
472.047 689.767 mo
472.047 689.767 li
473.542 683.039 mo
473.542 683.039 li
471.3 682.416 mo
471.3 682.416 li
469.68 684.534 mo
469.68 684.534 li
471.798 666.345 mo
471.798 666.345 li
468.808 675.315 mo
468.808 675.315 li
472.047 671.204 mo
472.047 671.204 li
469.805 670.083 mo
469.805 670.083 li
474.539 668.339 mo
474.539 668.339 li
410.504 664.227 mo
410.504 664.227 li
408.261 668.214 mo
408.261 668.214 li
415.363 667.342 mo
415.363 667.342 li
433.676 671.204 mo
433.676 671.204 li
424.582 663.854 mo
424.582 663.854 li
417.48 670.207 mo
417.48 670.207 li
426.7 665.722 mo
426.7 665.722 li
420.72 663.48 mo
420.72 663.48 li
413.743 663.48 mo
413.743 663.48 li
407.514 663.48 mo
407.514 663.48 li
426.575 661.736 mo
426.575 661.736 li
428.444 667.217 mo
428.444 667.217 li
411.874 669.086 mo
411.874 669.086 li
405.77 665.722 mo
405.77 665.722 li
427.945 669.584 mo
427.945 669.584 li
418.975 666.594 mo
418.975 666.594 li
423.087 669.834 mo
423.087 669.834 li
@
424.208 667.591 mo
424.208 667.591 li
435.669 663.978 mo
435.669 663.978 li
438.161 667.84 mo
438.161 667.84 li
442.397 669.211 mo
442.397 669.211 li
445.262 664.726 mo
445.262 664.726 li
445.387 668.712 mo
445.387 668.712 li
433.302 664.477 mo
433.302 664.477 li
435.794 668.961 mo
435.794 668.961 li
@
431.558 666.719 mo
431.558 666.719 li
440.279 666.47 mo
440.279 666.47 li
442.771 662.608 mo
442.771 662.608 li
444.639 660.864 mo
444.639 660.864 li
443.518 666.47 mo
443.518 666.47 li
431.807 661.362 mo
431.807 661.362 li
447.006 664.352 mo
447.006 664.352 li
437.912 661.736 mo
437.912 661.736 li
438.161 664.352 mo
438.161 664.352 li
440.404 660.241 mo
440.404 660.241 li
406.642 638.065 mo
406.642 638.065 li
409.881 640.308 mo
409.881 640.308 li
411.501 641.18 mo
411.501 641.18 li
412.871 638.314 mo
412.871 638.314 li
420.72 637.691 mo
420.72 637.691 li
426.201 637.567 mo
426.201 637.567 li
416.858 637.318 mo
416.858 637.318 li
409.881 637.318 mo
409.881 637.318 li
403.652 637.318 mo
403.652 637.318 li
424.582 641.055 mo
424.582 641.055 li
405.894 641.304 mo
405.894 641.304 li
415.113 640.432 mo
415.113 640.432 li
420.346 641.429 mo
420.346 641.429 li
430.437 636.695 mo
430.437 636.695 li
434.299 641.678 mo
434.299 641.678 li
445.636 639.56 mo
445.636 639.56 li
430.686 639.062 mo
430.686 639.062 li
427.696 640.557 mo
427.696 640.557 li
436.417 640.308 mo
436.417 640.308 li
438.909 636.446 mo
438.909 636.446 li
439.656 640.308 mo
439.656 640.308 li
443.144 638.19 mo
443.144 638.19 li
434.299 638.19 mo
434.299 638.19 li
410.504 661.237 mo
410.504 661.237 li
416.11 662.109 mo
416.11 662.109 li
406.642 660.864 mo
406.642 660.864 li
412.497 659.12 mo
412.497 659.12 li
404.898 663.978 mo
404.898 663.978 li
417.73 661.487 mo
417.73 661.487 li
424.083 659.12 mo
424.083 659.12 li
472.047 618.007 mo
472.047 618.007 li
402.78 622.492 mo
402.78 622.492 li
402.78 668.339 mo
402.78 668.339 li
473.792 690.265 mo
473.792 690.265 li
466.94 690.016 mo
466.94 690.016 li
467.189 618.132 mo
467.189 618.132 li
@
grestore
gsave
474.758 689.891 mo
546.517 689.891 li
546.517 618.132 li
474.758 618.132 li
cp
clp
1 lc
475.755 619.627 mo
475.755 619.627 li
479.119 619.129 mo
479.119 619.129 li
477.873 622.243 mo
477.873 622.243 li
476.004 624.735 mo
476.004 624.735 li
494.567 622.866 mo
494.567 622.866 li
482.233 621.745 mo
482.233 621.745 li
477.624 626.105 mo
477.624 626.105 li
486.718 622.742 mo
486.718 622.742 li
489.583 626.728 mo
489.583 626.728 li
478.496 629.843 mo
478.496 629.843 li
475.63 627.725 mo
475.63 627.725 li
477.748 633.954 mo
477.748 633.954 li
475.755 634.951 mo
475.755 634.951 li
488.213 630.964 mo
488.213 630.964 li
492.698 633.829 mo
492.698 633.829 li
488.711 633.954 mo
488.711 633.954 li
482.233 635.573 mo
482.233 635.573 li
480.987 632.583 mo
480.987 632.583 li
491.203 623.115 mo
491.203 623.115 li
499.052 621.122 mo
499.052 621.122 li
484.849 619.752 mo
484.849 619.752 li
487.216 624.859 mo
487.216 624.859 li
490.705 620.125 mo
490.705 620.125 li
502.291 623.364 mo
502.291 623.364 li
503.91 624.237 mo
503.91 624.237 li
490.954 628.846 mo
490.954 628.846 li
500.92 632.21 mo
500.92 632.21 li
505.156 631.836 mo
505.156 631.836 li
505.281 621.371 mo
505.281 621.371 li
513.13 620.748 mo
513.13 620.748 li
503.786 628.721 mo
503.786 628.721 li
517.116 632.833 mo
517.116 632.833 li
508.395 633.206 mo
508.395 633.206 li
501.17 634.452 mo
501.17 634.452 li
494.816 631.338 mo
494.816 631.338 li
496.56 633.206 mo
496.56 633.206 li
513.379 634.577 mo
513.379 634.577 li
518.487 628.472 mo
518.487 628.472 li
506.028 627.102 mo
506.028 627.102 li
518.736 621.62 mo
518.736 621.62 li
509.267 620.374 mo
509.267 620.374 li
490.954 632.085 mo
490.954 632.085 li
502.291 620.374 mo
502.291 620.374 li
496.186 619.129 mo
496.186 619.129 li
505.655 634.701 mo
505.655 634.701 li
494.691 636.072 mo
494.691 636.072 li
508.894 635.698 mo
508.894 635.698 li
516.992 624.112 mo
516.992 624.112 li
480.115 629.594 mo
480.115 629.594 li
485.348 628.099 mo
485.348 628.099 li
481.361 625.732 mo
481.361 625.732 li
484.226 631.462 mo
484.226 631.462 li
485.597 634.452 mo
485.597 634.452 li
495.688 626.479 mo
495.688 626.479 li
493.072 626.728 mo
493.072 626.728 li
500.173 629.344 mo
500.173 629.344 li
500.422 625.981 mo
500.422 625.981 li
498.304 624.361 mo
498.304 624.361 li
497.058 630.216 mo
497.058 630.216 li
516.493 626.479 mo
516.493 626.479 li
507.523 623.489 mo
507.523 623.489 li
511.635 626.728 mo
511.635 626.728 li
512.756 624.486 mo
512.756 624.486 li
510.513 630.59 mo
510.513 630.59 li
false sop
0 gry
@
513.752 631.961 mo
513.752 631.961 li
514.5 629.22 mo
514.5 629.22 li
515.87 635.324 mo
515.87 635.324 li
475.755 672.699 mo
475.755 672.699 li
479.119 672.201 mo
479.119 672.201 li
477.873 675.315 mo
477.873 675.315 li
476.004 677.807 mo
476.004 677.807 li
494.567 675.938 mo
494.567 675.938 li
482.233 674.817 mo
482.233 674.817 li
477.624 679.177 mo
477.624 679.177 li
485.223 676.686 mo
485.223 676.686 li
489.583 679.8 mo
489.583 679.8 li
478.496 682.915 mo
478.496 682.915 li
475.63 680.797 mo
475.63 680.797 li
477.748 687.026 mo
477.748 687.026 li
475.755 688.023 mo
475.755 688.023 li
488.213 684.036 mo
488.213 684.036 li
492.698 686.901 mo
492.698 686.901 li
488.711 687.026 mo
488.711 687.026 li
482.233 688.645 mo
482.233 688.645 li
481.486 687.026 mo
481.486 687.026 li
492.947 674.941 mo
492.947 674.941 li
499.052 674.194 mo
499.052 674.194 li
484.849 672.823 mo
484.849 672.823 li
488.462 677.433 mo
488.462 677.433 li
489.957 674.194 mo
489.957 674.194 li
502.291 676.436 mo
502.291 676.436 li
503.91 677.308 mo
503.91 677.308 li
490.954 681.918 mo
490.954 681.918 li
500.92 685.282 mo
500.92 685.282 li
506.651 683.538 mo
506.651 683.538 li
505.281 674.443 mo
505.281 674.443 li
513.13 673.82 mo
513.13 673.82 li
503.786 681.793 mo
503.786 681.793 li
517.116 685.905 mo
517.116 685.905 li
508.395 686.278 mo
508.395 686.278 li
501.17 687.524 mo
501.17 687.524 li
494.816 684.41 mo
494.816 684.41 li
496.56 686.278 mo
496.56 686.278 li
513.379 687.649 mo
513.379 687.649 li
518.487 681.544 mo
518.487 681.544 li
506.028 680.174 mo
506.028 680.174 li
518.736 674.692 mo
518.736 674.692 li
509.267 673.446 mo
509.267 673.446 li
490.954 685.157 mo
490.954 685.157 li
502.291 673.446 mo
502.291 673.446 li
496.062 673.446 mo
496.062 673.446 li
505.655 687.773 mo
505.655 687.773 li
493.072 688.645 mo
493.072 688.645 li
515.123 671.702 mo
515.123 671.702 li
508.894 688.77 mo
508.894 688.77 li
516.992 677.184 mo
516.992 677.184 li
480.115 682.665 mo
480.115 682.665 li
485.348 681.171 mo
485.348 681.171 li
481.361 678.803 mo
481.361 678.803 li
484.226 684.534 mo
484.226 684.534 li
485.597 687.524 mo
485.597 687.524 li
495.688 679.551 mo
495.688 679.551 li
493.072 679.8 mo
493.072 679.8 li
499.799 681.295 mo
499.799 681.295 li
500.422 679.053 mo
500.422 679.053 li
498.304 677.433 mo
498.304 677.433 li
497.058 683.288 mo
497.058 683.288 li
516.493 679.551 mo
516.493 679.551 li
@
507.523 676.561 mo
507.523 676.561 li
510.638 679.676 mo
510.638 679.676 li
512.756 677.558 mo
512.756 677.558 li
510.513 683.662 mo
510.513 683.662 li
513.752 685.033 mo
513.752 685.033 li
514.5 682.292 mo
514.5 682.292 li
515.87 688.396 mo
515.87 688.396 li
475.755 642.799 mo
475.755 642.799 li
479.119 642.301 mo
479.119 642.301 li
477.873 645.415 mo
477.873 645.415 li
476.004 647.907 mo
476.004 647.907 li
494.567 646.038 mo
494.567 646.038 li
482.233 644.917 mo
482.233 644.917 li
477.624 649.277 mo
477.624 649.277 li
486.22 647.533 mo
486.22 647.533 li
489.583 649.9 mo
489.583 649.9 li
478.496 653.015 mo
478.496 653.015 li
475.63 650.897 mo
475.63 650.897 li
477.748 657.126 mo
477.748 657.126 li
475.755 658.123 mo
475.755 658.123 li
488.213 654.136 mo
488.213 654.136 li
492.698 657.002 mo
492.698 657.002 li
488.711 657.126 mo
488.711 657.126 li
482.233 658.746 mo
482.233 658.746 li
481.486 657.126 mo
481.486 657.126 li
492.947 645.042 mo
492.947 645.042 li
499.052 644.294 mo
499.052 644.294 li
486.22 643.796 mo
486.22 643.796 li
489.957 648.032 mo
489.957 648.032 li
490.705 643.298 mo
490.705 643.298 li
502.291 646.537 mo
502.291 646.537 li
503.91 647.409 mo
503.91 647.409 li
490.954 652.018 mo
490.954 652.018 li
500.92 655.382 mo
500.92 655.382 li
506.651 653.638 mo
506.651 653.638 li
505.281 644.543 mo
505.281 644.543 li
513.13 643.92 mo
513.13 643.92 li
503.786 651.894 mo
503.786 651.894 li
517.116 656.005 mo
517.116 656.005 li
508.395 656.379 mo
508.395 656.379 li
501.17 657.625 mo
501.17 657.625 li
494.816 654.51 mo
494.816 654.51 li
496.56 656.379 mo
496.56 656.379 li
513.379 657.749 mo
513.379 657.749 li
518.487 651.645 mo
518.487 651.645 li
506.028 650.274 mo
506.028 650.274 li
517.614 644.793 mo
517.614 644.793 li
509.89 644.793 mo
509.89 644.793 li
490.954 655.257 mo
490.954 655.257 li
502.291 643.547 mo
502.291 643.547 li
496.062 643.547 mo
496.062 643.547 li
505.655 657.874 mo
505.655 657.874 li
493.072 658.746 mo
493.072 658.746 li
515.123 641.803 mo
515.123 641.803 li
508.894 658.87 mo
508.894 658.87 li
516.992 647.284 mo
516.992 647.284 li
480.115 652.766 mo
480.115 652.766 li
485.348 651.271 mo
485.348 651.271 li
481.361 648.904 mo
481.361 648.904 li
484.226 654.635 mo
484.226 654.635 li
485.597 657.625 mo
485.597 657.625 li
495.688 649.651 mo
495.688 649.651 li
493.072 649.9 mo
493.072 649.9 li
499.799 651.395 mo
499.799 651.395 li
@
500.422 649.153 mo
500.422 649.153 li
498.304 647.533 mo
498.304 647.533 li
497.058 653.389 mo
497.058 653.389 li
516.493 649.651 mo
516.493 649.651 li
507.523 646.661 mo
507.523 646.661 li
511.635 649.9 mo
511.635 649.9 li
512.756 647.658 mo
512.756 647.658 li
510.513 653.762 mo
510.513 653.762 li
@
512.382 654.012 mo
512.382 654.012 li
514.5 652.392 mo
514.5 652.392 li
515.87 658.497 mo
515.87 658.497 li
519.608 661.736 mo
519.608 661.736 li
519.109 658.372 mo
519.109 658.372 li
522.224 659.618 mo
522.224 659.618 li
524.716 661.487 mo
524.716 661.487 li
522.847 642.924 mo
522.847 642.924 li
521.726 655.257 mo
521.726 655.257 li
526.086 659.867 mo
526.086 659.867 li
522.722 650.772 mo
522.722 650.772 li
527.083 649.277 mo
527.083 649.277 li
529.823 658.995 mo
529.823 658.995 li
527.706 661.86 mo
527.706 661.86 li
533.935 659.742 mo
533.935 659.742 li
534.931 661.736 mo
534.931 661.736 li
530.945 649.277 mo
530.945 649.277 li
533.81 644.793 mo
533.81 644.793 li
533.935 648.779 mo
533.935 648.779 li
535.554 655.257 mo
535.554 655.257 li
533.935 656.005 mo
533.935 656.005 li
521.85 644.543 mo
521.85 644.543 li
521.103 638.439 mo
521.103 638.439 li
519.732 652.641 mo
519.732 652.641 li
524.342 649.028 mo
524.342 649.028 li
520.106 646.786 mo
520.106 646.786 li
523.345 635.2 mo
523.345 635.2 li
524.217 633.58 mo
524.217 633.58 li
528.827 646.537 mo
528.827 646.537 li
532.191 636.57 mo
532.191 636.57 li
530.446 630.839 mo
530.446 630.839 li
521.352 632.21 mo
521.352 632.21 li
520.729 624.361 mo
520.729 624.361 li
528.702 633.705 mo
528.702 633.705 li
532.813 620.374 mo
532.813 620.374 li
533.187 629.095 mo
533.187 629.095 li
534.433 636.321 mo
534.433 636.321 li
531.318 642.675 mo
531.318 642.675 li
533.187 640.93 mo
533.187 640.93 li
534.558 624.112 mo
534.558 624.112 li
528.453 619.004 mo
528.453 619.004 li
527.083 631.462 mo
527.083 631.462 li
517.864 619.129 mo
517.864 619.129 li
520.355 628.223 mo
520.355 628.223 li
532.066 646.537 mo
532.066 646.537 li
520.355 635.2 mo
520.355 635.2 li
520.355 641.429 mo
520.355 641.429 li
534.682 631.836 mo
534.682 631.836 li
535.554 644.419 mo
535.554 644.419 li
487.964 620.873 mo
487.964 620.873 li
535.679 628.597 mo
535.679 628.597 li
524.093 620.499 mo
524.093 620.499 li
529.574 657.375 mo
529.574 657.375 li
528.079 652.143 mo
528.079 652.143 li
525.712 656.13 mo
525.712 656.13 li
531.443 653.264 mo
531.443 653.264 li
534.433 651.894 mo
534.433 651.894 li
526.46 641.803 mo
526.46 641.803 li
526.709 644.419 mo
526.709 644.419 li
528.204 637.691 mo
528.204 637.691 li
525.961 637.068 mo
525.961 637.068 li
524.342 639.186 mo
524.342 639.186 li
530.197 640.432 mo
530.197 640.432 li
526.46 620.997 mo
526.46 620.997 li
@
523.47 629.967 mo
523.47 629.967 li
526.709 625.856 mo
526.709 625.856 li
524.466 624.735 mo
524.466 624.735 li
530.571 626.977 mo
530.571 626.977 li
531.941 623.738 mo
531.941 623.738 li
529.201 622.991 mo
529.201 622.991 li
535.305 621.62 mo
535.305 621.62 li
536.676 661.237 mo
536.676 661.237 li
536.177 657.874 mo
536.177 657.874 li
539.292 659.12 mo
539.292 659.12 li
541.783 660.988 mo
541.783 660.988 li
539.915 642.425 mo
539.915 642.425 li
538.793 654.759 mo
538.793 654.759 li
543.154 659.369 mo
543.154 659.369 li
540.787 651.769 mo
540.787 651.769 li
543.777 647.409 mo
543.777 647.409 li
544.773 661.362 mo
544.773 661.362 li
538.918 644.045 mo
538.918 644.045 li
538.17 637.941 mo
538.17 637.941 li
536.8 652.143 mo
536.8 652.143 li
541.41 648.53 mo
541.41 648.53 li
537.174 646.288 mo
537.174 646.288 li
540.413 634.701 mo
540.413 634.701 li
541.285 633.082 mo
541.285 633.082 li
545.895 646.038 mo
545.895 646.038 li
538.42 631.711 mo
538.42 631.711 li
537.797 623.863 mo
537.797 623.863 li
545.77 633.206 mo
545.77 633.206 li
545.521 618.506 mo
545.521 618.506 li
544.15 630.964 mo
544.15 630.964 li
538.669 618.257 mo
538.669 618.257 li
537.423 627.725 mo
537.423 627.725 li
537.423 634.701 mo
537.423 634.701 li
537.423 640.93 mo
537.423 640.93 li
538.544 621.62 mo
538.544 621.62 li
541.16 620.001 mo
541.16 620.001 li
545.147 651.645 mo
545.147 651.645 li
542.78 655.631 mo
542.78 655.631 li
543.528 641.304 mo
543.528 641.304 li
543.777 643.92 mo
543.777 643.92 li
545.272 637.193 mo
545.272 637.193 li
543.029 636.57 mo
543.029 636.57 li
541.41 638.688 mo
541.41 638.688 li
543.528 620.499 mo
543.528 620.499 li
540.538 629.469 mo
540.538 629.469 li
543.777 625.358 mo
543.777 625.358 li
541.534 624.237 mo
541.534 624.237 li
546.268 622.492 mo
546.268 622.492 li
522.847 688.77 mo
522.847 688.77 li
521.103 684.285 mo
521.103 684.285 li
523.345 681.046 mo
523.345 681.046 li
524.217 679.426 mo
524.217 679.426 li
532.191 682.416 mo
532.191 682.416 li
530.446 676.686 mo
530.446 676.686 li
521.352 678.056 mo
521.352 678.056 li
520.854 668.463 mo
520.854 668.463 li
528.702 679.551 mo
528.702 679.551 li
532.813 666.221 mo
532.813 666.221 li
533.187 674.941 mo
533.187 674.941 li
534.433 682.167 mo
534.433 682.167 li
531.318 688.521 mo
531.318 688.521 li
533.187 686.777 mo
533.187 686.777 li
534.558 669.958 mo
534.558 669.958 li
528.453 664.85 mo
528.453 664.85 li
@
527.083 677.308 mo
527.083 677.308 li
521.601 664.601 mo
521.601 664.601 li
520.355 674.069 mo
520.355 674.069 li
520.355 681.046 mo
520.355 681.046 li
520.355 687.275 mo
520.355 687.275 li
534.682 677.682 mo
534.682 677.682 li
535.679 674.443 mo
535.679 674.443 li
524.093 666.345 mo
524.093 666.345 li
526.46 687.649 mo
526.46 687.649 li
528.204 683.538 mo
528.204 683.538 li
525.961 682.915 mo
525.961 682.915 li
524.342 685.033 mo
524.342 685.033 li
530.197 686.278 mo
530.197 686.278 li
526.46 666.844 mo
526.46 666.844 li
523.47 675.813 mo
523.47 675.813 li
526.584 673.446 mo
526.584 673.446 li
524.466 670.581 mo
524.466 670.581 li
530.571 672.823 mo
530.571 672.823 li
531.941 669.584 mo
531.941 669.584 li
528.827 669.709 mo
528.827 669.709 li
535.305 667.466 mo
535.305 667.466 li
539.915 688.272 mo
539.915 688.272 li
538.918 689.891 mo
538.918 689.891 li
538.17 683.787 mo
538.17 683.787 li
540.413 680.548 mo
540.413 680.548 li
541.285 678.928 mo
541.285 678.928 li
538.42 677.558 mo
538.42 677.558 li
537.797 669.709 mo
537.797 669.709 li
545.77 679.053 mo
545.77 679.053 li
545.521 664.352 mo
545.521 664.352 li
544.15 676.81 mo
544.15 676.81 li
538.669 664.103 mo
538.669 664.103 li
537.423 673.571 mo
537.423 673.571 li
537.423 680.548 mo
537.423 680.548 li
537.423 686.777 mo
537.423 686.777 li
537.298 666.719 mo
537.298 666.719 li
541.16 665.847 mo
541.16 665.847 li
543.528 687.15 mo
543.528 687.15 li
543.777 689.767 mo
543.777 689.767 li
545.272 683.039 mo
545.272 683.039 li
543.029 682.416 mo
543.029 682.416 li
541.41 684.534 mo
541.41 684.534 li
543.528 666.345 mo
543.528 666.345 li
540.538 675.315 mo
540.538 675.315 li
543.777 671.204 mo
543.777 671.204 li
541.534 670.083 mo
541.534 670.083 li
546.268 668.339 mo
546.268 668.339 li
482.233 664.227 mo
482.233 664.227 li
479.991 668.214 mo
479.991 668.214 li
487.092 667.342 mo
487.092 667.342 li
505.405 671.204 mo
505.405 671.204 li
496.311 663.854 mo
496.311 663.854 li
489.21 670.207 mo
489.21 670.207 li
498.429 665.722 mo
498.429 665.722 li
492.449 663.48 mo
492.449 663.48 li
485.472 663.48 mo
485.472 663.48 li
479.243 663.48 mo
479.243 663.48 li
498.304 661.736 mo
498.304 661.736 li
500.173 667.217 mo
500.173 667.217 li
483.604 669.086 mo
483.604 669.086 li
477.499 665.722 mo
477.499 665.722 li
499.675 669.584 mo
499.675 669.584 li
490.705 666.594 mo
490.705 666.594 li
494.816 669.834 mo
494.816 669.834 li
@
495.937 667.591 mo
495.937 667.591 li
507.399 663.978 mo
507.399 663.978 li
509.89 667.84 mo
509.89 667.84 li
514.126 669.211 mo
514.126 669.211 li
516.992 664.726 mo
516.992 664.726 li
517.116 668.712 mo
517.116 668.712 li
505.032 664.477 mo
505.032 664.477 li
507.523 668.961 mo
507.523 668.961 li
@
503.288 666.719 mo
503.288 666.719 li
512.008 666.47 mo
512.008 666.47 li
514.5 662.608 mo
514.5 662.608 li
516.369 660.864 mo
516.369 660.864 li
515.247 666.47 mo
515.247 666.47 li
503.537 661.362 mo
503.537 661.362 li
518.736 664.352 mo
518.736 664.352 li
509.641 661.736 mo
509.641 661.736 li
509.89 664.352 mo
509.89 664.352 li
512.133 660.241 mo
512.133 660.241 li
478.371 638.065 mo
478.371 638.065 li
481.61 640.308 mo
481.61 640.308 li
483.23 641.18 mo
483.23 641.18 li
484.6 638.314 mo
484.6 638.314 li
492.449 637.691 mo
492.449 637.691 li
497.93 637.567 mo
497.93 637.567 li
488.587 637.318 mo
488.587 637.318 li
481.61 637.318 mo
481.61 637.318 li
475.381 637.318 mo
475.381 637.318 li
496.311 641.055 mo
496.311 641.055 li
477.624 641.304 mo
477.624 641.304 li
486.843 640.432 mo
486.843 640.432 li
492.075 641.429 mo
492.075 641.429 li
502.166 636.695 mo
502.166 636.695 li
506.028 641.678 mo
506.028 641.678 li
517.365 639.56 mo
517.365 639.56 li
502.415 639.062 mo
502.415 639.062 li
499.425 640.557 mo
499.425 640.557 li
508.146 640.308 mo
508.146 640.308 li
510.638 636.446 mo
510.638 636.446 li
511.385 640.308 mo
511.385 640.308 li
514.874 638.19 mo
514.874 638.19 li
506.028 638.19 mo
506.028 638.19 li
482.233 661.237 mo
482.233 661.237 li
487.839 662.109 mo
487.839 662.109 li
478.371 660.864 mo
478.371 660.864 li
484.226 659.12 mo
484.226 659.12 li
476.627 663.978 mo
476.627 663.978 li
489.459 661.487 mo
489.459 661.487 li
495.813 659.12 mo
495.813 659.12 li
543.777 618.007 mo
543.777 618.007 li
474.509 622.492 mo
474.509 622.492 li
474.509 668.339 mo
474.509 668.339 li
545.521 690.265 mo
545.521 690.265 li
538.669 690.016 mo
538.669 690.016 li
538.918 618.132 mo
538.918 618.132 li
@
grestore
gsave
546.487 689.891 mo
618.246 689.891 li
618.246 618.132 li
546.487 618.132 li
cp
clp
gsave
378.007 584.838 mo
581.524 584.838 li
581.524 707.266 li
378.007 707.266 li
cp
clp
gsave
0 -33.015 mo
792 -33.015 li
792 1190.98 li
0 1190.98 li
cp
clp
1 lc
547.484 619.627 mo
547.484 619.627 li
550.848 619.129 mo
550.848 619.129 li
549.602 622.243 mo
549.602 622.243 li
547.733 624.735 mo
547.733 624.735 li
566.296 622.866 mo
566.296 622.866 li
553.962 621.745 mo
553.962 621.745 li
549.353 626.105 mo
549.353 626.105 li
558.447 622.742 mo
558.447 622.742 li
561.313 626.728 mo
561.313 626.728 li
550.225 629.843 mo
550.225 629.843 li
547.36 627.725 mo
547.36 627.725 li
549.477 633.954 mo
549.477 633.954 li
547.484 634.951 mo
547.484 634.951 li
559.942 630.964 mo
559.942 630.964 li
564.427 633.829 mo
564.427 633.829 li
560.441 633.954 mo
560.441 633.954 li
553.962 635.573 mo
553.962 635.573 li
552.717 632.583 mo
552.717 632.583 li
562.932 623.115 mo
562.932 623.115 li
570.781 621.122 mo
570.781 621.122 li
556.579 619.752 mo
556.579 619.752 li
558.946 624.859 mo
558.946 624.859 li
562.434 620.125 mo
562.434 620.125 li
574.02 623.364 mo
574.02 623.364 li
575.64 624.237 mo
575.64 624.237 li
562.683 628.846 mo
562.683 628.846 li
572.65 632.21 mo
572.65 632.21 li
576.885 631.836 mo
576.885 631.836 li
577.01 621.371 mo
577.01 621.371 li
575.515 628.721 mo
575.515 628.721 li
580.125 633.206 mo
580.125 633.206 li
572.899 634.452 mo
572.899 634.452 li
566.545 631.338 mo
566.545 631.338 li
568.289 633.206 mo
568.289 633.206 li
577.758 627.102 mo
577.758 627.102 li
580.997 620.374 mo
580.997 620.374 li
562.683 632.085 mo
562.683 632.085 li
574.02 620.374 mo
574.02 620.374 li
567.916 619.129 mo
567.916 619.129 li
577.384 634.701 mo
577.384 634.701 li
566.421 636.072 mo
566.421 636.072 li
580.623 635.698 mo
580.623 635.698 li
551.845 629.594 mo
551.845 629.594 li
557.077 628.099 mo
557.077 628.099 li
553.09 625.732 mo
553.09 625.732 li
555.956 631.462 mo
555.956 631.462 li
557.326 634.452 mo
557.326 634.452 li
567.417 626.479 mo
567.417 626.479 li
564.801 626.728 mo
564.801 626.728 li
571.902 629.344 mo
571.902 629.344 li
572.151 625.981 mo
572.151 625.981 li
570.034 624.361 mo
570.034 624.361 li
568.788 630.216 mo
568.788 630.216 li
579.253 623.489 mo
579.253 623.489 li
582.243 630.59 mo
582.243 630.59 li
547.484 672.699 mo
547.484 672.699 li
550.848 672.201 mo
550.848 672.201 li
549.602 675.315 mo
549.602 675.315 li
547.733 677.807 mo
547.733 677.807 li
566.296 675.938 mo
566.296 675.938 li
553.962 674.817 mo
553.962 674.817 li
549.353 679.177 mo
549.353 679.177 li
556.952 676.686 mo
556.952 676.686 li
561.313 679.8 mo
561.313 679.8 li
false sop
0 gry
@
550.225 682.915 mo
550.225 682.915 li
547.36 680.797 mo
547.36 680.797 li
549.477 687.026 mo
549.477 687.026 li
547.484 688.023 mo
547.484 688.023 li
559.942 684.036 mo
559.942 684.036 li
564.427 686.901 mo
564.427 686.901 li
560.441 687.026 mo
560.441 687.026 li
553.962 688.645 mo
553.962 688.645 li
553.215 687.026 mo
553.215 687.026 li
564.676 674.941 mo
564.676 674.941 li
570.781 674.194 mo
570.781 674.194 li
556.579 672.823 mo
556.579 672.823 li
560.192 677.433 mo
560.192 677.433 li
561.687 674.194 mo
561.687 674.194 li
574.02 676.436 mo
574.02 676.436 li
575.64 677.308 mo
575.64 677.308 li
562.683 681.918 mo
562.683 681.918 li
572.65 685.282 mo
572.65 685.282 li
578.38 683.538 mo
578.38 683.538 li
577.01 674.443 mo
577.01 674.443 li
575.515 681.793 mo
575.515 681.793 li
580.125 686.278 mo
580.125 686.278 li
572.899 687.524 mo
572.899 687.524 li
566.545 684.41 mo
566.545 684.41 li
568.289 686.278 mo
568.289 686.278 li
577.758 680.174 mo
577.758 680.174 li
580.997 673.446 mo
580.997 673.446 li
562.683 685.157 mo
562.683 685.157 li
574.02 673.446 mo
574.02 673.446 li
567.791 673.446 mo
567.791 673.446 li
577.384 687.773 mo
577.384 687.773 li
564.801 688.645 mo
564.801 688.645 li
580.623 688.77 mo
580.623 688.77 li
551.845 682.665 mo
551.845 682.665 li
557.077 681.171 mo
557.077 681.171 li
553.09 678.803 mo
553.09 678.803 li
555.956 684.534 mo
555.956 684.534 li
557.326 687.524 mo
557.326 687.524 li
567.417 679.551 mo
567.417 679.551 li
564.801 679.8 mo
564.801 679.8 li
571.529 681.295 mo
571.529 681.295 li
572.151 679.053 mo
572.151 679.053 li
570.034 677.433 mo
570.034 677.433 li
568.788 683.288 mo
568.788 683.288 li
579.253 676.561 mo
579.253 676.561 li
582.367 679.676 mo
582.367 679.676 li
582.243 683.662 mo
582.243 683.662 li
547.484 642.799 mo
547.484 642.799 li
550.848 642.301 mo
550.848 642.301 li
549.602 645.415 mo
549.602 645.415 li
547.733 647.907 mo
547.733 647.907 li
566.296 646.038 mo
566.296 646.038 li
553.962 644.917 mo
553.962 644.917 li
549.353 649.277 mo
549.353 649.277 li
557.949 647.533 mo
557.949 647.533 li
561.313 649.9 mo
561.313 649.9 li
550.225 653.015 mo
550.225 653.015 li
547.36 650.897 mo
547.36 650.897 li
549.477 657.126 mo
549.477 657.126 li
547.484 658.123 mo
547.484 658.123 li
559.942 654.136 mo
559.942 654.136 li
564.427 657.002 mo
564.427 657.002 li
560.441 657.126 mo
560.441 657.126 li
553.962 658.746 mo
553.962 658.746 li
@
553.215 657.126 mo
553.215 657.126 li
564.676 645.042 mo
564.676 645.042 li
570.781 644.294 mo
570.781 644.294 li
557.949 643.796 mo
557.949 643.796 li
561.687 648.032 mo
561.687 648.032 li
562.434 643.298 mo
562.434 643.298 li
574.02 646.537 mo
574.02 646.537 li
575.64 647.409 mo
575.64 647.409 li
562.683 652.018 mo
562.683 652.018 li
572.65 655.382 mo
572.65 655.382 li
578.38 653.638 mo
578.38 653.638 li
577.01 644.543 mo
577.01 644.543 li
575.515 651.894 mo
575.515 651.894 li
580.125 656.379 mo
580.125 656.379 li
572.899 657.625 mo
572.899 657.625 li
566.545 654.51 mo
566.545 654.51 li
568.289 656.379 mo
568.289 656.379 li
577.758 650.274 mo
577.758 650.274 li
581.62 644.793 mo
581.62 644.793 li
562.683 655.257 mo
562.683 655.257 li
574.02 643.547 mo
574.02 643.547 li
567.791 643.547 mo
567.791 643.547 li
577.384 657.874 mo
577.384 657.874 li
564.801 658.746 mo
564.801 658.746 li
580.623 658.87 mo
580.623 658.87 li
551.845 652.766 mo
551.845 652.766 li
557.077 651.271 mo
557.077 651.271 li
553.09 648.904 mo
553.09 648.904 li
555.956 654.635 mo
555.956 654.635 li
557.326 657.625 mo
557.326 657.625 li
567.417 649.651 mo
567.417 649.651 li
564.801 649.9 mo
564.801 649.9 li
571.529 651.395 mo
571.529 651.395 li
572.151 649.153 mo
572.151 649.153 li
570.034 647.533 mo
570.034 647.533 li
568.788 653.389 mo
568.788 653.389 li
579.253 646.661 mo
579.253 646.661 li
582.243 653.762 mo
582.243 653.762 li
559.693 620.873 mo
559.693 620.873 li
553.962 664.227 mo
553.962 664.227 li
551.72 668.214 mo
551.72 668.214 li
558.821 667.342 mo
558.821 667.342 li
577.135 671.204 mo
577.135 671.204 li
568.04 663.854 mo
568.04 663.854 li
560.939 670.207 mo
560.939 670.207 li
570.158 665.722 mo
570.158 665.722 li
564.178 663.48 mo
564.178 663.48 li
557.202 663.48 mo
557.202 663.48 li
550.972 663.48 mo
550.972 663.48 li
570.034 661.736 mo
570.034 661.736 li
571.902 667.217 mo
571.902 667.217 li
555.333 669.086 mo
555.333 669.086 li
549.228 665.722 mo
549.228 665.722 li
571.404 669.584 mo
571.404 669.584 li
562.434 666.594 mo
562.434 666.594 li
566.545 669.834 mo
566.545 669.834 li
567.666 667.591 mo
567.666 667.591 li
579.128 663.978 mo
579.128 663.978 li
581.62 667.84 mo
581.62 667.84 li
576.761 664.477 mo
576.761 664.477 li
579.253 668.961 mo
579.253 668.961 li
575.017 666.719 mo
575.017 666.719 li
575.266 661.362 mo
575.266 661.362 li
581.37 661.736 mo
581.37 661.736 li
@
581.62 664.352 mo
581.62 664.352 li
550.1 638.065 mo
550.1 638.065 li
553.339 640.308 mo
553.339 640.308 li
554.959 641.18 mo
554.959 641.18 li
556.329 638.314 mo
556.329 638.314 li
564.178 637.691 mo
564.178 637.691 li
569.66 637.567 mo
569.66 637.567 li
560.316 637.318 mo
560.316 637.318 li
@
553.339 637.318 mo
553.339 637.318 li
547.11 637.318 mo
547.11 637.318 li
568.04 641.055 mo
568.04 641.055 li
549.353 641.304 mo
549.353 641.304 li
558.572 640.432 mo
558.572 640.432 li
563.804 641.429 mo
563.804 641.429 li
573.896 636.695 mo
573.896 636.695 li
577.758 641.678 mo
577.758 641.678 li
574.145 639.062 mo
574.145 639.062 li
571.155 640.557 mo
571.155 640.557 li
579.875 640.308 mo
579.875 640.308 li
582.367 636.446 mo
582.367 636.446 li
577.758 638.19 mo
577.758 638.19 li
553.962 661.237 mo
553.962 661.237 li
559.569 662.109 mo
559.569 662.109 li
550.1 660.864 mo
550.1 660.864 li
555.956 659.12 mo
555.956 659.12 li
548.356 663.978 mo
548.356 663.978 li
561.188 661.487 mo
561.188 661.487 li
567.542 659.12 mo
567.542 659.12 li
546.238 622.492 mo
546.238 622.492 li
546.238 668.339 mo
546.238 668.339 li
@
grestore
grestore
grestore
gsave
331.3 618.162 mo
403.059 618.162 li
403.059 546.403 li
331.3 546.403 li
cp
clp
gsave
378.007 584.838 mo
581.524 584.838 li
581.524 707.266 li
378.007 707.266 li
cp
clp
1 lc
378.765 587.889 mo
378.765 587.889 li
381.257 589.757 mo
381.257 589.757 li
382.627 588.138 mo
382.627 588.138 li
386.365 587.266 mo
386.365 587.266 li
384.247 590.131 mo
384.247 590.131 li
390.476 588.013 mo
390.476 588.013 li
391.473 590.006 mo
391.473 590.006 li
390.476 584.276 mo
390.476 584.276 li
386.116 585.646 mo
386.116 585.646 li
382.254 584.4 mo
382.254 584.4 li
393.217 589.508 mo
393.217 589.508 li
392.719 586.144 mo
392.719 586.144 li
395.833 587.39 mo
395.833 587.39 li
398.325 589.259 mo
398.325 589.259 li
399.695 587.639 mo
399.695 587.639 li
401.315 589.633 mo
401.315 589.633 li
399.321 583.902 mo
399.321 583.902 li
379.388 617.041 mo
379.388 617.041 li
377.644 612.556 mo
377.644 612.556 li
379.887 609.317 mo
379.887 609.317 li
380.759 607.697 mo
380.759 607.697 li
388.732 610.687 mo
388.732 610.687 li
386.988 604.956 mo
386.988 604.956 li
377.893 606.327 mo
377.893 606.327 li
377.395 596.734 mo
377.395 596.734 li
385.244 607.822 mo
385.244 607.822 li
389.355 594.491 mo
389.355 594.491 li
389.729 603.212 mo
389.729 603.212 li
390.974 610.438 mo
390.974 610.438 li
387.86 616.792 mo
387.86 616.792 li
389.729 615.047 mo
389.729 615.047 li
391.099 598.229 mo
391.099 598.229 li
384.995 593.121 mo
384.995 593.121 li
383.624 605.579 mo
383.624 605.579 li
378.142 592.872 mo
378.142 592.872 li
391.224 605.953 mo
391.224 605.953 li
392.22 602.714 mo
392.22 602.714 li
380.634 594.616 mo
380.634 594.616 li
383.001 615.919 mo
383.001 615.919 li
384.745 611.808 mo
384.745 611.808 li
382.503 611.185 mo
382.503 611.185 li
380.883 613.303 mo
380.883 613.303 li
386.739 614.549 mo
386.739 614.549 li
383.001 595.114 mo
383.001 595.114 li
380.011 604.084 mo
380.011 604.084 li
383.126 601.717 mo
383.126 601.717 li
381.008 598.852 mo
381.008 598.852 li
387.112 601.094 mo
387.112 601.094 li
388.483 597.855 mo
388.483 597.855 li
385.368 597.98 mo
385.368 597.98 li
391.847 595.737 mo
391.847 595.737 li
396.456 616.542 mo
396.456 616.542 li
395.459 618.162 mo
395.459 618.162 li
394.712 612.057 mo
394.712 612.057 li
396.954 608.818 mo
396.954 608.818 li
397.826 607.199 mo
397.826 607.199 li
394.961 605.828 mo
394.961 605.828 li
394.338 597.98 mo
394.338 597.98 li
402.311 607.323 mo
402.311 607.323 li
402.062 592.623 mo
402.062 592.623 li
400.692 605.081 mo
400.692 605.081 li
395.21 592.373 mo
395.21 592.373 li
393.964 601.842 mo
393.964 601.842 li
393.964 608.818 mo
393.964 608.818 li
false sop
0 gry
@
393.964 615.047 mo
393.964 615.047 li
393.84 594.99 mo
393.84 594.99 li
397.702 594.118 mo
397.702 594.118 li
400.069 615.421 mo
400.069 615.421 li
400.318 618.037 mo
400.318 618.037 li
401.813 611.31 mo
401.813 611.31 li
399.571 610.687 mo
399.571 610.687 li
397.951 612.805 mo
397.951 612.805 li
400.069 594.616 mo
400.069 594.616 li
397.079 603.586 mo
397.079 603.586 li
400.318 599.475 mo
400.318 599.475 li
398.076 598.353 mo
398.076 598.353 li
402.81 596.609 mo
402.81 596.609 li
402.062 618.536 mo
402.062 618.536 li
395.21 618.287 mo
395.21 618.287 li
@
grestore
grestore
gsave
403.029 618.162 mo
474.788 618.162 li
474.788 546.403 li
403.029 546.403 li
cp
clp
gsave
378.007 584.838 mo
581.524 584.838 li
581.524 707.266 li
378.007 707.266 li
cp
clp
gsave
0 -33.015 mo
792 -33.015 li
792 1190.98 li
0 1190.98 li
cp
clp
1 lc
404.026 600.97 mo
404.026 600.97 li
407.389 600.471 mo
407.389 600.471 li
406.143 603.586 mo
406.143 603.586 li
404.275 606.078 mo
404.275 606.078 li
422.837 604.209 mo
422.837 604.209 li
410.504 603.088 mo
410.504 603.088 li
405.894 607.448 mo
405.894 607.448 li
413.494 604.956 mo
413.494 604.956 li
417.854 608.071 mo
417.854 608.071 li
406.766 611.185 mo
406.766 611.185 li
403.901 609.068 mo
403.901 609.068 li
406.019 615.297 mo
406.019 615.297 li
404.026 616.293 mo
404.026 616.293 li
416.484 612.307 mo
416.484 612.307 li
420.969 615.172 mo
420.969 615.172 li
416.982 615.297 mo
416.982 615.297 li
410.504 616.916 mo
410.504 616.916 li
409.756 615.297 mo
409.756 615.297 li
421.218 603.212 mo
421.218 603.212 li
427.322 602.465 mo
427.322 602.465 li
413.12 601.094 mo
413.12 601.094 li
416.733 605.704 mo
416.733 605.704 li
418.228 602.465 mo
418.228 602.465 li
430.562 604.707 mo
430.562 604.707 li
432.181 605.579 mo
432.181 605.579 li
419.225 610.189 mo
419.225 610.189 li
429.191 613.552 mo
429.191 613.552 li
434.922 611.808 mo
434.922 611.808 li
433.552 602.714 mo
433.552 602.714 li
441.4 602.091 mo
441.4 602.091 li
432.057 610.064 mo
432.057 610.064 li
445.387 614.175 mo
445.387 614.175 li
436.666 614.549 mo
436.666 614.549 li
429.44 615.795 mo
429.44 615.795 li
423.087 612.68 mo
423.087 612.68 li
424.831 614.549 mo
424.831 614.549 li
441.649 615.919 mo
441.649 615.919 li
446.757 609.815 mo
446.757 609.815 li
434.299 608.445 mo
434.299 608.445 li
447.006 602.963 mo
447.006 602.963 li
437.538 601.717 mo
437.538 601.717 li
419.225 613.428 mo
419.225 613.428 li
430.562 601.717 mo
430.562 601.717 li
424.332 601.717 mo
424.332 601.717 li
433.925 616.044 mo
433.925 616.044 li
421.342 616.916 mo
421.342 616.916 li
443.394 599.973 mo
443.394 599.973 li
437.164 617.041 mo
437.164 617.041 li
445.262 605.455 mo
445.262 605.455 li
408.386 610.936 mo
408.386 610.936 li
413.618 609.441 mo
413.618 609.441 li
409.632 607.074 mo
409.632 607.074 li
412.497 612.805 mo
412.497 612.805 li
413.868 615.795 mo
413.868 615.795 li
423.959 607.822 mo
423.959 607.822 li
421.342 608.071 mo
421.342 608.071 li
428.07 609.566 mo
428.07 609.566 li
428.693 607.323 mo
428.693 607.323 li
426.575 605.704 mo
426.575 605.704 li
425.329 611.559 mo
425.329 611.559 li
444.764 607.822 mo
444.764 607.822 li
435.794 604.832 mo
435.794 604.832 li
438.909 607.946 mo
438.909 607.946 li
441.026 605.828 mo
441.026 605.828 li
false sop
0 gry
@
438.784 611.933 mo
438.784 611.933 li
442.023 613.303 mo
442.023 613.303 li
442.771 610.562 mo
442.771 610.562 li
444.141 616.667 mo
444.141 616.667 li
406.019 585.397 mo
406.019 585.397 li
404.026 586.394 mo
404.026 586.394 li
420.969 585.272 mo
420.969 585.272 li
416.982 585.397 mo
416.982 585.397 li
410.504 587.016 mo
410.504 587.016 li
409.756 585.397 mo
409.756 585.397 li
445.387 584.276 mo
445.387 584.276 li
436.666 584.649 mo
436.666 584.649 li
429.44 585.895 mo
429.44 585.895 li
424.831 584.649 mo
424.831 584.649 li
441.649 586.02 mo
441.649 586.02 li
433.925 586.144 mo
433.925 586.144 li
421.342 587.016 mo
421.342 587.016 li
437.164 587.141 mo
437.164 587.141 li
413.868 585.895 mo
413.868 585.895 li
444.141 586.767 mo
444.141 586.767 li
447.878 590.006 mo
447.878 590.006 li
447.38 586.643 mo
447.38 586.643 li
450.495 587.889 mo
450.495 587.889 li
452.986 589.757 mo
452.986 589.757 li
454.357 588.138 mo
454.357 588.138 li
458.094 587.266 mo
458.094 587.266 li
455.976 590.131 mo
455.976 590.131 li
462.205 588.013 mo
462.205 588.013 li
463.202 590.006 mo
463.202 590.006 li
462.205 584.276 mo
462.205 584.276 li
457.845 585.646 mo
457.845 585.646 li
453.983 584.4 mo
453.983 584.4 li
464.946 589.508 mo
464.946 589.508 li
464.448 586.144 mo
464.448 586.144 li
467.562 587.39 mo
467.562 587.39 li
470.054 589.259 mo
470.054 589.259 li
471.424 587.639 mo
471.424 587.639 li
473.044 589.633 mo
473.044 589.633 li
471.051 583.902 mo
471.051 583.902 li
451.118 617.041 mo
451.118 617.041 li
449.373 612.556 mo
449.373 612.556 li
451.616 609.317 mo
451.616 609.317 li
452.488 607.697 mo
452.488 607.697 li
460.461 610.687 mo
460.461 610.687 li
458.717 604.956 mo
458.717 604.956 li
449.623 606.327 mo
449.623 606.327 li
449.124 596.734 mo
449.124 596.734 li
456.973 607.822 mo
456.973 607.822 li
461.084 594.491 mo
461.084 594.491 li
461.458 603.212 mo
461.458 603.212 li
462.704 610.438 mo
462.704 610.438 li
459.589 616.792 mo
459.589 616.792 li
461.458 615.047 mo
461.458 615.047 li
462.828 598.229 mo
462.828 598.229 li
456.724 593.121 mo
456.724 593.121 li
455.353 605.579 mo
455.353 605.579 li
449.872 592.872 mo
449.872 592.872 li
448.626 602.34 mo
448.626 602.34 li
448.626 609.317 mo
448.626 609.317 li
448.626 615.546 mo
448.626 615.546 li
462.953 605.953 mo
462.953 605.953 li
463.95 602.714 mo
463.95 602.714 li
452.363 594.616 mo
452.363 594.616 li
454.73 615.919 mo
454.73 615.919 li
@
456.475 611.808 mo
456.475 611.808 li
454.232 611.185 mo
454.232 611.185 li
452.613 613.303 mo
452.613 613.303 li
458.468 614.549 mo
458.468 614.549 li
454.73 595.114 mo
454.73 595.114 li
451.741 604.084 mo
451.741 604.084 li
454.855 601.717 mo
454.855 601.717 li
452.737 598.852 mo
452.737 598.852 li
458.842 601.094 mo
458.842 601.094 li
460.212 597.855 mo
460.212 597.855 li
457.098 597.98 mo
457.098 597.98 li
463.576 595.737 mo
463.576 595.737 li
468.185 616.542 mo
468.185 616.542 li
467.189 618.162 mo
467.189 618.162 li
466.441 612.057 mo
466.441 612.057 li
468.684 608.818 mo
468.684 608.818 li
469.556 607.199 mo
469.556 607.199 li
466.69 605.828 mo
466.69 605.828 li
466.067 597.98 mo
466.067 597.98 li
474.041 607.323 mo
474.041 607.323 li
473.792 592.623 mo
473.792 592.623 li
472.421 605.081 mo
472.421 605.081 li
466.94 592.373 mo
466.94 592.373 li
465.694 601.842 mo
465.694 601.842 li
465.694 608.818 mo
465.694 608.818 li
465.694 615.047 mo
465.694 615.047 li
465.569 594.99 mo
465.569 594.99 li
469.431 594.118 mo
469.431 594.118 li
471.798 615.421 mo
471.798 615.421 li
472.047 618.037 mo
472.047 618.037 li
473.542 611.31 mo
473.542 611.31 li
471.3 610.687 mo
471.3 610.687 li
469.68 612.805 mo
469.68 612.805 li
471.798 594.616 mo
471.798 594.616 li
468.808 603.586 mo
468.808 603.586 li
472.047 599.475 mo
472.047 599.475 li
469.805 598.353 mo
469.805 598.353 li
474.539 596.609 mo
474.539 596.609 li
410.504 592.498 mo
410.504 592.498 li
408.261 596.485 mo
408.261 596.485 li
415.363 595.613 mo
415.363 595.613 li
433.676 599.475 mo
433.676 599.475 li
424.582 592.124 mo
424.582 592.124 li
417.48 598.478 mo
417.48 598.478 li
426.7 593.993 mo
426.7 593.993 li
420.72 591.751 mo
420.72 591.751 li
413.743 591.751 mo
413.743 591.751 li
407.514 591.751 mo
407.514 591.751 li
426.575 590.006 mo
426.575 590.006 li
428.444 595.488 mo
428.444 595.488 li
411.874 597.357 mo
411.874 597.357 li
405.77 593.993 mo
405.77 593.993 li
427.945 597.855 mo
427.945 597.855 li
418.975 594.865 mo
418.975 594.865 li
423.087 598.104 mo
423.087 598.104 li
424.208 595.862 mo
424.208 595.862 li
435.669 592.249 mo
435.669 592.249 li
438.161 596.111 mo
438.161 596.111 li
442.397 597.481 mo
442.397 597.481 li
445.262 592.996 mo
445.262 592.996 li
445.387 596.983 mo
445.387 596.983 li
433.302 592.747 mo
433.302 592.747 li
435.794 597.232 mo
435.794 597.232 li
431.558 594.99 mo
431.558 594.99 li
@
440.279 594.741 mo
440.279 594.741 li
442.771 590.878 mo
442.771 590.878 li
444.639 589.134 mo
444.639 589.134 li
443.518 594.741 mo
443.518 594.741 li
431.807 589.633 mo
431.807 589.633 li
447.006 592.623 mo
447.006 592.623 li
437.912 590.006 mo
437.912 590.006 li
438.161 592.623 mo
438.161 592.623 li
@
440.404 588.511 mo
440.404 588.511 li
410.504 589.508 mo
410.504 589.508 li
416.11 590.38 mo
416.11 590.38 li
406.642 589.134 mo
406.642 589.134 li
412.497 587.39 mo
412.497 587.39 li
404.898 592.249 mo
404.898 592.249 li
417.73 589.757 mo
417.73 589.757 li
424.083 587.39 mo
424.083 587.39 li
402.78 596.609 mo
402.78 596.609 li
473.792 618.536 mo
473.792 618.536 li
466.94 618.287 mo
466.94 618.287 li
@
grestore
grestore
grestore
gsave
474.758 618.162 mo
546.517 618.162 li
546.517 546.403 li
474.758 546.403 li
cp
clp
gsave
378.007 584.838 mo
581.524 584.838 li
581.524 707.266 li
378.007 707.266 li
cp
clp
gsave
0 -33.015 mo
792 -33.015 li
792 1190.98 li
0 1190.98 li
cp
clp
1 lc
475.755 600.97 mo
475.755 600.97 li
479.119 600.471 mo
479.119 600.471 li
477.873 603.586 mo
477.873 603.586 li
476.004 606.078 mo
476.004 606.078 li
494.567 604.209 mo
494.567 604.209 li
482.233 603.088 mo
482.233 603.088 li
477.624 607.448 mo
477.624 607.448 li
485.223 604.956 mo
485.223 604.956 li
489.583 608.071 mo
489.583 608.071 li
478.496 611.185 mo
478.496 611.185 li
475.63 609.068 mo
475.63 609.068 li
477.748 615.297 mo
477.748 615.297 li
475.755 616.293 mo
475.755 616.293 li
488.213 612.307 mo
488.213 612.307 li
492.698 615.172 mo
492.698 615.172 li
488.711 615.297 mo
488.711 615.297 li
482.233 616.916 mo
482.233 616.916 li
481.486 615.297 mo
481.486 615.297 li
492.947 603.212 mo
492.947 603.212 li
499.052 602.465 mo
499.052 602.465 li
484.849 601.094 mo
484.849 601.094 li
488.462 605.704 mo
488.462 605.704 li
489.957 602.465 mo
489.957 602.465 li
502.291 604.707 mo
502.291 604.707 li
503.91 605.579 mo
503.91 605.579 li
490.954 610.189 mo
490.954 610.189 li
500.92 613.552 mo
500.92 613.552 li
506.651 611.808 mo
506.651 611.808 li
505.281 602.714 mo
505.281 602.714 li
513.13 602.091 mo
513.13 602.091 li
503.786 610.064 mo
503.786 610.064 li
517.116 614.175 mo
517.116 614.175 li
508.395 614.549 mo
508.395 614.549 li
501.17 615.795 mo
501.17 615.795 li
494.816 612.68 mo
494.816 612.68 li
496.56 614.549 mo
496.56 614.549 li
513.379 615.919 mo
513.379 615.919 li
518.487 609.815 mo
518.487 609.815 li
506.028 608.445 mo
506.028 608.445 li
518.736 602.963 mo
518.736 602.963 li
509.267 601.717 mo
509.267 601.717 li
490.954 613.428 mo
490.954 613.428 li
502.291 601.717 mo
502.291 601.717 li
496.062 601.717 mo
496.062 601.717 li
505.655 616.044 mo
505.655 616.044 li
493.072 616.916 mo
493.072 616.916 li
515.123 599.973 mo
515.123 599.973 li
508.894 617.041 mo
508.894 617.041 li
516.992 605.455 mo
516.992 605.455 li
480.115 610.936 mo
480.115 610.936 li
485.348 609.441 mo
485.348 609.441 li
481.361 607.074 mo
481.361 607.074 li
484.226 612.805 mo
484.226 612.805 li
485.597 615.795 mo
485.597 615.795 li
495.688 607.822 mo
495.688 607.822 li
493.072 608.071 mo
493.072 608.071 li
499.799 609.566 mo
499.799 609.566 li
500.422 607.323 mo
500.422 607.323 li
498.304 605.704 mo
498.304 605.704 li
497.058 611.559 mo
497.058 611.559 li
516.493 607.822 mo
516.493 607.822 li
507.523 604.832 mo
507.523 604.832 li
510.638 607.946 mo
510.638 607.946 li
512.756 605.828 mo
512.756 605.828 li
false sop
0 gry
@
510.513 611.933 mo
510.513 611.933 li
513.752 613.303 mo
513.752 613.303 li
514.5 610.562 mo
514.5 610.562 li
515.87 616.667 mo
515.87 616.667 li
477.748 585.397 mo
477.748 585.397 li
475.755 586.394 mo
475.755 586.394 li
492.698 585.272 mo
492.698 585.272 li
488.711 585.397 mo
488.711 585.397 li
482.233 587.016 mo
482.233 587.016 li
481.486 585.397 mo
481.486 585.397 li
517.116 584.276 mo
517.116 584.276 li
508.395 584.649 mo
508.395 584.649 li
501.17 585.895 mo
501.17 585.895 li
496.56 584.649 mo
496.56 584.649 li
513.379 586.02 mo
513.379 586.02 li
505.655 586.144 mo
505.655 586.144 li
493.072 587.016 mo
493.072 587.016 li
508.894 587.141 mo
508.894 587.141 li
485.597 585.895 mo
485.597 585.895 li
515.87 586.767 mo
515.87 586.767 li
519.608 590.006 mo
519.608 590.006 li
519.109 586.643 mo
519.109 586.643 li
522.224 587.889 mo
522.224 587.889 li
524.716 589.757 mo
524.716 589.757 li
526.086 588.138 mo
526.086 588.138 li
529.823 587.266 mo
529.823 587.266 li
527.706 590.131 mo
527.706 590.131 li
533.935 588.013 mo
533.935 588.013 li
534.931 590.006 mo
534.931 590.006 li
533.935 584.276 mo
533.935 584.276 li
529.574 585.646 mo
529.574 585.646 li
525.712 584.4 mo
525.712 584.4 li
536.676 589.508 mo
536.676 589.508 li
536.177 586.144 mo
536.177 586.144 li
539.292 587.39 mo
539.292 587.39 li
541.783 589.259 mo
541.783 589.259 li
543.154 587.639 mo
543.154 587.639 li
544.773 589.633 mo
544.773 589.633 li
542.78 583.902 mo
542.78 583.902 li
522.847 617.041 mo
522.847 617.041 li
521.103 612.556 mo
521.103 612.556 li
523.345 609.317 mo
523.345 609.317 li
524.217 607.697 mo
524.217 607.697 li
532.191 610.687 mo
532.191 610.687 li
530.446 604.956 mo
530.446 604.956 li
521.352 606.327 mo
521.352 606.327 li
520.854 596.734 mo
520.854 596.734 li
528.702 607.822 mo
528.702 607.822 li
532.813 594.491 mo
532.813 594.491 li
533.187 603.212 mo
533.187 603.212 li
534.433 610.438 mo
534.433 610.438 li
531.318 616.792 mo
531.318 616.792 li
533.187 615.047 mo
533.187 615.047 li
534.558 598.229 mo
534.558 598.229 li
528.453 593.121 mo
528.453 593.121 li
527.083 605.579 mo
527.083 605.579 li
521.601 592.872 mo
521.601 592.872 li
520.355 602.34 mo
520.355 602.34 li
520.355 609.317 mo
520.355 609.317 li
520.355 615.546 mo
520.355 615.546 li
534.682 605.953 mo
534.682 605.953 li
535.679 602.714 mo
535.679 602.714 li
524.093 594.616 mo
524.093 594.616 li
526.46 615.919 mo
526.46 615.919 li
@
528.204 611.808 mo
528.204 611.808 li
525.961 611.185 mo
525.961 611.185 li
524.342 613.303 mo
524.342 613.303 li
530.197 614.549 mo
530.197 614.549 li
526.46 595.114 mo
526.46 595.114 li
523.47 604.084 mo
523.47 604.084 li
526.584 601.717 mo
526.584 601.717 li
524.466 598.852 mo
524.466 598.852 li
530.571 601.094 mo
530.571 601.094 li
531.941 597.855 mo
531.941 597.855 li
528.827 597.98 mo
528.827 597.98 li
535.305 595.737 mo
535.305 595.737 li
539.915 616.542 mo
539.915 616.542 li
538.918 618.162 mo
538.918 618.162 li
538.17 612.057 mo
538.17 612.057 li
540.413 608.818 mo
540.413 608.818 li
541.285 607.199 mo
541.285 607.199 li
538.42 605.828 mo
538.42 605.828 li
537.797 597.98 mo
537.797 597.98 li
545.77 607.323 mo
545.77 607.323 li
545.521 592.623 mo
545.521 592.623 li
544.15 605.081 mo
544.15 605.081 li
538.669 592.373 mo
538.669 592.373 li
537.423 601.842 mo
537.423 601.842 li
537.423 608.818 mo
537.423 608.818 li
537.423 615.047 mo
537.423 615.047 li
537.298 594.99 mo
537.298 594.99 li
541.16 594.118 mo
541.16 594.118 li
543.528 615.421 mo
543.528 615.421 li
543.777 618.037 mo
543.777 618.037 li
545.272 611.31 mo
545.272 611.31 li
543.029 610.687 mo
543.029 610.687 li
541.41 612.805 mo
541.41 612.805 li
543.528 594.616 mo
543.528 594.616 li
540.538 603.586 mo
540.538 603.586 li
543.777 599.475 mo
543.777 599.475 li
541.534 598.353 mo
541.534 598.353 li
546.268 596.609 mo
546.268 596.609 li
482.233 592.498 mo
482.233 592.498 li
479.991 596.485 mo
479.991 596.485 li
487.092 595.613 mo
487.092 595.613 li
505.405 599.475 mo
505.405 599.475 li
496.311 592.124 mo
496.311 592.124 li
489.21 598.478 mo
489.21 598.478 li
498.429 593.993 mo
498.429 593.993 li
492.449 591.751 mo
492.449 591.751 li
485.472 591.751 mo
485.472 591.751 li
479.243 591.751 mo
479.243 591.751 li
498.304 590.006 mo
498.304 590.006 li
500.173 595.488 mo
500.173 595.488 li
483.604 597.357 mo
483.604 597.357 li
477.499 593.993 mo
477.499 593.993 li
499.675 597.855 mo
499.675 597.855 li
490.705 594.865 mo
490.705 594.865 li
494.816 598.104 mo
494.816 598.104 li
495.937 595.862 mo
495.937 595.862 li
507.399 592.249 mo
507.399 592.249 li
509.89 596.111 mo
509.89 596.111 li
514.126 597.481 mo
514.126 597.481 li
516.992 592.996 mo
516.992 592.996 li
517.116 596.983 mo
517.116 596.983 li
505.032 592.747 mo
505.032 592.747 li
507.523 597.232 mo
507.523 597.232 li
503.288 594.99 mo
503.288 594.99 li
@
512.008 594.741 mo
512.008 594.741 li
514.5 590.878 mo
514.5 590.878 li
516.369 589.134 mo
516.369 589.134 li
515.247 594.741 mo
515.247 594.741 li
503.537 589.633 mo
503.537 589.633 li
518.736 592.623 mo
518.736 592.623 li
509.641 590.006 mo
509.641 590.006 li
509.89 592.623 mo
509.89 592.623 li
@
512.133 588.511 mo
512.133 588.511 li
482.233 589.508 mo
482.233 589.508 li
487.839 590.38 mo
487.839 590.38 li
478.371 589.134 mo
478.371 589.134 li
484.226 587.39 mo
484.226 587.39 li
476.627 592.249 mo
476.627 592.249 li
489.459 589.757 mo
489.459 589.757 li
495.813 587.39 mo
495.813 587.39 li
474.509 596.609 mo
474.509 596.609 li
545.521 618.536 mo
545.521 618.536 li
538.669 618.287 mo
538.669 618.287 li
@
grestore
grestore
grestore
gsave
546.487 618.162 mo
618.246 618.162 li
618.246 546.403 li
546.487 546.403 li
cp
clp
gsave
378.007 584.838 mo
581.524 584.838 li
581.524 707.266 li
378.007 707.266 li
cp
clp
1 lc
547.484 600.97 mo
547.484 600.97 li
550.848 600.471 mo
550.848 600.471 li
549.602 603.586 mo
549.602 603.586 li
547.733 606.078 mo
547.733 606.078 li
566.296 604.209 mo
566.296 604.209 li
553.962 603.088 mo
553.962 603.088 li
549.353 607.448 mo
549.353 607.448 li
556.952 604.956 mo
556.952 604.956 li
561.313 608.071 mo
561.313 608.071 li
550.225 611.185 mo
550.225 611.185 li
547.36 609.068 mo
547.36 609.068 li
549.477 615.297 mo
549.477 615.297 li
547.484 616.293 mo
547.484 616.293 li
559.942 612.307 mo
559.942 612.307 li
564.427 615.172 mo
564.427 615.172 li
560.441 615.297 mo
560.441 615.297 li
553.962 616.916 mo
553.962 616.916 li
553.215 615.297 mo
553.215 615.297 li
564.676 603.212 mo
564.676 603.212 li
570.781 602.465 mo
570.781 602.465 li
556.579 601.094 mo
556.579 601.094 li
560.192 605.704 mo
560.192 605.704 li
561.687 602.465 mo
561.687 602.465 li
574.02 604.707 mo
574.02 604.707 li
575.64 605.579 mo
575.64 605.579 li
562.683 610.189 mo
562.683 610.189 li
572.65 613.552 mo
572.65 613.552 li
578.38 611.808 mo
578.38 611.808 li
577.01 602.714 mo
577.01 602.714 li
575.515 610.064 mo
575.515 610.064 li
580.125 614.549 mo
580.125 614.549 li
572.899 615.795 mo
572.899 615.795 li
566.545 612.68 mo
566.545 612.68 li
568.289 614.549 mo
568.289 614.549 li
577.758 608.445 mo
577.758 608.445 li
580.997 601.717 mo
580.997 601.717 li
562.683 613.428 mo
562.683 613.428 li
574.02 601.717 mo
574.02 601.717 li
567.791 601.717 mo
567.791 601.717 li
577.384 616.044 mo
577.384 616.044 li
564.801 616.916 mo
564.801 616.916 li
580.623 617.041 mo
580.623 617.041 li
551.845 610.936 mo
551.845 610.936 li
557.077 609.441 mo
557.077 609.441 li
553.09 607.074 mo
553.09 607.074 li
555.956 612.805 mo
555.956 612.805 li
557.326 615.795 mo
557.326 615.795 li
567.417 607.822 mo
567.417 607.822 li
564.801 608.071 mo
564.801 608.071 li
571.529 609.566 mo
571.529 609.566 li
572.151 607.323 mo
572.151 607.323 li
570.034 605.704 mo
570.034 605.704 li
568.788 611.559 mo
568.788 611.559 li
579.253 604.832 mo
579.253 604.832 li
582.367 607.946 mo
582.367 607.946 li
582.243 611.933 mo
582.243 611.933 li
549.477 585.397 mo
549.477 585.397 li
547.484 586.394 mo
547.484 586.394 li
564.427 585.272 mo
564.427 585.272 li
560.441 585.397 mo
560.441 585.397 li
553.962 587.016 mo
553.962 587.016 li
553.215 585.397 mo
553.215 585.397 li
580.125 584.649 mo
580.125 584.649 li
572.899 585.895 mo
572.899 585.895 li
false sop
0 gry
@
568.289 584.649 mo
568.289 584.649 li
577.384 586.144 mo
577.384 586.144 li
564.801 587.016 mo
564.801 587.016 li
580.623 587.141 mo
580.623 587.141 li
557.326 585.895 mo
557.326 585.895 li
553.962 592.498 mo
553.962 592.498 li
551.72 596.485 mo
551.72 596.485 li
558.821 595.613 mo
558.821 595.613 li
577.135 599.475 mo
577.135 599.475 li
568.04 592.124 mo
568.04 592.124 li
560.939 598.478 mo
560.939 598.478 li
570.158 593.993 mo
570.158 593.993 li
564.178 591.751 mo
564.178 591.751 li
557.202 591.751 mo
557.202 591.751 li
550.972 591.751 mo
550.972 591.751 li
570.034 590.006 mo
570.034 590.006 li
571.902 595.488 mo
571.902 595.488 li
555.333 597.357 mo
555.333 597.357 li
549.228 593.993 mo
549.228 593.993 li
571.404 597.855 mo
571.404 597.855 li
562.434 594.865 mo
562.434 594.865 li
566.545 598.104 mo
566.545 598.104 li
567.666 595.862 mo
567.666 595.862 li
579.128 592.249 mo
579.128 592.249 li
581.62 596.111 mo
581.62 596.111 li
576.761 592.747 mo
576.761 592.747 li
579.253 597.232 mo
579.253 597.232 li
575.017 594.99 mo
575.017 594.99 li
575.266 589.633 mo
575.266 589.633 li
581.37 590.006 mo
581.37 590.006 li
581.62 592.623 mo
581.62 592.623 li
553.962 589.508 mo
553.962 589.508 li
559.569 590.38 mo
559.569 590.38 li
550.1 589.134 mo
550.1 589.134 li
555.956 587.39 mo
555.956 587.39 li
548.356 592.249 mo
548.356 592.249 li
561.188 589.757 mo
561.188 589.757 li
567.542 587.39 mo
567.542 587.39 li
546.238 596.609 mo
546.238 596.609 li
@
grestore
grestore
107.107 542.657 mo
106.647 551.165 112.924 581.929 112.561 590.655 cv
112.197 599.383 110.581 616.458 110.742 620.11 cv
111.296 632.607 116.959 659.8 117.652 664.108 cv
119.288 674.29 109.387 687.152 107.768 691.137 cv
107.084 692.821 107.136 696.262 106.772 696.989 cv
106.408 697.717 103.902 703.561 107.543 703.561 cv
110.452 703.561 111.652 701.015 112.015 699.744 cv
112.379 698.47 113.662 694.713 114.452 693.876 cv
117.542 690.603 117.061 689.409 117.606 689.228 cv
117.606 689.228 118.223 693.813 118.768 694.54 cv
119.765 695.869 121.852 721.156 126.56 720.652 cv
130.059 720.277 126.406 697.114 127.236 697.03 cv
127.808 696.974 129.47 703.925 129.651 704.834 cv
129.833 705.743 132.96 722.424 136.015 721.379 cv
139.469 720.197 134.924 704.652 134.924 703.743 cv
134.924 702.835 133.056 696.641 133.878 696.367 cv
134.874 696.034 136.398 703.246 136.742 704.106 cv
137.282 705.458 140.169 718.163 143.259 717.163 cv
146.077 716.252 142.014 704.212 141.287 701.925 cv
140.966 700.914 139.192 694.291 139.856 694.042 cv
140.52 693.793 146.756 709.872 149.652 708.654 cv
152.807 707.325 148.925 699.683 148.157 698.194 cv
145.335 692.715 145.595 685.656 141.516 678.767 cv
138.326 673.379 136.566 670.891 136.202 665.982 cv
135.839 661.073 139.679 633.382 139.833 627.927 cv
140.196 615.019 137.832 589.747 137.832 587.928 cv
137.832 586.11 144.007 560.131 139.772 541.451 cv
false sop
0 .1 .2 0 cmyk
f
.249 lw
1 lj
107.107 542.657 mo
106.647 551.165 112.924 581.929 112.561 590.655 cv
112.197 599.383 110.581 616.458 110.742 620.11 cv
111.296 632.607 116.959 659.8 117.652 664.108 cv
119.288 674.29 109.387 687.152 107.768 691.137 cv
107.084 692.821 107.136 696.262 106.772 696.989 cv
106.408 697.717 103.902 703.561 107.543 703.561 cv
110.452 703.561 111.652 701.015 112.015 699.744 cv
112.379 698.47 113.662 694.713 114.452 693.876 cv
117.542 690.603 117.061 689.409 117.606 689.228 cv
117.606 689.228 118.223 693.813 118.768 694.54 cv
119.765 695.869 121.852 721.156 126.56 720.652 cv
130.059 720.277 126.406 697.114 127.236 697.03 cv
127.808 696.974 129.47 703.925 129.651 704.834 cv
129.833 705.743 132.96 722.424 136.015 721.379 cv
139.469 720.197 134.924 704.652 134.924 703.743 cv
134.924 702.835 133.056 696.641 133.878 696.367 cv
134.874 696.034 136.398 703.246 136.742 704.106 cv
137.282 705.458 140.169 718.163 143.259 717.163 cv
146.077 716.252 142.014 704.212 141.287 701.925 cv
140.966 700.914 139.192 694.291 139.856 694.042 cv
140.52 693.793 146.756 709.872 149.652 708.654 cv
152.807 707.325 148.925 699.683 148.157 698.194 cv
145.335 692.715 145.595 685.656 141.516 678.767 cv
138.326 673.379 136.566 670.891 136.202 665.982 cv
135.839 661.073 139.679 633.382 139.833 627.927 cv
140.196 615.019 137.832 589.747 137.832 587.928 cv
137.832 586.11 144.007 560.131 139.772 541.451 cv
true sop
0 gry
@
113.889 549.906 mo
112.836 553.253 110.729 564.779 111.784 569.615 cv
112.836 574.448 114.941 587.092 118.628 588.578 cv
122.313 590.067 128.631 585.975 129.156 581.513 cv
129.683 577.052 128.102 564.779 128.102 558.088 cv
128.102 551.394 117.049 539.866 113.889 549.906 cv
false sop
0 .1 .2 0 cmyk
f
114.055 550.346 mo
113.029 553.608 110.975 564.843 112.004 569.556 cv
113.029 574.268 115.081 586.591 118.674 588.041 cv
122.267 589.491 128.425 585.503 128.937 581.154 cv
129.45 576.805 127.909 564.843 127.909 558.32 cv
127.909 551.797 117.135 540.559 114.055 550.346 cv
0 .098 .196 0 cmyk
f
114.221 550.785 mo
113.222 553.963 111.222 564.907 112.224 569.498 cv
113.222 574.087 115.221 586.091 118.721 587.502 cv
122.22 588.915 128.218 585.03 128.717 580.794 cv
129.217 576.558 127.716 564.907 127.716 558.553 cv
127.716 552.198 117.222 541.253 114.221 550.785 cv
0 .096 .192 0 cmyk
f
114.388 551.224 mo
113.415 554.317 111.467 564.97 112.443 569.438 cv
113.415 573.905 115.361 585.59 118.767 586.964 cv
122.173 588.339 128.012 584.558 128.497 580.435 cv
128.984 576.311 127.523 564.97 127.523 558.786 cv
127.523 552.6 117.308 541.946 114.388 551.224 cv
0 .094 .189 0 cmyk
f
114.555 551.664 mo
113.608 554.673 111.714 565.034 112.662 569.38 cv
113.608 573.725 115.501 585.089 118.814 586.426 cv
122.126 587.764 127.805 584.086 128.278 580.075 cv
128.751 576.065 127.33 565.034 127.33 559.019 cv
127.33 553.002 117.395 542.639 114.555 551.664 cv
0 .092 .185 0 cmyk
f
114.721 552.104 mo
113.801 555.028 111.96 565.098 112.882 569.321 cv
113.801 573.544 115.641 584.589 118.861 585.888 cv
122.08 587.189 127.6 583.614 128.058 579.716 cv
128.518 575.818 127.138 565.098 127.138 559.251 cv
127.138 553.404 117.482 543.333 114.721 552.104 cv
0 .09 .181 0 cmyk
f
114.887 552.543 mo
113.994 555.383 112.207 565.161 113.102 569.263 cv
113.994 573.363 115.78 584.089 118.907 585.35 cv
122.034 586.613 127.393 583.141 127.839 579.356 cv
128.286 575.571 126.944 565.161 126.944 559.485 cv
126.944 553.806 117.568 544.026 114.887 552.543 cv
0 .089 .177 0 cmyk
f
115.053 552.983 mo
114.187 555.737 112.452 565.225 113.321 569.204 cv
114.187 573.181 115.92 583.588 118.954 584.811 cv
121.987 586.036 127.186 582.669 127.619 578.996 cv
128.052 575.325 126.751 565.225 126.751 559.717 cv
126.751 554.208 117.654 544.719 115.053 552.983 cv
0 .087 .173 0 cmyk
f
115.22 553.422 mo
114.381 556.093 112.699 565.288 113.541 569.145 cv
114.381 573.001 116.06 583.087 119 584.274 cv
121.94 585.461 126.98 582.197 127.399 578.637 cv
127.82 575.078 126.559 565.288 126.559 559.95 cv
126.559 554.61 117.741 545.413 115.22 553.422 cv
0 .085 .169 0 cmyk
f
115.387 553.862 mo
114.573 556.448 112.946 565.352 113.761 569.087 cv
114.573 572.82 116.2 582.587 119.048 583.736 cv
121.894 584.885 126.774 581.725 127.18 578.278 cv
127.587 574.831 126.366 565.352 126.366 560.183 cv
126.366 555.012 117.828 546.107 115.387 553.862 cv
0 .083 .165 0 cmyk
f
115.553 554.302 mo
114.766 556.803 113.192 565.415 113.98 569.028 cv
114.766 572.639 116.339 582.086 119.093 583.197 cv
121.847 584.309 126.567 581.252 126.961 577.918 cv
127.354 574.585 126.172 565.415 126.172 560.416 cv
126.172 555.414 117.914 546.8 115.553 554.302 cv
0 .081 .162 0 cmyk
f
115.719 554.741 mo
114.959 557.157 113.438 565.479 114.2 568.969 cv
114.959 572.458 116.479 581.586 119.14 582.659 cv
121.8 583.733 126.361 580.78 126.741 577.558 cv
127.121 574.338 125.98 565.479 125.98 560.648 cv
125.98 555.816 118 547.493 115.719 554.741 cv
0 .079 .158 0 cmyk
f
115.886 555.181 mo
115.152 557.513 113.684 565.543 114.419 568.91 cv
115.152 572.278 116.619 581.086 119.187 582.121 cv
121.754 583.158 126.155 580.307 126.522 577.199 cv
126.888 574.091 125.787 565.543 125.787 560.881 cv
125.787 556.218 118.087 548.187 115.886 555.181 cv
0 .077 .154 0 cmyk
f
116.052 555.621 mo
115.346 557.868 113.931 565.606 114.639 568.852 cv
115.346 572.097 116.759 580.585 119.234 581.583 cv
121.708 582.582 125.949 579.835 126.302 576.84 cv
126.656 573.845 125.595 565.606 125.595 561.114 cv
125.595 556.62 118.174 548.88 116.052 555.621 cv
0 .075 .15 0 cmyk
f
116.218 556.06 mo
115.538 558.222 114.177 565.67 114.858 568.793 cv
115.538 571.916 116.899 580.084 119.28 581.045 cv
121.661 582.006 125.742 579.363 126.082 576.48 cv
126.422 573.598 125.401 565.67 125.401 561.346 cv
125.401 557.022 118.26 549.574 116.218 556.06 cv
0 .073 .146 0 cmyk
f
116.385 556.5 mo
115.731 558.577 114.423 565.733 115.078 568.734 cv
115.731 571.735 117.039 579.584 119.327 580.507 cv
121.614 581.431 125.536 578.891 125.863 576.121 cv
126.189 573.351 125.208 565.733 125.208 561.579 cv
125.208 557.424 118.347 550.267 116.385 556.5 cv
0 .071 .142 0 cmyk
f
116.551 556.939 mo
115.924 558.932 114.669 565.797 115.297 568.675 cv
115.924 571.554 117.178 579.083 119.373 579.969 cv
121.568 580.855 125.329 578.418 125.643 575.762 cv
125.956 573.104 125.016 565.797 125.016 561.812 cv
125.016 557.826 118.433 550.961 116.551 556.939 cv
0 .069 .139 0 cmyk
f
116.717 557.379 mo
116.117 559.287 114.916 565.86 115.517 568.617 cv
116.117 571.373 117.318 578.583 119.42 579.431 cv
121.521 580.279 125.124 577.946 125.423 575.402 cv
125.723 572.858 124.823 565.86 124.823 562.044 cv
124.823 558.228 118.519 551.654 116.717 557.379 cv
0 .067 .135 0 cmyk
f
116.884 557.819 mo
116.31 559.642 115.162 565.924 115.737 568.558 cv
116.31 571.192 117.458 578.082 119.466 578.893 cv
121.474 579.704 124.917 577.474 125.204 575.043 cv
125.49 572.611 124.629 565.924 124.629 562.277 cv
124.629 558.63 118.606 552.347 116.884 557.819 cv
0 .065 .131 0 cmyk
f
117.051 558.258 mo
116.503 559.997 115.408 565.987 115.956 568.5 cv
116.503 571.012 117.597 577.582 119.513 578.354 cv
121.428 579.128 124.711 577.001 124.985 574.683 cv
125.257 572.364 124.437 565.987 124.437 562.51 cv
124.437 559.032 118.692 553.041 117.051 558.258 cv
0 .064 .127 0 cmyk
f
117.217 558.698 mo
116.696 560.352 115.655 566.051 116.176 568.441 cv
116.696 570.831 117.737 577.081 119.559 577.816 cv
121.381 578.552 124.504 576.529 124.765 574.324 cv
125.025 572.117 124.244 566.051 124.244 562.742 cv
124.244 559.433 118.779 553.734 117.217 558.698 cv
0 .062 .123 0 cmyk
f
117.383 559.137 mo
116.889 560.707 115.901 566.114 116.395 568.382 cv
116.889 570.65 117.877 576.581 119.606 577.278 cv
121.335 577.976 124.298 576.057 124.545 573.964 cv
124.792 571.871 124.051 566.114 124.051 562.975 cv
124.051 559.835 118.866 554.427 117.383 559.137 cv
0 .06 .119 0 cmyk
f
117.55 559.577 mo
117.082 561.062 116.147 566.178 116.615 568.324 cv
117.082 570.469 118.017 576.08 119.653 576.74 cv
121.288 577.4 124.092 575.584 124.326 573.605 cv
124.559 571.624 123.858 566.178 123.858 563.208 cv
123.858 560.237 118.952 555.121 117.55 559.577 cv
0 .058 .115 0 cmyk
f
117.716 560.017 mo
117.275 561.417 116.393 566.242 116.835 568.265 cv
117.275 570.288 118.157 575.579 119.699 576.202 cv
121.241 576.825 123.885 575.113 124.106 573.245 cv
124.326 571.377 123.665 566.242 123.665 563.441 cv
123.665 560.639 119.038 555.814 117.716 560.017 cv
0 .056 .112 0 cmyk
f
117.882 560.456 mo
117.468 561.772 116.64 566.305 117.054 568.206 cv
117.468 570.108 118.296 575.079 119.746 575.664 cv
121.195 576.249 123.679 574.64 123.887 572.886 cv
124.093 571.13 123.472 566.305 123.472 563.673 cv
123.472 561.041 119.125 556.508 117.882 560.456 cv
0 .054 .108 0 cmyk
f
118.049 560.896 mo
117.661 562.127 116.886 566.369 117.274 568.148 cv
117.661 569.927 118.436 574.578 119.792 575.126 cv
121.148 575.673 123.473 574.168 123.667 572.526 cv
123.86 570.884 123.28 566.369 123.28 563.906 cv
123.28 561.443 119.211 557.201 118.049 560.896 cv
0 .052 .104 0 cmyk
f
118.215 561.335 mo
117.854 562.482 117.132 566.432 117.493 568.089 cv
117.854 569.746 118.576 574.078 119.839 574.588 cv
121.102 575.097 123.266 573.695 123.447 572.167 cv
123.627 570.637 123.086 566.432 123.086 564.139 cv
123.086 561.845 119.298 557.895 118.215 561.335 cv
0 .05 .1 0 cmyk
f
128.413 588.954 mo
131.135 594.645 133.598 607.387 134.303 612.326 cv
134.788 615.45 li
135.511 619.931 136.329 625.011 135.56 628.666 cv
135.447 629.205 135.791 629.733 136.329 629.846 cv
136.868 629.959 137.396 629.616 137.51 629.077 cv
138.355 625.059 137.505 619.785 136.756 615.132 cv
136.275 612.043 li
135.556 607.011 133.031 593.991 130.211 588.094 cv
0 1 .6 0 cmyk
f
1 lc
0 lj
128.413 588.954 mo
131.135 594.645 133.598 607.387 134.303 612.326 cv
134.788 615.45 li
135.511 619.931 136.329 625.011 135.56 628.666 cv
135.447 629.205 135.791 629.733 136.329 629.846 cv
136.868 629.959 137.396 629.616 137.51 629.077 cv
138.355 625.059 137.505 619.785 136.756 615.132 cv
136.275 612.043 li
135.556 607.011 133.031 593.991 130.211 588.094 cv
true sop
0 0 0 1 nzopmsc
@
117.029 547.992 mo
117.001 548.649 li
116.954 550.1 116.868 552.8 115.5 555.146 cv
113.585 558.43 114.771 564.022 116.567 572.485 cv
116.631 572.791 li
118.635 582.236 118.851 590.075 118.851 593.007 cv
118.851 597.038 118.075 604.255 115.896 612.426 cv
113.902 619.905 115.511 627.395 116.895 632.376 cv
118.282 637.368 124.283 642.142 130.237 641.06 cv
135.617 640.081 136.211 637.149 136.899 633.754 cv
137.256 632.088 li
137.37 631.551 137.032 631.001 136.494 630.886 cv
135.956 630.771 135.431 631.095 135.316 631.633 cv
134.947 633.358 li
134.271 636.69 133.932 638.363 129.881 639.099 cv
125.029 639.981 119.948 635.922 118.815 631.843 cv
117.493 627.084 115.953 619.948 117.822 612.94 cv
119.686 605.948 120.844 598.311 120.844 593.007 cv
120.844 590.012 120.624 582.007 118.581 572.377 cv
118.516 572.072 li
116.878 564.349 115.693 558.769 117.221 556.15 cv
118.844 553.368 118.944 550.224 118.993 548.713 cv
119.016 548.135 li
119.017 548.122 119.017 548.109 119.017 548.096 cv
false sop
.9 .6 0 0 cmyk
f
0 lc
117.029 547.992 mo
117.001 548.649 li
116.954 550.1 116.868 552.8 115.5 555.146 cv
113.585 558.43 114.771 564.022 116.567 572.485 cv
116.631 572.791 li
118.635 582.236 118.851 590.075 118.851 593.007 cv
118.851 597.038 118.075 604.255 115.896 612.426 cv
113.902 619.905 115.511 627.395 116.895 632.376 cv
118.282 637.368 124.283 642.142 130.237 641.06 cv
135.617 640.081 136.211 637.149 136.899 633.754 cv
137.256 632.088 li
137.37 631.551 137.032 631.001 136.494 630.886 cv
135.956 630.771 135.431 631.095 135.316 631.633 cv
134.947 633.358 li
134.271 636.69 133.932 638.363 129.881 639.099 cv
125.029 639.981 119.948 635.922 118.815 631.843 cv
117.493 627.084 115.953 619.948 117.822 612.94 cv
119.686 605.948 120.844 598.311 120.844 593.007 cv
120.844 590.012 120.624 582.007 118.581 572.377 cv
118.516 572.072 li
116.878 564.349 115.693 558.769 117.221 556.15 cv
118.844 553.368 118.944 550.224 118.993 548.713 cv
119.016 548.135 li
119.017 548.122 119.017 548.109 119.017 548.096 cv
true sop
0 0 0 1 nzopmsc
@
140.395 546.557 mo
107.831 546.557 li
107.332 544.898 li
140.395 544.898 li
140.395 546.557 li
false sop
0 .1 .2 0 cmyk
f
140.362 546.416 mo
107.819 546.416 li
107.33 544.757 li
140.362 544.757 li
140.362 546.416 li
0 .098 .196 0 cmyk
f
140.328 546.275 mo
107.808 546.275 li
107.329 544.616 li
140.328 544.616 li
140.328 546.275 li
0 .096 .192 0 cmyk
f
140.294 546.134 mo
107.796 546.134 li
107.327 544.475 li
140.294 544.475 li
140.294 546.134 li
0 .094 .189 0 cmyk
f
140.261 545.992 mo
107.784 545.992 li
107.325 544.334 li
140.261 544.334 li
140.261 545.992 li
0 .092 .185 0 cmyk
f
140.228 545.851 mo
107.773 545.851 li
107.323 544.192 li
140.228 544.192 li
140.228 545.851 li
0 .09 .181 0 cmyk
f
140.194 545.71 mo
107.761 545.71 li
107.321 544.051 li
140.194 544.051 li
140.194 545.71 li
0 .089 .177 0 cmyk
f
140.161 545.568 mo
107.749 545.568 li
107.318 543.909 li
140.161 543.909 li
140.161 545.568 li
0 .087 .173 0 cmyk
f
140.127 545.427 mo
107.739 545.427 li
107.317 543.768 li
140.127 543.768 li
140.127 545.427 li
0 .085 .169 0 cmyk
f
140.094 545.286 mo
107.727 545.286 li
107.315 543.627 li
140.094 543.627 li
140.094 545.286 li
0 .083 .165 0 cmyk
f
140.06 545.144 mo
107.715 545.144 li
107.313 543.486 li
140.06 543.486 li
140.06 545.144 li
0 .081 .162 0 cmyk
f
140.026 545.003 mo
107.704 545.003 li
107.311 543.344 li
140.026 543.344 li
140.026 545.003 li
0 .079 .158 0 cmyk
f
139.993 544.862 mo
107.692 544.862 li
107.309 543.203 li
139.993 543.203 li
139.993 544.862 li
0 .077 .154 0 cmyk
f
139.959 544.72 mo
107.681 544.72 li
107.307 543.062 li
139.959 543.062 li
139.959 544.72 li
0 .075 .15 0 cmyk
f
139.926 544.579 mo
107.669 544.579 li
107.305 542.921 li
139.926 542.921 li
139.926 544.579 li
0 .073 .146 0 cmyk
f
139.892 544.438 mo
107.658 544.438 li
107.303 542.779 li
139.892 542.779 li
139.892 544.438 li
0 .071 .142 0 cmyk
f
139.859 544.297 mo
107.646 544.297 li
107.301 542.638 li
139.859 542.638 li
139.859 544.297 li
0 .069 .139 0 cmyk
f
139.826 544.155 mo
107.635 544.155 li
107.299 542.496 li
139.826 542.496 li
139.826 544.155 li
0 .067 .135 0 cmyk
f
139.792 544.014 mo
107.623 544.014 li
107.297 542.355 li
139.792 542.355 li
139.792 544.014 li
0 .065 .131 0 cmyk
f
139.758 543.873 mo
107.612 543.873 li
107.296 542.214 li
139.758 542.214 li
139.758 543.873 li
0 .064 .127 0 cmyk
f
139.725 543.732 mo
107.6 543.732 li
107.293 542.073 li
139.725 542.073 li
139.725 543.732 li
0 .062 .123 0 cmyk
f
139.691 543.59 mo
107.589 543.59 li
107.292 541.931 li
139.691 541.931 li
139.691 543.59 li
0 .06 .119 0 cmyk
f
139.658 543.448 mo
107.577 543.448 li
107.29 541.79 li
139.658 541.79 li
139.658 543.448 li
0 .058 .115 0 cmyk
f
139.624 543.307 mo
107.565 543.307 li
107.288 541.649 li
139.624 541.649 li
139.624 543.307 li
0 .056 .112 0 cmyk
f
139.591 543.166 mo
107.554 543.166 li
107.286 541.508 li
139.591 541.508 li
139.591 543.166 li
0 .054 .108 0 cmyk
f
139.557 543.025 mo
107.542 543.025 li
107.284 541.366 li
139.557 541.366 li
139.557 543.025 li
0 .052 .104 0 cmyk
f
139.523 542.884 mo
107.531 542.884 li
107.282 541.225 li
139.523 541.225 li
139.523 542.884 li
0 .05 .1 0 cmyk
f
139.49 542.743 mo
107.519 542.743 li
107.28 541.084 li
139.49 541.084 li
139.49 542.743 li
0 .048 .096 0 cmyk
f
139.456 542.601 mo
107.508 542.601 li
107.278 540.942 li
139.456 540.942 li
139.456 542.601 li
0 .046 .092 0 cmyk
f
139.423 542.46 mo
107.496 542.46 li
107.276 540.801 li
139.423 540.801 li
139.423 542.46 li
0 .044 .089 0 cmyk
f
139.389 542.318 mo
107.485 542.318 li
107.274 540.66 li
139.389 540.66 li
139.389 542.318 li
0 .042 .085 0 cmyk
f
139.356 542.177 mo
107.474 542.177 li
107.272 540.518 li
139.356 540.518 li
139.356 542.177 li
0 .04 .081 0 cmyk
f
139.322 542.036 mo
107.462 542.036 li
107.27 540.377 li
139.322 540.377 li
139.322 542.036 li
0 .039 .077 0 cmyk
f
139.289 541.895 mo
107.45 541.895 li
107.268 540.236 li
139.289 540.236 li
139.289 541.895 li
0 .037 .073 0 cmyk
f
139.255 541.753 mo
107.439 541.753 li
107.266 540.094 li
139.255 540.094 li
139.255 541.753 li
0 .035 .069 0 cmyk
f
139.222 541.612 mo
107.427 541.612 li
107.264 539.953 li
139.222 539.953 li
139.222 541.612 li
0 .033 .065 0 cmyk
f
139.188 541.47 mo
107.416 541.47 li
107.262 539.812 li
139.188 539.812 li
139.188 541.47 li
0 .031 .062 0 cmyk
f
139.155 541.329 mo
107.404 541.329 li
107.26 539.671 li
139.155 539.671 li
139.155 541.329 li
0 .029 .058 0 cmyk
f
139.121 541.188 mo
107.393 541.188 li
107.259 539.529 li
139.121 539.529 li
139.121 541.188 li
0 .027 .054 0 cmyk
f
139.088 541.047 mo
107.381 541.047 li
107.257 539.388 li
139.088 539.388 li
139.088 541.047 li
0 .025 .05 0 cmyk
f
139.054 540.905 mo
107.369 540.905 li
107.255 539.247 li
139.054 539.247 li
139.054 540.905 li
0 .023 .046 0 cmyk
f
139.02 540.764 mo
107.358 540.764 li
107.253 539.105 li
139.02 539.105 li
139.02 540.764 li
0 .021 .042 0 cmyk
f
138.987 540.623 mo
107.347 540.623 li
107.251 538.964 li
138.987 538.964 li
138.987 540.623 li
0 .019 .039 0 cmyk
f
138.953 540.482 mo
107.335 540.482 li
107.249 538.823 li
138.953 538.823 li
138.953 540.482 li
0 .017 .035 0 cmyk
f
138.92 540.34 mo
107.323 540.34 li
107.247 538.682 li
138.92 538.682 li
138.92 540.34 li
0 .015 .031 0 cmyk
f
138.887 540.199 mo
107.312 540.199 li
107.245 538.54 li
138.887 538.54 li
138.887 540.199 li
0 .014 .027 0 cmyk
f
138.853 540.058 mo
107.3 540.058 li
107.243 538.399 li
138.853 538.399 li
138.853 540.058 li
0 .012 .023 0 cmyk
f
138.82 539.916 mo
107.289 539.916 li
107.241 538.257 li
138.82 538.257 li
138.82 539.916 li
0 .01 .019 0 cmyk
f
138.786 539.775 mo
107.277 539.775 li
107.239 538.116 li
138.786 538.116 li
138.786 539.775 li
0 .008 .015 0 cmyk
f
138.752 539.634 mo
107.266 539.634 li
107.237 537.975 li
138.752 537.975 li
138.752 539.634 li
0 .006 .012 0 cmyk
f
138.719 539.493 mo
107.254 539.493 li
107.235 537.834 li
138.719 537.834 li
138.719 539.493 li
0 .004 .008 0 cmyk
f
138.685 539.351 mo
107.243 539.351 li
107.233 537.692 li
138.685 537.692 li
138.685 539.351 li
0 .002 .004 0 cmyk
f
107.231 537.551 mo
138.652 537.551 li
138.652 539.21 li
107.231 539.21 li
cp
1 gry
f
.498 lw
458.604 559.543 mo
581.455 559.543 li
581.455 707.266 li
378.007 707.266 li
378.007 559.543 li
447.845 559.543 li
447.845 564.496 li
458.604 564.496 li
458.604 559.543 li
cp
true sop
0 gry
@
gsave
581.455 584.623 mo
581.455 559.543 li
458.604 559.543 li
458.604 564.496 li
447.845 564.496 li
447.845 559.543 li
378.007 559.543 li
378.007 584.954 li
581.455 584.623 li
clp
0 -33.015 mo
792 -33.015 li
792 1190.98 li
0 1190.98 li
cp
false sop
level3{
gsave
clp
[1 0 0 .144104 0 1191 ]ct
/2 
<<
/ShadingType 2 
/BBox [0 -8493.97 792 -.104193 ] 
/ColorSpace /0 /CSA get_res
/Coords [377.758 -4394.82 581.704 -4394.82 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 0 .8 0 ]
/C1 [0 0 0 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 0 0 0 ]
/C1 [.5 0 .5 0 ]
/N 1 
>>
]
/Bounds [.7 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 .144104 0 1191 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8Dllq=jUUoCDD>mHj0'kiV!eio/eOgtUQ8f@AC!dEp1`bK@oH`l,d2^qRLp]",;Y[Bm0CYH=n,WMl\j
US=HSSt):<R$X)&P*(idNJi[MLPCJ7JUi2tI!U'^G'%eGE,TT0CM@HoARf1X?X?uA=]ea*<)QRh:/+AR
84Q-;6U<t$4Zkbc2`<KK1,(@5/1N(s-7'l\+WhaF)]9J/'bh8m%h9$V$4$k?"9SZ)!<NB.#71bH%M03c
'c%W))]^"C+s\H^.4Ql$0/57>2E3]Y4[)+t6UaL98k_rT;,U@n='8^3?=.,NA7fLhCMds.EcZAIG^=ac
~>
0 <~bf\&Ka2Z*:_SO%&^:h1j\[],W[C!6EYck43XK&7uVl$;dUS4?QSt2C@R@'>,Q'@JpOH5E]N/NOKLPCM9
K7\W'IXQTjH?aXWF`_\FE,TW2Chmd!B4b^c@q&hQ?<pf?>$4p-<E)mp;,9q]9M7uL7n,p86UF('5!;"i
3]T/X2)I*E0eb43/1W2!-mg5c,9e9R*ZZ4>)AsA-'bh;o&J,H^$k!CK#R:M9!s/K'!<NB.#71bH%M03c
'c%W))]^"C+s\H^.4Ql$0/57>2E3]Y4[)+t6UaL98k_rT;,U@n='8^3?=.,NA7fLhCMds.EcZAIG^=ac
~>
0 ]
>>
377.758 -4394.82 581.704 -4394.82 [0 -8493.97 792 -.104193 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
grestore
581.455 584.623 mo
581.455 559.543 li
458.604 559.543 li
458.604 564.496 li
447.845 564.496 li
447.845 559.543 li
378.007 559.543 li
378.007 584.954 li
581.455 584.623 li
cp
@
417.07 616.337 mo
417.07 617.818 415.851 619.037 414.37 619.037 cv
412.889 619.037 411.67 617.818 411.67 616.337 cv
411.67 614.856 412.889 613.637 414.37 613.637 cv
415.851 613.637 417.07 614.856 417.07 616.337 cv
cp
false sop
0 0 0 0 cmyk
f
.249 lw
417.07 616.337 mo
417.07 617.818 415.851 619.037 414.37 619.037 cv
412.889 619.037 411.67 617.818 411.67 616.337 cv
411.67 614.856 412.889 613.637 414.37 613.637 cv
415.851 613.637 417.07 614.856 417.07 616.337 cv
cp
@
429.979 609.609 mo
429.979 611.091 428.759 612.309 427.279 612.309 cv
425.797 612.309 424.578 611.091 424.578 609.609 cv
424.578 608.129 425.797 606.911 427.279 606.911 cv
428.759 606.911 429.979 608.129 429.979 609.609 cv
cp
f
429.979 609.609 mo
429.979 611.091 428.759 612.309 427.279 612.309 cv
425.797 612.309 424.578 611.091 424.578 609.609 cv
424.578 608.129 425.797 606.911 427.279 606.911 cv
428.759 606.911 429.979 608.129 429.979 609.609 cv
cp
@
405.252 533.495 mo
405.252 534.976 404.033 536.194 402.552 536.194 cv
401.072 536.194 399.852 534.976 399.852 533.495 cv
399.852 532.014 401.072 530.795 402.552 530.795 cv
404.033 530.795 405.252 532.014 405.252 533.495 cv
cp
f
405.252 533.495 mo
405.252 534.976 404.033 536.194 402.552 536.194 cv
401.072 536.194 399.852 534.976 399.852 533.495 cv
399.852 532.014 401.072 530.795 402.552 530.795 cv
404.033 530.795 405.252 532.014 405.252 533.495 cv
cp
@
418.161 526.768 mo
418.161 528.249 416.941 529.467 415.46 529.467 cv
413.98 529.467 412.761 528.249 412.761 526.768 cv
412.761 525.287 413.98 524.068 415.46 524.068 cv
416.941 524.068 418.161 525.287 418.161 526.768 cv
cp
f
418.161 526.768 mo
418.161 528.249 416.941 529.467 415.46 529.467 cv
413.98 529.467 412.761 528.249 412.761 526.768 cv
412.761 525.287 413.98 524.068 415.46 524.068 cv
416.941 524.068 418.161 525.287 418.161 526.768 cv
cp
@
447.614 548.498 mo
447.614 549.979 446.396 551.198 444.915 551.198 cv
443.433 551.198 442.215 549.979 442.215 548.498 cv
442.215 547.017 443.433 545.798 444.915 545.798 cv
446.396 545.798 447.614 547.017 447.614 548.498 cv
cp
f
447.614 548.498 mo
447.614 549.979 446.396 551.198 444.915 551.198 cv
443.433 551.198 442.215 549.979 442.215 548.498 cv
442.215 547.017 443.433 545.798 444.915 545.798 cv
446.396 545.798 447.614 547.017 447.614 548.498 cv
cp
@
460.523 541.408 mo
460.523 542.888 459.304 544.107 457.823 544.107 cv
456.342 544.107 455.123 542.888 455.123 541.408 cv
455.123 539.926 456.342 538.708 457.823 538.708 cv
459.304 538.708 460.523 539.926 460.523 541.408 cv
cp
f
460.523 541.408 mo
460.523 542.888 459.304 544.107 457.823 544.107 cv
456.342 544.107 455.123 542.888 455.123 541.408 cv
455.123 539.926 456.342 538.708 457.823 538.708 cv
459.304 538.708 460.523 539.926 460.523 541.408 cv
cp
@
474.523 517.401 mo
474.523 518.882 473.304 520.1 471.823 520.1 cv
470.341 520.1 469.123 518.882 469.123 517.401 cv
469.123 515.92 470.341 514.701 471.823 514.701 cv
473.304 514.701 474.523 515.92 474.523 517.401 cv
cp
f
474.523 517.401 mo
474.523 518.882 473.304 520.1 471.823 520.1 cv
470.341 520.1 469.123 518.882 469.123 517.401 cv
469.123 515.92 470.341 514.701 471.823 514.701 cv
473.304 514.701 474.523 515.92 474.523 517.401 cv
cp
@
487.431 510.674 mo
487.431 512.154 486.213 513.373 484.731 513.373 cv
483.251 513.373 482.032 512.154 482.032 510.674 cv
482.032 509.193 483.251 507.974 484.731 507.974 cv
486.213 507.974 487.431 509.193 487.431 510.674 cv
cp
f
487.431 510.674 mo
487.431 512.154 486.213 513.373 484.731 513.373 cv
483.251 513.373 482.032 512.154 482.032 510.674 cv
482.032 509.193 483.251 507.974 484.731 507.974 cv
486.213 507.974 487.431 509.193 487.431 510.674 cv
cp
@
491.431 532.404 mo
491.431 533.885 490.212 535.104 488.731 535.104 cv
487.25 535.104 486.032 533.885 486.032 532.404 cv
486.032 530.923 487.25 529.704 488.731 529.704 cv
490.212 529.704 491.431 530.923 491.431 532.404 cv
cp
f
491.431 532.404 mo
491.431 533.885 490.212 535.104 488.731 535.104 cv
487.25 535.104 486.032 533.885 486.032 532.404 cv
486.032 530.923 487.25 529.704 488.731 529.704 cv
490.212 529.704 491.431 530.923 491.431 532.404 cv
cp
@
504.34 525.677 mo
504.34 527.158 503.121 528.377 501.64 528.377 cv
500.158 528.377 498.94 527.158 498.94 525.677 cv
498.94 524.196 500.158 522.977 501.64 522.977 cv
503.121 522.977 504.34 524.196 504.34 525.677 cv
cp
f
504.34 525.677 mo
504.34 527.158 503.121 528.377 501.64 528.377 cv
500.158 528.377 498.94 527.158 498.94 525.677 cv
498.94 524.196 500.158 522.977 501.64 522.977 cv
503.121 522.977 504.34 524.196 504.34 525.677 cv
cp
@
523.43 517.401 mo
523.43 518.882 522.212 520.1 520.73 520.1 cv
519.25 520.1 518.03 518.882 518.03 517.401 cv
518.03 515.92 519.25 514.701 520.73 514.701 cv
522.212 514.701 523.43 515.92 523.43 517.401 cv
cp
f
523.43 517.401 mo
523.43 518.882 522.212 520.1 520.73 520.1 cv
519.25 520.1 518.03 518.882 518.03 517.401 cv
518.03 515.92 519.25 514.701 520.73 514.701 cv
522.212 514.701 523.43 515.92 523.43 517.401 cv
cp
@
536.338 510.674 mo
536.338 512.154 535.12 513.373 533.639 513.373 cv
532.159 513.373 530.94 512.154 530.94 510.674 cv
530.94 509.193 532.159 507.974 533.639 507.974 cv
535.12 507.974 536.338 509.193 536.338 510.674 cv
cp
f
536.338 510.674 mo
536.338 512.154 535.12 513.373 533.639 513.373 cv
532.159 513.373 530.94 512.154 530.94 510.674 cv
530.94 509.193 532.159 507.974 533.639 507.974 cv
535.12 507.974 536.338 509.193 536.338 510.674 cv
cp
@
406.381 691.118 mo
406.381 692.969 404.858 694.493 403.007 694.493 cv
401.155 694.493 399.632 692.969 399.632 691.118 cv
399.632 689.268 401.155 687.744 403.007 687.744 cv
404.858 687.744 406.381 689.268 406.381 691.118 cv
cp
f
406.381 691.118 mo
406.381 692.969 404.858 694.493 403.007 694.493 cv
401.155 694.493 399.632 692.969 399.632 691.118 cv
399.632 689.268 401.155 687.744 403.007 687.744 cv
404.858 687.744 406.381 689.268 406.381 691.118 cv
cp
@
422.518 682.891 mo
422.518 684.743 420.994 686.266 419.142 686.266 cv
417.292 686.266 415.768 684.743 415.768 682.891 cv
415.768 681.04 417.292 679.516 419.142 679.516 cv
420.994 679.516 422.518 681.04 422.518 682.891 cv
cp
f
422.518 682.891 mo
422.518 684.743 420.994 686.266 419.142 686.266 cv
417.292 686.266 415.768 684.743 415.768 682.891 cv
415.768 681.04 417.292 679.516 419.142 679.516 cv
420.994 679.516 422.518 681.04 422.518 682.891 cv
cp
@
220.921 452.448 mo
239.102 452.448 li
239.102 464.812 li
220.921 464.812 li
cp
.9 .6 0 0 cmyk
f
.498 lw
220.921 452.448 mo
239.102 452.448 li
239.102 464.812 li
220.921 464.812 li
cp
true sop
0 gry
@
343.473 575.02 mo
343.473 619.019 li
349.281 602.473 li
349.29 593.928 li
343.473 575.02 li
false sop
1 gry
f
343.473 575.02 mo
343.473 619.019 li
349.281 602.473 li
349.29 593.928 li
343.473 575.02 li
.9 .6 0 0 cmyk
f
220.739 575.02 mo
220.739 619.019 li
214.921 603.383 li
214.921 593.201 li
220.739 575.02 li
1 gry
f
220.921 468.288 mo
239.102 468.288 li
239.102 480.652 li
220.921 480.652 li
cp
f
331.645 619.019 mo
326.191 619.019 li
326.191 670.835 li
407.642 670.835 li
407.642 674.472 li
413.097 674.472 li
413.097 665.381 li
331.645 665.381 li
331.645 619.019 li
cp
0 0 0 0 cmyk
f
.249 lw
331.645 619.019 mo
326.191 619.019 li
326.191 670.835 li
407.642 670.835 li
407.642 674.472 li
413.097 674.472 li
413.097 665.381 li
331.645 665.381 li
331.645 619.019 li
cp
@
.498 lw
331.645 619.019 mo
326.191 619.019 li
326.191 670.835 li
407.642 670.835 li
407.642 674.472 li
413.097 674.472 li
413.097 665.381 li
331.645 665.381 li
331.645 619.019 li
cp
true sop
0 gry
@
.249 lw
220.921 468.288 mo
239.102 468.288 li
239.102 480.652 li
220.921 480.652 li
cp
false sop
1 0 0 0 cmyk
@
gsave
220.921 483.63 mo
239.102 483.63 li
239.102 495.994 li
220.921 495.994 li
cp
clp
0 -33.015 mo
792 -33.015 li
792 1190.98 li
0 1190.98 li
cp
level3{
gsave
clp
[1 0 0 .875198 0 1191 ]ct
/3 
<<
/ShadingType 2 
/BBox [0 -1398.56 792 -.0171557 ] 
/ColorSpace /0 /CSA get_res
/Coords [220.672 -810.483 239.351 -810.483 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 0 .8 0 ]
/C1 [0 0 0 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 0 0 0 ]
/C1 [.5 0 .5 0 ]
/N 1 
>>
]
/Bounds [.7 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 .875198 0 1191 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8Dllq=jUUoCDD>mHj0'kiV!eio/eOgtUQ8f@AC!dEp1`bK@oH`l,d2^qRLp]",;Y[Bm0CYH=n,WMl\j
US=HSSt):<R$X)&P*(idNJi[MLPCJ7JUi2tI!U'^G'%eGE,TT0CM@HoARf1X?X?uA=]ea*<)QRh:/+AR
84Q-;6U<t$4Zkbc2`<KK1,(@5/1N(s-7'l\+WhaF)]9J/'bh8m%h9$V$4$k?"9SZ)!<NB.#71bH%M03c
'c%W))]^"C+s\H^.4Ql$0/57>2E3]Y4[)+t6UaL98k_rT;,U@n='8^3?=.,NA7fLhCMds.EcZAIG^=ac
~>
0 <~bf\&Ka2Z*:_SO%&^:h1j\[],W[C!6EYck43XK&7uVl$;dUS4?QSt2C@R@'>,Q'@JpOH5E]N/NOKLPCM9
K7\W'IXQTjH?aXWF`_\FE,TW2Chmd!B4b^c@q&hQ?<pf?>$4p-<E)mp;,9q]9M7uL7n,p86UF('5!;"i
3]T/X2)I*E0eb43/1W2!-mg5c,9e9R*ZZ4>)AsA-'bh;o&J,H^$k!CK#R:M9!s/K'!<NB.#71bH%M03c
'c%W))]^"C+s\H^.4Ql$0/57>2E3]Y4[)+t6UaL98k_rT;,U@n='8^3?=.,NA7fLhCMds.EcZAIG^=ac
~>
0 ]
>>
220.672 -810.483 239.351 -810.483 [0 -1398.56 792 -.0171557 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
grestore
.498 lw
220.921 483.63 mo
239.102 483.63 li
239.102 495.994 li
220.921 495.994 li
cp
true sop
0 gry
@
438.868 665.199 mo
508.912 665.199 li
508.912 703.709 li
438.868 703.709 li
cp
false sop
1 gry
f
438.868 665.199 mo
508.912 665.199 li
508.912 703.709 li
438.868 703.709 li
cp
true sop
0 0 0 1 nzopmsc
@
512.912 630.655 mo
572.91 630.655 li
572.91 703.709 li
512.912 703.709 li
cp
false sop
1 gry
f
512.912 630.655 mo
572.91 630.655 li
572.91 703.709 li
512.912 703.709 li
cp
true sop
0 0 0 1 nzopmsc
@
.249 lw
1 lc
113.47 694.835 mo
113.47 694.835 113.742 694.289 113.379 694.016 cv
117.447 689.301 mo
117.447 689.301 118.602 687.774 119.972 687.276 cv
0 gry
@
.498 lw
0 lc
234.375 575.02 mo
240.011 575.02 li
138.015 627.382 mo
135.105 627.382 li
137.832 631.745 mo
135.105 631.745 li
414.37 613.656 mo
427.096 612.292 li
0 0 0 1 nzopmsc
@
417.07 616.337 mo
417.07 617.818 415.851 619.037 414.37 619.037 cv
412.889 619.037 411.67 617.818 411.67 616.337 cv
411.67 614.856 412.889 613.637 414.37 613.637 cv
415.851 613.637 417.07 614.856 417.07 616.337 cv
false sop
.75 gry
f
417.07 616.337 mo
417.07 617.818 415.851 619.037 414.37 619.037 cv
412.889 619.037 411.67 617.818 411.67 616.337 cv
411.67 614.856 412.889 613.637 414.37 613.637 cv
415.851 613.637 417.07 614.856 417.07 616.337 cv
cp
true sop
0 0 0 1 nzopmsc
@
429.979 609.609 mo
429.979 611.091 428.759 612.309 427.279 612.309 cv
425.797 612.309 424.578 611.091 424.578 609.609 cv
424.578 608.129 425.797 606.911 427.279 606.911 cv
428.759 606.911 429.979 608.129 429.979 609.609 cv
false sop
.75 gry
f
429.979 609.609 mo
429.979 611.091 428.759 612.309 427.279 612.309 cv
425.797 612.309 424.578 611.091 424.578 609.609 cv
424.578 608.129 425.797 606.911 427.279 606.911 cv
428.759 606.911 429.979 608.129 429.979 609.609 cv
cp
true sop
0 0 0 1 nzopmsc
@
405.252 533.495 mo
405.252 534.976 404.033 536.194 402.552 536.194 cv
401.072 536.194 399.852 534.976 399.852 533.495 cv
399.852 532.014 401.072 530.795 402.552 530.795 cv
404.033 530.795 405.252 532.014 405.252 533.495 cv
false sop
.75 gry
f
405.252 533.495 mo
405.252 534.976 404.033 536.194 402.552 536.194 cv
401.072 536.194 399.852 534.976 399.852 533.495 cv
399.852 532.014 401.072 530.795 402.552 530.795 cv
404.033 530.795 405.252 532.014 405.252 533.495 cv
cp
true sop
0 0 0 1 nzopmsc
@
418.161 526.768 mo
418.161 528.249 416.941 529.467 415.46 529.467 cv
413.98 529.467 412.761 528.249 412.761 526.768 cv
412.761 525.287 413.98 524.068 415.46 524.068 cv
416.941 524.068 418.161 525.287 418.161 526.768 cv
false sop
.75 gry
f
418.161 526.768 mo
418.161 528.249 416.941 529.467 415.46 529.467 cv
413.98 529.467 412.761 528.249 412.761 526.768 cv
412.761 525.287 413.98 524.068 415.46 524.068 cv
416.941 524.068 418.161 525.287 418.161 526.768 cv
cp
true sop
0 0 0 1 nzopmsc
@
447.614 548.498 mo
447.614 549.979 446.396 551.198 444.915 551.198 cv
443.433 551.198 442.215 549.979 442.215 548.498 cv
442.215 547.017 443.433 545.798 444.915 545.798 cv
446.396 545.798 447.614 547.017 447.614 548.498 cv
false sop
.75 gry
f
447.614 548.498 mo
447.614 549.979 446.396 551.198 444.915 551.198 cv
443.433 551.198 442.215 549.979 442.215 548.498 cv
442.215 547.017 443.433 545.798 444.915 545.798 cv
446.396 545.798 447.614 547.017 447.614 548.498 cv
cp
true sop
0 0 0 1 nzopmsc
@
460.523 541.408 mo
460.523 542.888 459.304 544.107 457.823 544.107 cv
456.342 544.107 455.123 542.888 455.123 541.408 cv
455.123 539.926 456.342 538.708 457.823 538.708 cv
459.304 538.708 460.523 539.926 460.523 541.408 cv
false sop
.75 gry
f
460.523 541.408 mo
460.523 542.888 459.304 544.107 457.823 544.107 cv
456.342 544.107 455.123 542.888 455.123 541.408 cv
455.123 539.926 456.342 538.708 457.823 538.708 cv
459.304 538.708 460.523 539.926 460.523 541.408 cv
cp
true sop
0 0 0 1 nzopmsc
@
474.523 517.401 mo
474.523 518.882 473.304 520.1 471.823 520.1 cv
470.341 520.1 469.123 518.882 469.123 517.401 cv
469.123 515.92 470.341 514.701 471.823 514.701 cv
473.304 514.701 474.523 515.92 474.523 517.401 cv
false sop
.75 gry
f
474.523 517.401 mo
474.523 518.882 473.304 520.1 471.823 520.1 cv
470.341 520.1 469.123 518.882 469.123 517.401 cv
469.123 515.92 470.341 514.701 471.823 514.701 cv
473.304 514.701 474.523 515.92 474.523 517.401 cv
cp
true sop
0 0 0 1 nzopmsc
@
487.431 510.674 mo
487.431 512.154 486.213 513.373 484.731 513.373 cv
483.251 513.373 482.032 512.154 482.032 510.674 cv
482.032 509.193 483.251 507.974 484.731 507.974 cv
486.213 507.974 487.431 509.193 487.431 510.674 cv
false sop
.75 gry
f
487.431 510.674 mo
487.431 512.154 486.213 513.373 484.731 513.373 cv
483.251 513.373 482.032 512.154 482.032 510.674 cv
482.032 509.193 483.251 507.974 484.731 507.974 cv
486.213 507.974 487.431 509.193 487.431 510.674 cv
cp
true sop
0 0 0 1 nzopmsc
@
491.431 532.404 mo
491.431 533.885 490.212 535.104 488.731 535.104 cv
487.25 535.104 486.032 533.885 486.032 532.404 cv
486.032 530.923 487.25 529.704 488.731 529.704 cv
490.212 529.704 491.431 530.923 491.431 532.404 cv
false sop
.75 gry
f
491.431 532.404 mo
491.431 533.885 490.212 535.104 488.731 535.104 cv
487.25 535.104 486.032 533.885 486.032 532.404 cv
486.032 530.923 487.25 529.704 488.731 529.704 cv
490.212 529.704 491.431 530.923 491.431 532.404 cv
cp
true sop
0 0 0 1 nzopmsc
@
504.34 525.677 mo
504.34 527.158 503.121 528.377 501.64 528.377 cv
500.158 528.377 498.94 527.158 498.94 525.677 cv
498.94 524.196 500.158 522.977 501.64 522.977 cv
503.121 522.977 504.34 524.196 504.34 525.677 cv
false sop
.75 gry
f
504.34 525.677 mo
504.34 527.158 503.121 528.377 501.64 528.377 cv
500.158 528.377 498.94 527.158 498.94 525.677 cv
498.94 524.196 500.158 522.977 501.64 522.977 cv
503.121 522.977 504.34 524.196 504.34 525.677 cv
cp
true sop
0 0 0 1 nzopmsc
@
523.43 517.401 mo
523.43 518.882 522.212 520.1 520.73 520.1 cv
519.25 520.1 518.03 518.882 518.03 517.401 cv
518.03 515.92 519.25 514.701 520.73 514.701 cv
522.212 514.701 523.43 515.92 523.43 517.401 cv
false sop
.75 gry
f
523.43 517.401 mo
523.43 518.882 522.212 520.1 520.73 520.1 cv
519.25 520.1 518.03 518.882 518.03 517.401 cv
518.03 515.92 519.25 514.701 520.73 514.701 cv
522.212 514.701 523.43 515.92 523.43 517.401 cv
cp
true sop
0 0 0 1 nzopmsc
@
536.338 510.674 mo
536.338 512.154 535.12 513.373 533.639 513.373 cv
532.159 513.373 530.94 512.154 530.94 510.674 cv
530.94 509.193 532.159 507.974 533.639 507.974 cv
535.12 507.974 536.338 509.193 536.338 510.674 cv
false sop
.75 gry
f
536.338 510.674 mo
536.338 512.154 535.12 513.373 533.639 513.373 cv
532.159 513.373 530.94 512.154 530.94 510.674 cv
530.94 509.193 532.159 507.974 533.639 507.974 cv
535.12 507.974 536.338 509.193 536.338 510.674 cv
cp
true sop
0 0 0 1 nzopmsc
@
406.381 691.118 mo
406.381 692.969 404.858 694.493 403.007 694.493 cv
401.155 694.493 399.632 692.969 399.632 691.118 cv
399.632 689.268 401.155 687.744 403.007 687.744 cv
404.858 687.744 406.381 689.268 406.381 691.118 cv
false sop
.75 gry
f
406.381 691.118 mo
406.381 692.969 404.858 694.493 403.007 694.493 cv
401.155 694.493 399.632 692.969 399.632 691.118 cv
399.632 689.268 401.155 687.744 403.007 687.744 cv
404.858 687.744 406.381 689.268 406.381 691.118 cv
cp
true sop
0 gry
@
422.518 682.891 mo
422.518 684.743 420.994 686.266 419.142 686.266 cv
417.292 686.266 415.768 684.743 415.768 682.891 cv
415.768 681.04 417.292 679.516 419.142 679.516 cv
420.994 679.516 422.518 681.04 422.518 682.891 cv
false sop
.75 gry
f
422.518 682.891 mo
422.518 684.743 420.994 686.266 419.142 686.266 cv
417.292 686.266 415.768 684.743 415.768 682.891 cv
415.768 681.04 417.292 679.516 419.142 679.516 cv
420.994 679.516 422.518 681.04 422.518 682.891 cv
cp
true sop
0 gry
@
403.007 687.948 mo
418.915 686.244 li
0 0 0 1 nzopmsc
@
490.473 570.117 mo
490.473 571.828 489.698 573.235 488.754 573.235 cv
487.812 573.235 487.036 571.828 487.036 570.117 cv
487.036 568.406 487.812 566.999 488.754 566.999 cv
489.698 566.999 490.473 568.406 490.473 570.117 cv
false sop
0 0 0 0 cmyk
f
490.473 570.117 mo
490.473 571.828 489.698 573.235 488.754 573.235 cv
487.812 573.235 487.036 571.828 487.036 570.117 cv
487.036 568.406 487.812 566.999 488.754 566.999 cv
489.698 566.999 490.473 568.406 490.473 570.117 cv
cp
464.55 521.537 mo
536.912 521.537 li
408.552 536.904 mo
481.278 536.904 li
true sop
0 0 0 1 nzopmsc
@
gsave
492.504 591.747 mo
492.504 594.539 490.206 596.837 487.413 596.837 cv
484.62 596.837 482.321 594.539 482.321 591.747 cv
482.321 588.954 484.62 586.656 487.413 586.656 cv
490.206 586.656 492.504 588.954 492.504 591.747 cv
clp
gsave
0 -33.015 mo
792 -33.015 li
792 1190.98 li
0 1190.98 li
cp
clp
396.053 1586.97 mo
-612.016 579.067 li
395.947 -429.005 li
1404.02 578.903 li
cp
false sop
level3{
gsave
clp
[-.667206 -.667099 .999893 -1 0 1191 ]ct
/4 
<<
/ShadingType 2 
/BBox [-593.588 .00750833 917.294 1008.08 ] 
/ColorSpace /0 /CSA get_res
/Coords [78.334 538.002 89.036 538.002 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 0 0 .05 ]
/C1 [0 0 0 .25 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.667206 -.667099 .999893 -1 0 1191 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~$k*RS%1NaV%LrsY%hB0]%hK9`&.fEc&J5Tf&eYfi',)#m',2,p'GM8s'bqH!()@Z$(Ddl((Dmu+(`4,.
)&X;1)B'M4)]K_8)]Th;*#ot>*??.A*Zc@D+!2RH+!;[K+<VgN+X&!Q+sJ3T,9nEX,:"N[,U=Z^,paia
-71&d-RU8h-R^Ak-n$Mn.4H\q.Olnt.k<,#.kE5&/1`A)/M/P,/hSb/0/"t30/,(60JG490ekC<1,:U?
1,C^B1G^jE1c.$H2)R6K2E!HO2E*QR2`E]U3&ilX3B9)[3]];_3]fDb4$,Pe4?P_h4Ztqk5!D.o5!M7r
~>
]
>>
78.334 538.002 89.036 538.002 [-593.588 .00750833 917.294 1008.08 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
grestore
grestore
492.504 591.747 mo
492.504 594.539 490.206 596.837 487.413 596.837 cv
484.62 596.837 482.321 594.539 482.321 591.747 cv
482.321 588.954 484.62 586.656 487.413 586.656 cv
490.206 586.656 492.504 588.954 492.504 591.747 cv
cp
0 gry
@
gsave
480.686 591.747 mo
480.686 594.539 478.388 596.837 475.595 596.837 cv
472.803 596.837 470.505 594.539 470.505 591.747 cv
470.505 588.954 472.803 586.656 475.595 586.656 cv
478.388 586.656 480.686 588.954 480.686 591.747 cv
clp
gsave
0 -33.015 mo
792 -33.015 li
792 1190.98 li
0 1190.98 li
cp
clp
395.952 1586.99 mo
-611.992 578.911 li
396.048 -429.021 li
1403.99 579.059 li
cp
false sop
level3{
gsave
clp
[-.682602 -.682693 1 -.999893 0 1191 ]ct
/5 
<<
/ShadingType 2 
/BBox [-580.052 .00750722 896.568 1008.05 ] 
/ColorSpace /0 /CSA get_res
/Coords [85.116 532.089 95.818 532.089 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 0 0 .05 ]
/C1 [0 0 0 .25 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.682602 -.682693 1 -.999893 0 1191 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~$k*RS%1NaV%LrsY%hB0]%hK9`&.fEc&J5Tf&eYfi',)#m',2,p'GM8s'bqH!()@Z$(Ddl((Dmu+(`4,.
)&X;1)B'M4)]K_8)]Th;*#ot>*??.A*Zc@D+!2RH+!;[K+<VgN+X&!Q+sJ3T,9nEX,:"N[,U=Z^,paia
-71&d-RU8h-R^Ak-n$Mn.4H\q.Olnt.k<,#.kE5&/1`A)/M/P,/hSb/0/"t30/,(60JG490ekC<1,:U?
1,C^B1G^jE1c.$H2)R6K2E!HO2E*QR2`E]U3&ilX3B9)[3]];_3]fDb4$,Pe4?P_h4Ztqk5!D.o5!M7r
~>
]
>>
85.116 532.089 95.818 532.089 [-580.052 .00750722 896.568 1008.05 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
grestore
grestore
480.686 591.747 mo
480.686 594.539 478.388 596.837 475.595 596.837 cv
472.803 596.837 470.505 594.539 470.505 591.747 cv
470.505 588.954 472.803 586.656 475.595 586.656 cv
478.388 586.656 480.686 588.954 480.686 591.747 cv
cp
@
gsave
469.595 591.747 mo
469.595 594.539 467.297 596.837 464.504 596.837 cv
461.712 596.837 459.414 594.539 459.414 591.747 cv
459.414 588.954 461.712 586.656 464.504 586.656 cv
467.297 586.656 469.595 588.954 469.595 591.747 cv
clp
gsave
0 -33.015 mo
792 -33.015 li
792 1190.98 li
0 1190.98 li
cp
clp
395.952 1586.99 mo
-611.992 578.911 li
396.048 -429.021 li
1403.99 579.059 li
cp
false sop
level3{
gsave
clp
[-.682602 -.682693 1 -.999893 0 1191 ]ct
/6 
<<
/ShadingType 2 
/BBox [-580.052 .00750722 896.568 1008.05 ] 
/ColorSpace /0 /CSA get_res
/Coords [93.873 526.543 104.574 526.543 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 0 0 .05 ]
/C1 [0 0 0 .25 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.682602 -.682693 1 -.999893 0 1191 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~$k*RS%1NaV%LrsY%hB0]%hK9`&.fEc&J5Tf&eYfi',)#m',2,p'GM8s'bqH!()@Z$(Ddl((Dmu+(`4,.
)&X;1)B'M4)]K_8)]Th;*#ot>*??.A*Zc@D+!2RH+!;[K+<VgN+X&!Q+sJ3T,9nEX,:"N[,U=Z^,paia
-71&d-RU8h-R^Ak-n$Mn.4H\q.Olnt.k<,#.kE5&/1`A)/M/P,/hSb/0/"t30/,(60JG490ekC<1,:U?
1,C^B1G^jE1c.$H2)R6K2E!HO2E*QR2`E]U3&ilX3B9)[3]];_3]fDb4$,Pe4?P_h4Ztqk5!D.o5!M7r
~>
]
>>
93.873 526.543 104.574 526.543 [-580.052 .00750722 896.568 1008.05 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
grestore
grestore
469.595 591.747 mo
469.595 594.539 467.297 596.837 464.504 596.837 cv
461.712 596.837 459.414 594.539 459.414 591.747 cv
459.414 588.954 461.712 586.656 464.504 586.656 cv
467.297 586.656 469.595 588.954 469.595 591.747 cv
cp
@
gsave
457.595 591.747 mo
457.595 594.539 455.297 596.837 452.504 596.837 cv
449.712 596.837 447.414 594.539 447.414 591.747 cv
447.414 588.954 449.712 586.656 452.504 586.656 cv
455.297 586.656 457.595 588.954 457.595 591.747 cv
clp
gsave
0 -33.015 mo
792 -33.015 li
792 1190.98 li
0 1190.98 li
cp
clp
396 1586.98 mo
-612 578.985 li
396 -429.015 li
1404 578.985 li
cp
false sop
level3{
gsave
clp
[-.713806 -.713806 1 -1 0 1191 ]ct
/7 
<<
/ShadingType 2 
/BBox [-554.762 .00750732 857.386 1008.01 ] 
/ColorSpace /0 /CSA get_res
/Coords [98.132 520.529 108.833 520.529 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 0 0 .05 ]
/C1 [0 0 0 .25 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.713806 -.713806 1 -1 0 1191 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~$k*RS%1NaV%LrsY%hB0]%hK9`&.fEc&J5Tf&eYfi',)#m',2,p'GM8s'bqH!()@Z$(Ddl((Dmu+(`4,.
)&X;1)B'M4)]K_8)]Th;*#ot>*??.A*Zc@D+!2RH+!;[K+<VgN+X&!Q+sJ3T,9nEX,:"N[,U=Z^,paia
-71&d-RU8h-R^Ak-n$Mn.4H\q.Olnt.k<,#.kE5&/1`A)/M/P,/hSb/0/"t30/,(60JG490ekC<1,:U?
1,C^B1G^jE1c.$H2)R6K2E!HO2E*QR2`E]U3&ilX3B9)[3]];_3]fDb4$,Pe4?P_h4Ztqk5!D.o5!M7r
~>
]
>>
98.132 520.529 108.833 520.529 [-554.762 .00750732 857.386 1008.01 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
grestore
grestore
457.595 591.747 mo
457.595 594.539 455.297 596.837 452.504 596.837 cv
449.712 596.837 447.414 594.539 447.414 591.747 cv
447.414 588.954 449.712 586.656 452.504 586.656 cv
455.297 586.656 457.595 588.954 457.595 591.747 cv
cp
@
gsave
391.416 642.836 mo
391.416 645.629 389.118 647.927 386.324 647.927 cv
383.533 647.927 381.234 645.629 381.234 642.836 cv
381.234 640.043 383.533 637.745 386.324 637.745 cv
389.118 637.745 391.416 640.043 391.416 642.836 cv
clp
gsave
0 -33.015 mo
792 -33.015 li
792 1190.98 li
0 1190.98 li
cp
clp
396 1586.98 mo
-612 578.985 li
396 -429.015 li
1404 578.985 li
cp
false sop
level3{
gsave
clp
[-.744797 -.744797 1 -1 0 1191 ]ct
/8 
<<
/ShadingType 2 
/BBox [-531.679 .00750732 821.711 1008.01 ] 
/ColorSpace /0 /CSA get_res
/Coords [104.081 461.894 114.782 461.894 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 0 0 .05 ]
/C1 [0 0 0 .25 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.744797 -.744797 1 -1 0 1191 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~$k*RS%1NaV%LrsY%hB0]%hK9`&.fEc&J5Tf&eYfi',)#m',2,p'GM8s'bqH!()@Z$(Ddl((Dmu+(`4,.
)&X;1)B'M4)]K_8)]Th;*#ot>*??.A*Zc@D+!2RH+!;[K+<VgN+X&!Q+sJ3T,9nEX,:"N[,U=Z^,paia
-71&d-RU8h-R^Ak-n$Mn.4H\q.Olnt.k<,#.kE5&/1`A)/M/P,/hSb/0/"t30/,(60JG490ekC<1,:U?
1,C^B1G^jE1c.$H2)R6K2E!HO2E*QR2`E]U3&ilX3B9)[3]];_3]fDb4$,Pe4?P_h4Ztqk5!D.o5!M7r
~>
]
>>
104.081 461.894 114.782 461.894 [-531.679 .00750732 821.711 1008.01 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
grestore
grestore
391.416 642.836 mo
391.416 645.629 389.118 647.927 386.324 647.927 cv
383.533 647.927 381.234 645.629 381.234 642.836 cv
381.234 640.043 383.533 637.745 386.324 637.745 cv
389.118 637.745 391.416 640.043 391.416 642.836 cv
cp
@
gsave
403.597 642.836 mo
403.597 645.629 401.299 647.927 398.506 647.927 cv
395.715 647.927 393.416 645.629 393.416 642.836 cv
393.416 640.043 395.715 637.745 398.506 637.745 cv
401.299 637.745 403.597 640.043 403.597 642.836 cv
clp
gsave
0 -33.015 mo
792 -33.015 li
792 1190.98 li
0 1190.98 li
cp
clp
396 1586.98 mo
-612 578.985 li
396 -429.015 li
1404 578.985 li
cp
false sop
level3{
gsave
clp
[-.651703 -.651703 1 -1 0 1191 ]ct
/9 
<<
/ShadingType 2 
/BBox [-607.627 .00750732 939.09 1008.01 ] 
/ColorSpace /0 /CSA get_res
/Coords [109.523 467.984 120.225 467.984 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 0 0 .05 ]
/C1 [0 0 0 .25 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.651703 -.651703 1 -1 0 1191 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~$k*RS%1NaV%LrsY%hB0]%hK9`&.fEc&J5Tf&eYfi',)#m',2,p'GM8s'bqH!()@Z$(Ddl((Dmu+(`4,.
)&X;1)B'M4)]K_8)]Th;*#ot>*??.A*Zc@D+!2RH+!;[K+<VgN+X&!Q+sJ3T,9nEX,:"N[,U=Z^,paia
-71&d-RU8h-R^Ak-n$Mn.4H\q.Olnt.k<,#.kE5&/1`A)/M/P,/hSb/0/"t30/,(60JG490ekC<1,:U?
1,C^B1G^jE1c.$H2)R6K2E!HO2E*QR2`E]U3&ilX3B9)[3]];_3]fDb4$,Pe4?P_h4Ztqk5!D.o5!M7r
~>
]
>>
109.523 467.984 120.225 467.984 [-607.627 .00750732 939.09 1008.01 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
grestore
grestore
403.597 642.836 mo
403.597 645.629 401.299 647.927 398.506 647.927 cv
395.715 647.927 393.416 645.629 393.416 642.836 cv
393.416 640.043 395.715 637.745 398.506 637.745 cv
401.299 637.745 403.597 640.043 403.597 642.836 cv
cp
@
gsave
415.597 642.836 mo
415.597 645.629 413.299 647.927 410.507 647.927 cv
407.713 647.927 405.415 645.629 405.415 642.836 cv
405.415 640.043 407.713 637.745 410.507 637.745 cv
413.299 637.745 415.597 640.043 415.597 642.836 cv
clp
gsave
0 -33.015 mo
792 -33.015 li
792 1190.98 li
0 1190.98 li
cp
clp
396 1586.98 mo
-612 578.985 li
396 -429.015 li
1404 578.985 li
cp
false sop
level3{
gsave
clp
[-.744797 -.744797 1 -1 0 1191 ]ct
/10 
<<
/ShadingType 2 
/BBox [-531.679 .00750732 821.711 1008.01 ] 
/ColorSpace /0 /CSA get_res
/Coords [87.807 473.984 98.508 473.984 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 0 0 .05 ]
/C1 [0 0 0 .25 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.744797 -.744797 1 -1 0 1191 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~$k*RS%1NaV%LrsY%hB0]%hK9`&.fEc&J5Tf&eYfi',)#m',2,p'GM8s'bqH!()@Z$(Ddl((Dmu+(`4,.
)&X;1)B'M4)]K_8)]Th;*#ot>*??.A*Zc@D+!2RH+!;[K+<VgN+X&!Q+sJ3T,9nEX,:"N[,U=Z^,paia
-71&d-RU8h-R^Ak-n$Mn.4H\q.Olnt.k<,#.kE5&/1`A)/M/P,/hSb/0/"t30/,(60JG490ekC<1,:U?
1,C^B1G^jE1c.$H2)R6K2E!HO2E*QR2`E]U3&ilX3B9)[3]];_3]fDb4$,Pe4?P_h4Ztqk5!D.o5!M7r
~>
]
>>
87.807 473.984 98.508 473.984 [-531.679 .00750732 821.711 1008.01 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
grestore
grestore
415.597 642.836 mo
415.597 645.629 413.299 647.927 410.507 647.927 cv
407.713 647.927 405.415 645.629 405.415 642.836 cv
405.415 640.043 407.713 637.745 410.507 637.745 cv
413.299 637.745 415.597 640.043 415.597 642.836 cv
cp
@
gsave
427.596 642.836 mo
427.596 645.629 425.298 647.927 422.506 647.927 cv
419.713 647.927 417.415 645.629 417.415 642.836 cv
417.415 640.043 419.713 637.745 422.506 637.745 cv
425.298 637.745 427.596 640.043 427.596 642.836 cv
clp
gsave
0 -33.015 mo
792 -33.015 li
792 1190.98 li
0 1190.98 li
cp
clp
396 1586.98 mo
-612 578.985 li
396 -429.015 li
1404 578.985 li
cp
false sop
level3{
gsave
clp
[-.698196 -.698196 1 -1 0 1191 ]ct
/11 
<<
/ShadingType 2 
/BBox [-567.165 .00750732 876.555 1008.01 ] 
/ColorSpace /0 /CSA get_res
/Coords [85.337 479.984 96.038 479.984 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 0 0 .05 ]
/C1 [0 0 0 .25 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.698196 -.698196 1 -1 0 1191 ]ct
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~$k*RS%1NaV%LrsY%hB0]%hK9`&.fEc&J5Tf&eYfi',)#m',2,p'GM8s'bqH!()@Z$(Ddl((Dmu+(`4,.
)&X;1)B'M4)]K_8)]Th;*#ot>*??.A*Zc@D+!2RH+!;[K+<VgN+X&!Q+sJ3T,9nEX,:"N[,U=Z^,paia
-71&d-RU8h-R^Ak-n$Mn.4H\q.Olnt.k<,#.kE5&/1`A)/M/P,/hSb/0/"t30/,(60JG490ekC<1,:U?
1,C^B1G^jE1c.$H2)R6K2E!HO2E*QR2`E]U3&ilX3B9)[3]];_3]fDb4$,Pe4?P_h4Ztqk5!D.o5!M7r
~>
]
>>
85.337 479.984 96.038 479.984 [-567.165 .00750732 876.555 1008.01 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
np
grestore
grestore
427.596 642.836 mo
427.596 645.629 425.298 647.927 422.506 647.927 cv
419.713 647.927 417.415 645.629 417.415 642.836 cv
417.415 640.043 419.713 637.745 422.506 637.745 cv
425.298 637.745 427.596 640.043 427.596 642.836 cv
cp
487.231 596.837 mo
487.231 600.292 li
550.502 600.292 li
550.502 630.655 li
475.595 596.837 mo
475.595 604.975 li
543.593 604.975 li
543.593 630.473 li
464.323 596.837 mo
464.323 608.975 li
536.321 608.975 li
536.321 630.473 li
452.323 596.837 mo
452.323 613.884 li
528.321 613.884 li
528.321 630.473 li
422.506 647.927 mo
422.506 650.544 li
477.231 650.544 li
477.231 665.016 li
410.325 648.109 mo
410.325 653.519 li
469.414 653.519 li
469.414 665.199 li
398.506 647.927 mo
398.506 657.701 li
462.868 657.701 li
462.868 665.199 li
386.143 648.109 mo
386.143 661.519 li
455.413 661.519 li
455.413 665.199 li
452.323 573.202 mo
452.323 586.656 li
464.323 573.202 mo
464.323 586.656 li
475.595 573.202 mo
475.595 586.656 li
487.231 573.202 mo
487.231 586.656 li
@
.249 lw
343.473 575.02 mo
343.473 619.019 li
349.281 602.473 li
349.29 593.928 li
343.473 575.02 li
cp
false sop
.2 0 0 0 cmyk
@
.498 lw
343.473 575.02 mo
343.473 619.019 li
349.281 602.473 li
349.29 593.928 li
343.473 575.02 li
cp
true sop
0 gry
@
.996 lw
334.327 678.224 mo
348.144 678.224 li
0 0 0 1 nzopmsc
@
347.441 679.905 mo
347.734 679.766 348.916 679.296 349.931 678.989 cv
351.017 678.661 352.003 678.436 352.642 678.357 cv
352.003 678.276 351.017 678.051 349.931 677.723 cv
348.916 677.417 348.256 677.135 347.441 676.808 cv
347.441 679.905 li
f
359.053 678.224 mo
372.87 678.224 li
@
372.168 679.905 mo
372.46 679.766 373.642 679.296 374.658 678.989 cv
375.743 678.661 376.73 678.436 377.368 678.357 cv
376.73 678.276 375.743 678.051 374.658 677.723 cv
373.642 677.417 372.982 677.135 372.168 676.808 cv
372.168 679.905 li
f
321.017 642.655 mo
321.017 656.472 li
@
322.696 655.769 mo
322.558 656.06 322.087 657.243 321.781 658.259 cv
321.453 659.345 321.228 660.33 321.148 660.969 cv
321.068 660.33 320.844 659.345 320.516 658.259 cv
320.209 657.243 319.927 656.583 319.6 655.769 cv
322.696 655.769 li
f
351.005 560.41 mo
337.188 560.41 li
@
337.89 562.09 mo
337.599 561.952 336.416 561.481 335.401 561.174 cv
334.315 560.846 333.329 560.622 332.69 560.542 cv
333.329 560.462 334.315 560.237 335.401 559.909 cv
336.416 559.603 337.076 559.32 337.89 558.993 cv
337.89 562.09 li
f
309.552 560.41 mo
295.734 560.41 li
@
296.437 562.09 mo
296.145 561.952 294.963 561.481 293.947 561.174 cv
292.861 560.846 291.876 560.622 291.237 560.542 cv
291.876 560.462 292.861 560.237 293.947 559.909 cv
294.963 559.603 295.622 559.32 296.437 558.993 cv
296.437 562.09 li
f
268.099 560.41 mo
254.281 560.41 li
@
254.984 562.09 mo
254.692 561.952 253.509 561.481 252.494 561.174 cv
251.408 560.846 250.423 560.622 249.784 560.542 cv
250.423 560.462 251.408 560.237 252.494 559.909 cv
253.509 559.603 254.169 559.32 254.984 558.993 cv
254.984 562.09 li
f
220.739 575.02 mo
220.739 619.019 li
214.921 603.383 li
214.921 593.201 li
220.739 575.02 li
cp
.9 .6 0 0 nzopmsc
f
.498 lw
220.739 575.02 mo
220.739 619.019 li
214.921 603.383 li
214.921 593.201 li
220.739 575.02 li
cp
0 gry
@
.996 lw
144.295 605.746 mo
144.295 619.564 li
0 0 0 1 nzopmsc
@
145.975 618.861 mo
145.837 619.152 145.365 620.335 145.059 621.351 cv
144.731 622.437 144.506 623.421 144.426 624.062 cv
144.346 623.421 144.122 622.437 143.793 621.351 cv
143.487 620.335 143.205 619.676 142.878 618.861 cv
145.975 618.861 li
f
.498 lw
402.552 530.813 mo
415.28 529.449 li
@
.996 lw
452.648 547.544 mo
452.648 558.373 li
@
454.329 557.67 mo
454.191 557.961 453.719 559.144 453.413 560.159 cv
453.085 561.246 452.86 562.231 452.781 562.87 cv
452.701 562.231 452.476 561.246 452.148 560.159 cv
451.842 559.144 451.56 558.484 451.233 557.67 cv
454.329 557.67 li
f
.498 lw
471.823 514.719 mo
484.549 513.355 li
488.731 529.722 mo
501.458 528.359 li
@
.996 lw
473.012 499.443 mo
473.012 507.901 li
@
474.692 506.471 mo
474.554 506.763 474.083 507.945 473.777 508.96 cv
473.449 510.047 473.224 511.032 473.143 511.671 cv
473.063 511.032 472.839 510.047 472.511 508.96 cv
472.204 507.945 471.922 507.286 471.595 506.471 cv
474.692 506.471 li
f
.498 lw
220.739 575.02 mo
343.644 575.02 li
343.644 619.02 li
220.739 619.02 li
cp
0 gry
@
.996 lw
526.102 499.443 mo
526.102 507.901 li
0 0 0 1 nzopmsc
@
527.781 506.471 mo
527.643 506.763 527.172 507.945 526.866 508.96 cv
526.537 510.047 526.314 511.032 526.233 511.671 cv
526.153 511.032 525.928 510.047 525.6 508.96 cv
525.294 507.945 525.012 507.286 524.684 506.471 cv
527.781 506.471 li
f
.498 lw
520.73 514.719 mo
533.457 513.355 li
@
.996 lw
406.832 499.443 mo
406.832 523.537 li
@
408.512 522.47 mo
408.374 522.762 407.903 523.945 407.597 524.96 cv
407.269 526.046 407.044 527.031 406.963 527.671 cv
406.883 527.031 406.659 526.046 406.331 524.96 cv
406.024 523.945 405.742 523.285 405.415 522.47 cv
408.512 522.47 li
f
gsave
165.9 631.745 mo
135.105 631.745 li
135.105 627.382 li
165.923 627.382 li
clp
792 -33.015 mo
792 1190.98 li
0 1190.98 li
0 -33.015 li
cp
false sop
level3{
gsave
clp
[0 .114502 -1 0 0 1191 ]ct
/12 
<<
/ShadingType 2 
/BBox [-10689.9 -792 -.13113 0 ] 
/ColorSpace /0 /CSA get_res
/Coords [-4920.17 -167.915 -4885.37 -167.915 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 .14999 .05 0 ]
/C1 [0 1 .60001 0 ]
/N 1.35699 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 .14999 .05 0 ]
/C1 [0 1 .60001 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 1 .60001 0 ]
/C1 [0 1 .60001 .2 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 1 .60001 .2 ]
/C1 [0 1 .60001 0 ]
/N 1 
>>
]
/Bounds [.28651 .6236 .85954 ]
/Encode [1 0 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 .114502 -1 0 0 1191 ]ct
clp
/12 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~s8)K]n*B/shqQc4d*0SM_7dFgZEL=-UnO?JQ]mMjM2$Y5I!KmVE,B?&A78hM=]SL!:/"5L6pa.%4#o5W
1GLO8/1N(s-RL2j/2&_72E<i_5sn+492/5\<EE@/?X[JWBkqU*F*2_RI=Hj%LP^tMOcu)uS"64HV5L>q
YHkOE\\,Ym_oBd@c-Xnhf@o$;iT0.clgF96p%\C^s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~R?j&!Nf8gMKS"]%H?aRREGfT-B4YR\?<gZ8<Duaj9hS#H6pa.&4?>J]2)?s?/M&A"-RBu]+<MUD)As>,
'bh8m&.]6\%1E[V&J>cm(E",2*ZlOL,UOlf.kE;+0f(XE3&s&_5!VD$77Kg>92//X;H$Rr=B\p7?XR>Q
AS5[kCi+*0EccGJH$XjdIt<3)L51VCN/is]PE_B"R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2
R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!**%!sAc3#6tM@$4@7N%1Wm[&J>]i'GVB"(Dn#.
)]Tk=*ZlLJ+sJ6W,pjue-n-Vr/1iG+0/,+91,1I8/Lr;"-RL)`+s7sJ*#]\3()7Jq&J#?[$OI(D"U"l-
~>
]
>>
-4920.17 -167.915 -4885.37 -167.915 [-10689.9 -792 -.13113 0 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /12 /Gradient get_res exec grestore
}if
np
grestore
.498 lw
1 lj
165.9 631.745 mo
135.105 631.745 li
135.105 627.382 li
165.923 627.382 li
0 gry
@
gsave
119.58 596.11 mo
119.58 600.473 li
166.014 600.473 li
166.014 603.383 li
214.921 603.383 li
214.921 593.201 li
166.014 593.201 li
166.014 596.11 li
119.58 596.11 li
clp
792 -33.015 mo
792 1190.98 li
0 1190.98 li
0 -33.015 li
cp
/0 
<<
/Names [
(Cyan)
(Magenta)
(Black)
]
/CSA /0 get_csa_by_name
/TintMethod /Subtractive
/TintProc null
/MappedCSA null
/TintTransform
/0 {
0 2 1 roll 
} bind /Procedure add_res
/0 /Procedure get_res
>>
/CSD add_res
/0 /CSD get_res devncs
level3{
gsave
clp
[0 .100296 -1 0 0 1191 ]ct
/13 
<<
/ShadingType 2 
/BBox [-12204 -792 -.149703 0 ] 
/ColorSpace [/DeviceN /devicen_colorspace_dict AGMCORE_gget begin /Names load /MappedCSA load /TintTransform load end]
/Coords [-5959.58 -216.914 -5860.25 -216.914 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.14999 .05 0 ]
/C1 [.89999 .60001 0 ]
/N 1.35699 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.14999 .05 0 ]
/C1 [.89999 .60001 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.89999 .60001 0 ]
/C1 [.89999 .60001 .25 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.89999 .60001 .25 ]
/C1 [.89999 .60001 .10001 ]
/N 1 
>>
]
/Bounds [.28651 .6236 .83708 ]
/Encode [1 0 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 .100296 -1 0 0 1191 ]ct
clp
/13 {
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~jl,(Mf@80lai;65]XbGUYH+UuU7[sDQ'.2eM2$Y6IX?<^Ec>l1B4YOZ?!:?1;c-:`8k2<;5sILo3B&fO
0eb43.k2tr-RL2i/1rV31cIEV4[;>%7S$0H:Jk(l=B\s:@:Nk]C2@d,F*2\PH[^KsKSG>ANK96eQC+,3
T:r$WW2cr%Z*UjI\\,Yl_SsR;bK\D^eCN:,h;@2PjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
~>
<~R?j&!Nf8gMKS"]%H?aRREGfT-B4YR\?<gZ8<Duaj9hS#H6pa.&4?>J]2)?s?/M&A"-RBu]+<MUD)As>,
'bh8m&.]6\%1E[V&J>cm(E",2*ZlOL,UOlf.kE;+0f(XE3&s&_5!VD$77Kg>92//X;H$Rr=B\p7?XR>Q
AS5[kCi+*0EccGJH$XjdIt<3)L51VCN/is]PE_B"R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2
R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!*-'"U52;#mq(M%M'*_',2/s(Dn&0*$$(B+X/-V
,pk#h.P!&%0/,+91Gh!K3&s#]4[)(p5!;"i3]T/Y2Dm?K1GU[=0.nh-.k3"t-mp>f,U4KV+<M[H*?6":
~>
]
>>
-5959.58 -216.914 -5860.25 -216.914 [-12204 -792 -.149703 0 ]true true []
/DeviceN
GenStrips
} /Gradient add_res /13 /Gradient get_res exec grestore
}if
np
grestore
119.58 596.11 mo
119.58 600.473 li
166.014 600.473 li
166.014 603.383 li
214.921 603.383 li
214.921 593.201 li
166.014 593.201 li
166.014 596.11 li
119.58 596.11 li
cp
@
.996 lw
0 lj
225.38 598.188 mo
211.562 598.188 li
false sop
0 0 0 1 cmyk
@
212.265 599.736 mo
211.974 599.598 210.791 599.127 209.776 598.82 cv
208.689 598.492 207.704 598.268 207.065 598.188 cv
207.704 598.107 208.689 597.883 209.776 597.555 cv
210.791 597.248 211.451 596.966 212.265 596.639 cv
212.265 599.736 li
f
.498 lw
444.915 545.634 mo
457.641 544.271 li
true sop
0 0 0 1 nzopmsc
@
220.921 468.288 mo
239.102 468.288 li
239.102 480.652 li
220.921 480.652 li
cp
false sop
0 1 .6 0 cmyk
f
220.921 468.288 mo
239.102 468.288 li
239.102 480.652 li
220.921 480.652 li
cp
true sop
0 gry
@
260.011 613.164 mo
240.739 612.836 234.375 581.201 234.375 581.201 cv
234.375 567.02 li
488.914 567.02 li
488.914 573.202 li
240.084 573.202 li
240.084 573.202 240.011 576.293 239.94 581.029 cv
239.862 586.143 242.481 592.555 244.921 596.837 cv
253.102 611.2 260.011 613.164 260.011 613.164 cv
cp
false sop
0 0 0 0 cmyk
f
.249 lw
260.011 613.164 mo
240.739 612.836 234.375 581.201 234.375 581.201 cv
234.375 567.02 li
488.914 567.02 li
488.914 573.202 li
240.084 573.202 li
240.084 573.202 240.011 576.293 239.94 581.029 cv
239.862 586.143 242.481 592.555 244.921 596.837 cv
253.102 611.2 260.011 613.164 260.011 613.164 cv
cp
@
.397 lw
332.918 582.656 mo
232.194 582.656 li
332.918 584.11 mo
232.194 584.11 li
332.918 586.656 mo
232.194 586.656 li
332.918 588.11 mo
232.194 588.11 li
332.918 590.655 mo
232.194 590.655 li
332.918 592.11 mo
232.194 592.11 li
332.918 594.655 mo
232.194 594.655 li
332.918 596.11 mo
232.194 596.11 li
332.918 598.656 mo
232.194 598.656 li
332.918 600.11 mo
232.194 600.11 li
332.918 602.655 mo
232.194 602.655 li
332.918 604.109 mo
232.194 604.109 li
332.918 606.655 mo
232.194 606.655 li
332.918 608.11 mo
232.194 608.11 li
332.918 610.655 mo
232.194 610.655 li
332.918 612.11 mo
232.194 612.11 li
true sop
0 0 0 1 nzopmsc
@
260.011 613.2 mo
263.987 613.2 280.738 597.019 280.738 597.019 cv
284.192 594.292 294.374 581.201 307.1 581.383 cv
307.1 581.383 297.919 585.292 291.465 592.474 cv
289.815 594.31 272.605 609.588 274.556 607.928 cv
268.465 613.11 260.011 613.2 260.011 613.2 cv
false sop
0 0 0 0 cmyk
f
.498 lw
260.011 613.2 mo
263.987 613.2 280.738 597.019 280.738 597.019 cv
284.192 594.292 294.374 581.201 307.1 581.383 cv
307.1 581.383 297.919 585.292 291.465 592.474 cv
289.815 594.31 272.605 609.588 274.556 607.928 cv
268.465 613.11 260.011 613.2 260.011 613.2 cv
cp
true sop
0 0 0 1 nzopmsc
@
402.984 724.15 mo
417.892 724.15 li
410.438 733.967 li
402.984 724.15 li
cp
false sop
1 gry
f
.249 lw
402.984 724.15 mo
417.892 724.15 li
410.438 733.967 li
402.984 724.15 li
cp
@
407.642 695.38 mo
413.097 695.38 li
413.097 724.149 li
407.642 724.149 li
cp
0 0 0 0 cmyk
f
407.642 695.38 mo
413.097 695.38 li
413.097 724.149 li
407.642 724.149 li
cp
@
.498 lw
1 lj
413.097 724.197 mo
413.097 713.682 413.097 695.38 413.097 695.38 cv
407.642 695.38 li
407.642 695.38 407.642 713.679 407.642 724.197 cv
405.056 724.15 403.007 724.15 403.007 724.15 cv
410.37 733.967 li
417.915 724.15 li
417.915 724.15 415.768 724.15 413.097 724.197 cv
cp
true sop
0 gry
@
349.281 593.928 mo
415.916 593.928 li
415.916 602.519 li
349.281 602.519 li
cp
false sop
1 gry
f
415.916 593.928 mo
424.461 593.928 li
424.461 605.565 li
415.916 605.565 li
cp
f
415.916 593.928 mo
424.461 593.928 li
424.461 605.565 li
415.916 605.565 li
cp
.9 .6 0 0 cmyk
f
.249 lw
0 lj
415.916 593.928 mo
424.461 593.928 li
424.461 605.565 li
415.916 605.565 li
cp
.2 0 0 0 cmyk
@
.498 lw
415.916 593.928 mo
424.461 593.928 li
424.461 605.565 li
415.916 605.565 li
cp
true sop
0 gry
@
.249 lw
415.916 593.928 mo
424.461 593.928 li
424.461 605.565 li
415.916 605.565 li
cp
false sop
.2 0 0 0 cmyk
@
.498 lw
415.916 593.928 mo
424.461 593.928 li
424.461 605.565 li
415.916 605.565 li
cp
true sop
0 gry
@
gsave
349.281 593.928 mo
415.916 593.928 li
415.916 602.519 li
349.281 602.519 li
cp
clp
792 -33.015 mo
792 1190.98 li
0 1190.98 li
0 -33.015 li
cp
false sop
level3{
gsave
clp
[0 .119904 -1 0 0 1191 ]ct
/14 
<<
/ShadingType 2 
/BBox [-10208.3 -792 -.125223 0 ] 
/ColorSpace /0 /CSA get_res
/Coords [-4980.8 -417.908 -4910.18 -417.908 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.14999 .05 0 0 ]
/C1 [.89999 .60001 0 0 ]
/N 1.35699 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.14999 .05 0 0 ]
/C1 [.89999 .60001 0 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.89999 .60001 0 0 ]
/C1 [.89999 .60001 0 .25 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.89999 .60001 0 .25 ]
/C1 [.89999 .60001 0 .10001 ]
/N 1 
>>
]
/Bounds [.28651 .6236 .83708 ]
/Encode [1 0 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 .119904 -1 0 0 1191 ]ct
clp
/14 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~jl,(Mf@80lai;65]XbGUYH+UuU7[sDQ'.2eM2$Y6IX?<^Ec>l1B4YOZ?!:?1;c-:`8k2<;5sILo3B&fO
0eb43.k2tr-RL2i/1rV31cIEV4[;>%7S$0H:Jk(l=B\s:@:Nk]C2@d,F*2\PH[^KsKSG>ANK96eQC+,3
T:r$WW2cr%Z*UjI\\,Yl_SsR;bK\D^eCN:,h;@2PjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
~>
<~R?j&!Nf8gMKS"]%H?aRREGfT-B4YR\?<gZ8<Duaj9hS#H6pa.&4?>J]2)?s?/M&A"-RBu]+<MUD)As>,
'bh8m&.]6\%1E[V&J>cm(E",2*ZlOL,UOlf.kE;+0f(XE3&s&_5!VD$77Kg>92//X;H$Rr=B\p7?XR>Q
AS5[kCi+*0EccGJH$XjdIt<3)L51VCN/is]PE_B"R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2
R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2
~>
0 <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!*-'"U52;#mq(M%M'*_',2/s(Dn&0*$$(B+X/-V
,pk#h.P!&%0/,+91Gh!K3&s#]4[)(p5!;"i3]T/Y2Dm?K1GU[=0.nh-.k3"t-mp>f,U4KV+<M[H*?6":
~>
]
>>
-4980.8 -417.908 -4910.18 -417.908 [-10208.3 -792 -.125223 0 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /14 /Gradient get_res exec grestore
}if
np
grestore
.996 lw
386.641 598.188 mo
372.823 598.188 li
false sop
0 0 0 1 cmyk
@
373.526 599.736 mo
373.234 599.598 372.051 599.126 371.035 598.82 cv
369.95 598.492 368.964 598.267 368.325 598.188 cv
368.964 598.107 369.95 597.883 371.035 597.555 cv
372.051 597.248 372.712 596.966 373.526 596.639 cv
373.526 599.736 li
f
410.64 598.188 mo
396.822 598.188 li
@
397.524 599.736 mo
397.233 599.598 396.05 599.126 395.036 598.82 cv
393.949 598.492 392.964 598.267 392.325 598.188 cv
392.964 598.107 393.949 597.883 395.036 597.555 cv
396.05 597.248 396.711 596.966 397.524 596.639 cv
397.524 599.736 li
f
.249 lw
349.281 593.928 mo
415.916 593.928 li
415.916 602.519 li
349.281 602.519 li
cp
.2 0 0 0 cmyk
@
.498 lw
349.281 593.928 mo
415.916 593.928 li
415.916 602.519 li
349.281 602.519 li
cp
true sop
0 gry
@
383.804 631.178 mo
384.095 631.04 385.279 630.57 386.294 630.264 cv
387.38 629.935 388.366 629.71 389.005 629.63 cv
388.366 629.551 387.38 629.326 386.294 628.998 cv
385.279 628.692 384.618 628.409 383.804 628.082 cv
383.804 631.178 li
0 0 0 1 nzopmsc
f
.996 lw
334.327 629.498 mo
348.144 629.498 li
@
347.441 631.178 mo
347.734 631.04 348.916 630.57 349.931 630.264 cv
351.017 629.935 352.003 629.71 352.642 629.63 cv
352.003 629.551 351.017 629.326 349.931 628.998 cv
348.916 628.692 348.256 628.409 347.441 628.082 cv
347.441 631.178 li
f
203.421 629.498 mo
217.239 629.498 li
@
216.536 631.178 mo
216.828 631.04 218.01 630.57 219.026 630.264 cv
220.112 629.935 221.097 629.71 221.737 629.63 cv
221.097 629.551 220.112 629.326 219.026 628.998 cv
218.01 628.692 217.351 628.409 216.536 628.082 cv
216.536 631.178 li
f
gsave
162.287 625.291 mo
424.552 625.291 li
424.552 633.836 li
162.287 633.836 li
cp
clp
792 -33.015 mo
792 1190.98 li
0 1190.98 li
0 -33.015 li
cp
false sop
level3{
gsave
clp
[0 .0281067 -1 0 0 1191 ]ct
/15 
<<
/ShadingType 2 
/BBox [-43548.9 -792 -.534202 0 ] 
/ColorSpace /0 /CSA get_res
/Coords [-20146.2 -426.544 -19879.9 -426.544 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 .14999 .05 0 ]
/C1 [0 1 .60001 0 ]
/N 1.35699 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 .14999 .05 0 ]
/C1 [0 1 .60001 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 1 .60001 0 ]
/C1 [0 1 .60001 .2 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 1 .60001 .2 ]
/C1 [0 1 .60001 0 ]
/N 1 
>>
]
/Bounds [.28651 .6236 .83708 ]
/Encode [1 0 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 .0281067 -1 0 0 1191 ]ct
clp
/15 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~s8)K]n*B/shqQc4d*0SM_7dFgZEL=-UnO?JQ]mMjM2$Y5I!KmVE,B?&A78hM=]SL!:/"5L6pa.%4#o5W
1GLO8/1N(s-RL2j/2&_72E<i_5sn+492/5\<EE@/?X[JWBkqU*F*2_RI=Hj%LP^tMOcu)uS"64HV5L>q
YHkOE\\,Ym_oBd@c-Xnhf@o$;iT0.clgF96p%\C^s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~R?j&!Nf8gMKS"]%H?aRREGfT-B4YR\?<gZ8<Duaj9hS#H6pa.&4?>J]2)?s?/M&A"-RBu]+<MUD)As>,
'bh8m&.]6\%1E[V&J>cm(E",2*ZlOL,UOlf.kE;+0f(XE3&s&_5!VD$77Kg>92//X;H$Rr=B\p7?XR>Q
AS5[kCi+*0EccGJH$XjdIt<3)L51VCN/is]PE_B"R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2
R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!*-'"9er5#7(VC$OdIS%hK<c&ebro()If*)B0Y:
*ZlLI+X/-V,pjuf.4Qi!/M8Y/0JP=<0J>%1/1N(s-RC#_+sA$L*?5t8(`*r%'+tlf%LigS#m^b?"9S]+
~>
]
>>
-20146.2 -426.544 -19879.9 -426.544 [-43548.9 -792 -.534202 0 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /15 /Gradient get_res exec grestore
}if
np
grestore
.498 lw
1 lj
162.287 625.291 mo
424.552 625.291 li
424.552 633.836 li
162.287 633.836 li
cp
0 gry
@
415.916 622.381 mo
424.461 622.381 li
424.461 625.291 li
415.916 625.291 li
cp
false sop
0 1 .6 0 cmyk
f
2 lj
415.916 622.381 mo
424.461 622.381 li
424.461 625.291 li
415.916 625.291 li
cp
true sop
0 gry
@
0 lj
260.011 613.164 mo
240.739 612.836 234.375 581.201 234.375 581.201 cv
234.375 567.02 li
488.914 567.02 li
488.914 573.202 li
240.084 573.202 li
240.084 573.202 240.011 576.293 239.94 581.029 cv
239.862 586.143 242.481 592.555 244.921 596.837 cv
253.102 611.2 260.011 613.164 260.011 613.164 cv
cp
0 0 0 1 nzopmsc
@
443.097 452.491 mo
502.255 452.491 li
502.255 499.919 li
443.097 499.919 li
cp
false sop
0 0 0 0 cmyk
f
.249 lw
443.097 452.491 mo
502.255 452.491 li
502.255 499.919 li
443.097 499.919 li
cp
@
.498 lw
443.097 452.491 mo
502.255 452.491 li
502.255 499.919 li
443.097 499.919 li
cp
true sop
0 0 0 1 nzopmsc
@
376.917 463.45 mo
436.074 463.45 li
436.074 499.919 li
376.917 499.919 li
cp
false sop
0 0 0 0 cmyk
f
.249 lw
376.917 463.45 mo
436.074 463.45 li
436.074 499.919 li
376.917 499.919 li
cp
@
.498 lw
376.917 463.45 mo
436.074 463.45 li
436.074 499.919 li
376.917 499.919 li
cp
true sop
0 0 0 1 nzopmsc
@
508.55 480.054 mo
544.461 480.054 li
544.461 499.919 li
508.55 499.919 li
cp
false sop
0 0 0 0 cmyk
f
.249 lw
508.55 480.054 mo
544.461 480.054 li
544.461 499.919 li
508.55 499.919 li
cp
@
.498 lw
508.55 480.054 mo
544.461 480.054 li
544.461 499.919 li
508.55 499.919 li
cp
true sop
0 0 0 1 nzopmsc
@
1 lj
99.818 446.754 mo
587.023 446.754 li
587.023 737.514 li
99.818 737.514 li
cp
0 gry
@
.249 lw
1 lc
0 lj
128.316 677.438 mo
128.44 679.431 128.968 681.085 127.569 683.083 cv
125.825 685.574 124.082 686.28 122.089 686.778 cv
@
.498 lw
0 lc
331.645 619.019 mo
331.645 619.019 331.645 610.11 326.191 596.474 cv
320.737 582.838 315.463 581.502 307.1 581.383 cv
307.1 581.383 316.736 584.838 321.464 596.11 cv
326.191 607.382 326.191 618.973 326.191 618.973 cv
331.645 619.019 li
cp
0 0 0 1 nzopmsc
@
.996 lw
125.022 577.881 mo
125.022 564.063 li
@
126.702 564.766 mo
126.565 564.474 126.093 563.291 125.787 562.276 cv
125.459 561.19 125.234 560.205 125.154 559.566 cv
125.074 560.205 124.849 561.19 124.521 562.276 cv
124.215 563.291 123.932 563.951 123.606 564.766 cv
126.702 564.766 li
f
196.828 598.188 mo
183.01 598.188 li
false sop
0 0 0 1 cmyk
@
183.713 599.736 mo
183.422 599.598 182.239 599.127 181.223 598.82 cv
180.137 598.492 179.152 598.268 178.513 598.188 cv
179.152 598.107 180.137 597.883 181.223 597.555 cv
182.239 597.248 182.899 596.966 183.713 596.639 cv
183.713 599.736 li
f
true sop
0 gry
true set_gvm
%ADOBeginSubsetFont: BSFBAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
LJKSOQ+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B854D00D> |-
/quotedbl <1C60D8A8C9B8096E38D5215B2246E075E16A165C2C5209E667FBA
D7C088AC1B19358BD516144F5C74BBFFE520FE0> |-
/parenleft <1C60D8A8C9B81F2C3494302AF9E0730B9DE4DF415D8AF0166596
918D0313D50B3FD932BBF10297463357D208A435AAF6333B431F00D6176587DF
FD28E804F6A0> |-
/parenright <1C60D8A8C9B81F2C3494302AC19E94815CDF933D787C60B059B
30352B86B8934105A115C9B53F281BC3901927A50BBC2AB906A1BED5B7931D7B
09BA14E823EF4> |-
/plus <1C60D8A8C9B7F374F55C0CAEA0C651216089D78CD949CFBAC59F71FF5
6FE44D055C97D5CFE63912D1A32EE969E3DF7FA1F5AB542641D0C> |-
/D <1C60D8A8C9B6079F1E0F8EDF603BDB7B753B20690F0A7859249ED8227A04
751CF5A3C0112FD7B5A38890532048A0A648EC942F3C315E3C28E1C9F1CC8B39
79DBE96D240D96FB7DD816> |-
/K <1C60D8A8C9B64EDF885A62A1CFD38F1E96AD8D5D5D6FA40642FAC68A66EB
F02FA4222C43A398BBA937018B5DBEB37EF02DD5B7DB46AF08538729581ED87F
7929BB27> |-
/N <1C60D8A8C9B6079F1E210ECA6D9DBFF52B92560CBD9979E1E05BA76E19E7
9C717E701C0FC0718F48AB8E450B18EE09EE54BEDEFD0267ED2513286D3391E0
C675> |-
/V <1C60D8A8C9B64EDF884B4A0BC2FBC13237B2B188719C56154AA5A80BD788
0D527893BDCD4BCDE5FD1D091FB90C0D> |-
/W <1C60D8A8C9B5D6EF3E8C8A2E42A4FDA683A760405767FF93810A1F926688
A89912068A7981DEF054B25946CA4EE15A266576A422825E4698BB30F9A86130
DE1A7DB986CFFF313D4883AA73> |-
/k <1C60D8A8C9B7A73DC536B073234B5BC6F183B0F7034D4ED608DA4F11C026
F9D8100FD77FDC223183E22B5AF47F1DD07737ADB9BC3DE48DD0855422B5FB2F> |-
/m <1C60D8A8C9B6B41CC7FB9945DEC726DA76B99B96C036354A2CB4F8378F13
1CB91D5D23E06C56A82322C07A7C95C07A63912699B45B6C1555760D0C2278F8
AACEEC2F84613074B7F4AB12098AA86DDAA6203A7EC448FF45936C9A4FD3474C
54989CCB45DF1C1F726C36> |-
/v <1C60D8A8C9B7A73DC52798DC88B43022FFE811A18D67723CEEA628E59D5A
5A994D79488FF57DF1D0565ACAA4> |-
/y <1C60D8A8C9B7A73DB58654D04ADCA6B9431646561930EA191804E4326372
20AE9FA79FE646DC42AC2DBC785CC34D776D58845F9813BD262A31B6293F4937
A79D515D10665DBBE5EB8AFCABC6ADD7F0D44F> |-
/z <1C60D8A8C9B7A73DC50A36583130A6602DEB2FC0913F07A0F5C0AE23DA14
7F5E6F2EC1BB1E877B6797E724E1FFE325> |-
/endash <1C60D8A8C9B7EF322B918953E7B5FC1669A15EB52E17AE55743D35> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LJKSOQ+Helvetica /Encoding get
dup 32 /space put
dup 34 /quotedbl put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 68 /D put
dup 75 /K put
dup 78 /N put
dup 86 /V put
dup 87 /W put
dup 107 /k put
dup 109 /m put
dup 118 /v put
dup 121 /y put
dup 122 /z put
dup 177 /endash put
pop
%ADOEndSubsetFont
reset_gvm
/LJKSOQ+Helvetica*1 
[32{/.notdef}rp /space /.notdef /quotedbl 5{/.notdef}rp /parenleft /parenright /.notdef 
/plus /.notdef /hyphen /.notdef /slash /zero /one /two 
/.notdef /four /.notdef /six /seven 2{/.notdef}rp /colon 6{/.notdef}rp 
/A /B /C /D /E /F /G /H 
/I /.notdef /K /L /M /N /.notdef /P 
3{/.notdef}rp /T /.notdef /V /W 9{/.notdef}rp /a /b 
/c /d /e /f /g /h /i /.notdef 
/k /l /m /n /o /p /.notdef /r 
/s /t /u /v /w /x /y /z 
54{/.notdef}rp /endash 78{/.notdef}rp]
LJKSOQ+Helvetica nf
LJKSOQ+Helvetica*1 [7.2726 0 0 -7.2726 0 0 ]msf
246.352 461.539 mo
(Venous)
[4.85088 4.04356 4.04356 4.04358 4.04355 0 ]xsh
246.352 477.378 mo
(Arterial)
[4.85088 2.42172 2.02179 4.04355 2.42172 1.61453 4.04355 0 ]xsh
246.352 492.178 mo
(Dialysate)
[5.25082 1.61452 4.04355 1.61453 3.63629 3.63629 4.04358 2.02179 0 ]xsh
500.893 573.566 mo
(Dialysate)
[5.25082 1.6145 4.04358 1.6145 3.63629 3.63629 4.04358 2.02179 0 ]xsh
477.621 716.247 mo
("Delivery" system)
[2.58176 5.25079 4.04358 1.6145 1.61453 3.63629 4.04358 2.42172 3.63629 2.58173 2.02179 3.63632 
3.63629 3.63629 2.02179 4.04358 0 ]xsh
418.713 716.974 mo
(Dialysate drain)
[5.25082 1.6145 4.04358 1.6145 3.63632 3.63629 4.04355 2.02179 4.04358 2.02176 4.04358 2.42172 
4.04355 1.61453 0 ]xsh
257.443 643.383 mo
(Hollow fiber)
[5.25082 4.04355 1.61453 1.6145 4.04358 5.25082 2.02176 2.02179 1.61453 4.04355 4.04358 0 
]xsh
263.988 651.383 mo
(dialyzer)
[4.04355 1.61453 4.04358 1.6145 3.63629 3.63632 4.04355 0 ]xsh
171.081 643.383 mo
(Arterial line)
[4.85088 2.42172 2.02179 4.04356 2.42172 1.61452 4.04356 1.61452 2.02177 1.61452 1.61452 4.04356 
0 ]xsh
170.172 614.292 mo
(Venous line)
[4.85088 4.04356 4.04356 4.04356 4.04356 3.63631 2.02177 1.61452 1.61452 4.04358 0 ]xsh
117.627 543.021 mo
(V)sh
127.809 551.748 mo
(Arteriovenous)
[4.85088 2.42172 2.02177 4.04356 2.42172 1.61452 4.04356 3.63631 4.04356 4.04356 4.04356 4.04356 
0 ]xsh
127.809 559.748 mo
(fistula)
[2.02178 1.61452 3.63631 2.02177 4.04356 1.61452 0 ]xsh
450.77 478.273 mo
(Na)
[5.25082 0 ]xsh
LJKSOQ+Helvetica*1 [5.818 0 0 -5.818 0 0 ]msf
460.045 476.091 mo
(+)sh
LJKSOQ+Helvetica*1 [7.2726 0 0 -7.2726 0 0 ]msf
470.444 478.273 mo
(Cl)
[5.25082 0 ]xsh
LJKSOQ+Helvetica*1 [5.818 0 0 -5.818 0 0 ]msf
477.318 476.091 mo
(\261)sh
LJKSOQ+Helvetica*1 [7.2726 0 0 -7.2726 0 0 ]msf
450.772 486.273 mo
(K)sh
LJKSOQ+Helvetica*1 [5.818 0 0 -5.818 0 0 ]msf
455.683 484.091 mo
(+)sh
LJKSOQ+Helvetica*1 [7.2726 0 0 -7.2726 0 0 ]msf
470.524 486.273 mo
(Acetate)
[4.85089 3.63629 4.04355 2.02179 4.04358 2.02176 0 ]xsh
LJKSOQ+Helvetica*1 [5.818 0 0 -5.818 0 0 ]msf
495.135 484.091 mo
(\261)sh
LJKSOQ+Helvetica*1 [7.2726 0 0 -7.2726 0 0 ]msf
450.772 495 mo
(Ca)
[5.25082 0 ]xsh
LJKSOQ+Helvetica*1 [5.818 0 0 -5.818 0 0 ]msf
460.045 492.818 mo
(2)sh
463.315 492.091 mo
(+)sh
LJKSOQ+Helvetica*1 [7.2726 0 0 -7.2726 0 0 ]msf
470.18 495.129 mo
(Mg)
[6.05801 0 ]xsh
LJKSOQ+Helvetica*1 [5.818 0 0 -5.818 0 0 ]msf
480.362 492.947 mo
(2)sh
483.632 492.22 mo
(+)sh
LJKSOQ+Helvetica*1 [7.2726 0 0 -7.2726 0 0 ]msf
379.969 471.382 mo
(Water treatment)
[6.86533 4.04358 2.02179 4.04355 2.42172 2.02179 2.02179 2.42172 4.04355 4.04355 2.02179 6.05804 
4.04355 4.04358 0 ]xsh
385.423 479.353 mo
(\(deionization)
[2.42172 4.04355 4.04358 1.61453 4.04355 4.04355 1.61453 3.63629 4.04358 2.02179 1.6145 4.04358 
0 ]xsh
386.841 487.324 mo
(and reverse)
[4.04355 4.04358 4.04358 2.02176 2.42172 4.04358 3.63629 4.04358 2.42169 3.63632 0 ]xsh
391.496 495.295 mo
(osmosis\))
[4.04358 3.63629 6.05801 4.04358 3.63629 1.6145 3.63632 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: ZPPAAA+Helvetica-Bold Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /ZPPAAA+Helvetica-Bold def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype AG and/or its subsidiaries.) def
/Weight (Bold) def
/ItalicAngle 0 def
/BaseFontName (Helvetica-Bold) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 116 /t put
def
/FontBBox {-170 -228 1003 962} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 -0 532 546 718 737 740 741] def
/StdHW [140] def
/StdVW [113] def
/StemSnapH [96 109 140 150] def
/StemSnapV [83 99 113 126] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
11 dict dup begin
/A <1C60D8A8C9B6079F1E2132D379C40FEFC8FEE1D722D24B7CA146F57BD793
7C900B9CD1BE8088D7F38E9314AED9781B58C735FF9A3A9DDB19B82B9761C0E7
543446BFFC6A665C> |-
/a <1C60D8A8C9B7EF32A1D2E7B6E46DB18317C0FCA212EA7AFAE2AD9D526CF1
71D9A5F64893903E70F94477C1299BADEB33125FE7EDFEA5DD8CE38D86D0F8CF
16B9C69423A6CB9E433A3FD1239FBBE02AF900CA8A9E907D48FF3676BC3C05DF
27618451754F17FC5BF2F81C19E4CD0B3BFB23CA4C972DCC0EE35D019060EFAA
B8F70B2302B0EECBEA26A170990F049C94> |-
/c <1C60D8A8C9B7EF32A1CB44A4DC6F200A5A5BDE8B0DE0ED622CC81EFFCA97
BDB99D0ED8A4B3969411757385AB237510EC4A14D080EFD82479D543FCBBCF29
2994DFF978A6E0C5033AB99EE8EEF3291BD6FFDFDF97D2F7256E> |-
/d <1C60D8A8C9B7D8BE9CC6F8170A7E10894240B9A028FD8CC0DD039847C930
6802F80096157FA437C75E7BBED2CA0C8AFC93B1FADC7FEB2DF0F5BC39AAB7BE
D5C5E62E07351C80747EE4AA70F88BD7FB6E301E0ECAB8AD416D6888EE1BF695
71347ACDA277CDF7D01FAB41759A> |-
/e <1C60D8A8C9B7EF32A1CB44A4D398979D14F39FAF3746B6376F44E2100AC3
904B343D7372205732C3BF669A9C4FF93E3947E516BBE75458748613ECC18FC1
6EE715D30B88F9E9FC52D5A8C74D45F6CBA5056049BDBFAFDC3D0422DD8FDDBD
F0DDB2CD> |-
/i <1C60D8A8C9B854D088EA5D1AFFBBB1A38B558E1ACE1D6C76B49BB1D05701
A9ECAB11C2E8EEF5504F32A51DB4E9C6FC0B05> |-
/n <1C60D8A8C9B7D8BE6A284D0AF2247D71B695DB680BC61FBFFD14E65F2B04
0F4423FEEB8FF8E8127A93476DA7F995F4CD9708D13CC39458606E0C6751C439
81D79781BF3581315BC90A79D7851AF1> |-
/o <1C60D8A8C9B7D8BE9CC6F8170A7E108942153409D8095E19F2DAD7BCE806
2630CF415897161F26D8076A0845A32410EFC607041B2C632B03C4BFD32BE4AA
6678E1F662FE746442084E99982EF3CE7BF593292C22BD59CF60D339B51E11> |-
/r <1C60D8A8C9B7361F7E59C3DD2538674C59AC421D29EBF350AFB6AB8AA244
09169F5E382133BB8AAA2F13E4E11B0942C98F0D0A7275F5C0D8D2201A8151D0
A3A7245F7FD6> |-
/t <1C60D8A8C9B81F2C48F2268DC1C787DD6FEDCCEC28BB2A169464AB40AA68
F73891065F0516AC9213AA76F0A476A9A384FEB95700D5D554702B3EB93539FB
BA77001AF79D2EC721831295BB4A3FC5D2F5> |-
/.notdef <1C60D8A8C9B8524C50> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/LJKSOR+Helvetica-Bold /ZPPAAA+Helvetica-Bold findfont ct_VMDictPut
/LJKSOR+Helvetica-Bold*1 
[65{/.notdef}rp /A 31{/.notdef}rp /a /.notdef /c /d /e 
3{/.notdef}rp /i 4{/.notdef}rp /n /o 2{/.notdef}rp /r /.notdef 
/t 139{/.notdef}rp]
LJKSOR+Helvetica-Bold nf
LJKSOR+Helvetica-Bold*1 [7.2726 0 0 -7.2726 0 0 ]msf
465.815 460.743 mo
(Acid)
[5.25082 4.04355 2.02179 0 ]xsh
453.08 468.713 mo
(concentrate)
[4.04355 4.44351 4.44351 4.04355 4.04358 4.44351 2.42172 2.82907 4.04358 2.42172 0 ]xsh
LJKSOQ+Helvetica*1 [7.2726 0 0 -7.2726 0 0 ]msf
511.45 488.655 mo
(NaBicarb)
[5.25079 4.04358 4.85089 1.6145 3.63629 4.04358 2.42175 0 ]xsh
518.323 496.626 mo
(NaCl)
[5.25079 4.04358 5.25085 0 ]xsh
443.444 674.106 mo
(Arterial pressure)
[4.85089 2.42172 2.02176 4.04358 2.42172 1.6145 4.04358 1.6145 2.02179 4.04358 2.42172 4.04355 
3.63629 3.63632 4.04355 2.42172 0 ]xsh
443.444 682.106 mo
(Venous pressure)
[4.85089 4.04355 4.04358 4.04355 4.04358 3.63629 2.02179 4.04355 2.42172 4.04358 3.63629 3.63629 
4.04358 2.42172 0 ]xsh
443.444 690.106 mo
(Blood flow rate)
[4.85089 1.6145 4.04358 4.04355 4.04358 2.02176 2.02179 1.61453 4.04355 5.25082 2.02179 2.42172 
4.04355 2.02179 0 ]xsh
443.444 698.106 mo
(Air \(leak\) detection)
[4.85089 1.6145 2.42172 2.02179 2.42172 1.6145 4.04358 4.04355 3.63632 2.42172 2.02176 4.04358 
4.04355 2.02179 4.04358 3.63629 2.02179 1.6145 4.04358 0 ]xsh
520.352 639.525 mo
(Dialysate)
[5.25079 1.61456 4.04352 1.61456 3.63629 3.63629 4.04358 2.02179 0 ]xsh
526.897 647.525 mo
(flow rate)
[2.02179 1.6145 4.04358 5.25079 2.02179 2.42175 4.04352 2.02179 0 ]xsh
520.352 655.525 mo
(Dialysate)
[5.25079 1.61456 4.04352 1.61456 3.63629 3.63629 4.04358 2.02179 0 ]xsh
526.897 663.524 mo
(pressure)
[4.04358 2.42169 4.04358 3.63629 3.63629 4.04358 2.42175 0 ]xsh
520.352 672.252 mo
(Dialysate)
[5.25079 1.61456 4.04352 1.61456 3.63629 3.63629 4.04358 2.02179 0 ]xsh
526.897 681.706 mo
(conductivity)
[3.63629 4.04358 4.04358 4.04352 4.04358 3.63629 2.02179 1.6145 3.63635 1.6145 2.02179 0 
]xsh
520.352 691.16 mo
(Blood \(leak\))
[4.85089 1.6145 4.04358 4.04358 4.04352 2.02179 2.42175 1.6145 4.04358 4.04352 3.63635 0 
]xsh
526.897 700.615 mo
(detection)
[4.04358 4.04352 2.02179 4.04358 3.63629 2.02179 1.6145 4.04358 0 ]xsh
128.046 585.213 mo
(A)sh
false sop
.5 .6 0 0 cmyk
true set_gvm
%ADOBeginSubsetFont: OLQBAA+SolexBoldLining AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
LJKSOP+SolexBoldLining dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B733AACDF418D9E50967B58140A19B3CB541450AE768D
4B348> |-
/two <1C60D8A8C9B76D61D2B2442D4F6DAF3F8ADD3F3C6DEAED447F7109270F
FAD3FAE32415181F75CF7BDE443372C19DD8314B96FAC254A4101A181546158D
7D959B38813E21C7E7ABD2C511BF9D66FF7463A9DF3229A0F0272B2000BF58D7
9A0FEE7C4E0368> |-
/E <1C60D8A8C9B70FAD64E8D587C65660E5421219F7D7CE402044D3B343DF12
6E53BC48227914876DA109E1EEF0F36000C1A9AD04DBDDC558FE2DAA3A4055A7
E3> |-
/F <1C60D8A8C9B72DDD37119E06940EAD7F76D2EBFB207B3451B07C2189C85A
46B5F7540BE6EAA62B01DA2697B6E778B39250ADF58743629EBB3D08> |-
/G <1C60D8A8C9B74A3E8532F0A7713702A051936200E2DCC0BE581F8A3C3620
108586DDB8463E40A5EBC418BA71FEBA7FFADF7CB3B10C7E92DC225787EADBA6
1D5C5E92C36E2566D2411B64CC2C54863928CBE9B181C754716F2C133D8A34F6
597668DA42C60CE5A409AD2A5EFF17D88512108C7B2FD1C02E9E5ECB73> |-
/R <1C60D8A8C9B741FC406F1F7AC48C0D02EEDB622B544E73012010909FF808
1CF2C3B9D8CA37E5500A37FC6D09667FE93505B9D24C3864ADFE6736DDE719AF
EE5809C4A19735A92B8A802C83CB114A6DE3F2B309C2A660FAB688F15943D3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LJKSOP+SolexBoldLining /Encoding get
dup 45 /hyphen put
dup 50 /two put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 82 /R put
pop
%ADOEndSubsetFont
reset_gvm
/LJKSOP+SolexBoldLining*1 
[45{/.notdef}rp /hyphen 3{/.notdef}rp /one /two /.notdef /four /.notdef 
/six 13{/.notdef}rp /D /E /F /G /.notdef /I 
/.notdef /K 4{/.notdef}rp /P /.notdef /R /.notdef /T 
/U 2{/.notdef}rp /X 8{/.notdef}rp /a /.notdef /c /d 
/e /f /.notdef /h /i 4{/.notdef}rp /n /o 
2{/.notdef}rp /r /s /t 4{/.notdef}rp /y 134{/.notdef}rp]
LJKSOP+SolexBoldLining nf
LJKSOP+SolexBoldLining*1 [8.9662 0 0 -8.9662 0 0 ]msf
280.143 751.658 mo
(FIGURE262-2)
[3.28162 2.33115 4.16925 4.35751 4.24997 6.53632 3.85541 3.85541 3.85538 3.51474 0 ]xsh
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: CCFAAA+SolexRegular Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /CCFAAA+SolexRegular def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 2000, Emigre Inc.; Designed by Zuzana Licko) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (SolexRegular) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 121 /y put
def
/FontBBox {-33 -216 870 984} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-10 -0 500 510 690 700 703 704] def
/StdHW [59] def
/StdVW [57] def
/StemSnapH [46 59 85 177] def
/StemSnapV [44 57 103 246] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
16 dict dup begin
/period <1C60D8A8C9B85C5CCC12CA4AF5C1A15CF4FC97D4EE17A4605702944
627C0F5146C68A0A82DD1E19F> |-
/S <1C60D8A8C9B71C16857FB7025576AA6D53ACA8FFE2DC58952291CB8D45A1
FF731E01D74EA3FB995C86A76D8DDB6B7D993BF7E03BD39BFBD50241E8AAA521
CB167F23B349EA7ABB7701BEFFFF154D68614E647536562A3C1D54644AB01007
A7B31F3C331052C11E48C60D2B8103C588> |-
/a <1C60D8A8C9B70B6BCE11C258D3BD10A3DC87619F254C32F5CCD74351AED3
AC4AAF773003629A0AE96C55BA0F30AF0C521FE9FF2C0A47417F62B2D9AC1734
7807C2FB7DB35EC1537111B090EDE3AA4B15E16B685437285FB90739C02C50DA
22D608F3784C2C51C5AFF343395832093798ECDE39ACEA4696BBA60A01FDF5DF
8BD6F8> |-
/c <1C60D8A8C9B802B3ADC700C680586E11A71ED53A2A83B6807F9931970511
F92C839D4DF41564400771C2F75195B242DEDB1BA7BB22F71DAB7813EC7FD598
DE27FC1C463BBA7056A62DB560C67D2359629E> |-
/d <1C60D8A8C9B76280379B213BB52AD76FD67DB42924C617378C49ABC3DE95
FDAFF86F1DEBCF77EC344E6B6474F7550BF31C163FB3C437C6C64F3CE3966F98
2FCA5A3B1605AEEDC196C0E4F02072CD3935B4713919044316E0B9A9AEF4E000
FC30589F28C8BC8F6E272FB3FDE88F5B3238509E9BCE178DE1858BC3> |-
/e <1C60D8A8C9B76E379254694DB408D99EF090AAE4C6534B93301EA3C7E806
5D40D5723E1D53BEDCB17D63FDE0C67C42346343D775E4DCD79CE73B73318703
D715618B4546602C5E6AD292AFA2ECDA66C4FCD4FE4BE4DF61B6CF6369F530F2
EB34E24071F36EF8> |-
/f <1C60D8A8C9B844FAB171AABC531DE388C3B98195BB5A2C6522CE8F6E2DF5
CCB21ADBA4F41CB71D3DBF354DF7DEBDE9EADB3984195CF5406D570110F16D69
4BEBD5CA67DE17548D3F711464> |-
/h <1C60D8A8C9B766CA40F0A1C511F8587CD03611832FDC046DA1A31C972F71
6CEABB94DECD09E22BD1D4BDE645E3F2472466E432B15650A76509A45BBD43A3
5659859594FFD68EFF9FEC0B7D8498224EA014> |-
/i <1C60D8A8C9B883CE3494555A00D405201BB3C4EBA9E53796A22A82950763
29AAADF911F53E34CB4E10FC197CA62480A8B748F9610C66FE281CA97969E086
3C31CBC5> |-
/l <1C60D8A8C9B8862256721E29E20DE17191A63DEC49C58148DCB6219C1765
E6C60FC6E2E781> |-
/m <1C60D8A8C9B6747BC7F8F1036DB24430D842A6D9462E30AF7DD952FE5226
04553EAA55B5F1BDF71071E5D3ADE8783D88836C75721D5ABE94B944E955F978
F0DB2635EDB42B6936CD379CE29567D5B462A8EAAB453056BC692A974090F23D
98C199972198A7CC686F395B9C2A42C7C69B7A5DBC567E42259D535310EB8298
59D0C9A86A1B> |-
/o <1C60D8A8C9B76BC2DDEF1B39E05F0C67A559A4A78C6585CAA8CBA22E21DF
28E2D43C15F15D33B504A6A38CD5F17C6C37885ED8BA90DCA256D1AB71D5DE9A
85C6AA9E316A50B62ED7BBD6FDAC9D442D37FB49E76D5F9ED1> |-
/r <1C60D8A8C9B850A9AC6AC0122BF139320C5C144C2BDEC5691C9A0A3CD017
6F3EE2459B7FAFC62F188D9F911369F94341506DF217498F52688B0ED56D7A6E
DF3A> |-
/s <1C60D8A8C9B802B3AA5CEB8B5F6BC6401F0C3BCDCD57216D29539516E4ED
342C2D6859EDE3BD248D9A860EC688F18352CA255F84EDEADA27E8695B1DFC85
AB4BCC49ED9E1ADD96ADAD956E3BBE729CF7148C5E53FB2398F643FA2F2982D5
DC5234381E01ADEB5B22EAE5C4FD> |-
/y <1C60D8A8C9B7106325B780755723BF79404EE1A3F4E030698F5068477EB5
F0EBE1615278F8B7C1D90E2B5F53CB0024435199446A8415C0D1F734D702EA34
6AB7845835380EDA4645E0D606D52BCD96183CAC34439C1D48B8C71B83494698
DCC9E0322BA41E7AE7539DE27334> |-
/.notdef <1C60D8A8C9B8524C50> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/LJKSOS+SolexRegular /CCFAAA+SolexRegular findfont ct_VMDictPut
/LJKSOS+SolexRegular*1 
[46{/.notdef}rp /period 36{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c 
/d /e /f /.notdef /h /i 2{/.notdef}rp /l 
/m /.notdef /o 2{/.notdef}rp /r /s 5{/.notdef}rp /y 
134{/.notdef}rp]
LJKSOS+SolexRegular nf
LJKSOS+SolexRegular*1 [7.9699 0 0 -7.9699 0 0 ]msf
332.944 751.658 mo
(Schemaforhemodialysis.)
[3.30746 2.86917 3.48282 3.41907 5.10876 5.73032 2.3432 3.44305 4.98914 3.48282 3.4191 5.10876 
3.44305 3.51468 1.85699 3.1879 1.81711 3.40317 2.86917 1.85699 2.86917 0 ]xsh
.5 .6 0 0 cmyk
true set_gvm
%ADOBeginSubsetFont: NMYAAA+SolexBold Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /NMYAAA+SolexBold def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 2000, Emigre Inc.; Designed by Zuzana Licko) def
/Weight (Bold) def
/ItalicAngle 0 def
/BaseFontName (SolexBold) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 68 /D put
dup 69 /E put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 83 /S put
dup 89 /Y put
def
/FontBBox {-37 -216 848 1000} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-10 -0 500 510 690 700 703 704] def
/StdHW [114] def
/StdVW [107] def
/StemSnapH [62 77 98 114] def
/StemSnapV [63 75 92 107] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
11 dict dup begin
/A <1C60D8A8C9B77AEA22E7CCE4EF9F55559158118032EDD3ED6A031A3DE1A8
C946AFC289F6E55D695BB42740BCA4243C3114124272D5CBF426551CE26FFF85
575397780498BA1D8CB79A81A8AB1294BEBD9869> |-
/D <1C60D8A8C9B7A73DC525FD98B1A47763EA6331BEB8ED2112C634ACF2B65F
E73771E9DBDDAD4D62BA9B121A458FAA012E37DB4EA3B71BC5C6CF122FD9710A
0A523A69A8D30A83B341AB64AC45970402FFAA339EC957> |-
/E <1C60D8A8C9B70FAD64E8D587C65660E5421219F7D7CE402044D3B343DF12
6E53BC48227914876DA109E1EEF0F36000C1A9AD04DBDDC558FE2DAA3A4055A7
E3> |-
/H <1C60D8A8C9B7A4C81FEE6F656D8FE5F5ADA7104CF288A33576603F1FDF41
9118DB240A99027BC5287DB2426A090EBD7E90323B67AE75907D81783E5C088A
9B35A53A9E29BAA6> |-
/I <1C60D8A8C9B8666CB700595507C5D3B13D890702BB362F3410897A27C4BF
4136C74A62D1> |-
/L <1C60D8A8C9B80CC2C037DED4AD333C4EF10745470310CF180CFB4CBFAB92
DD8567DF441B33B4E275C544> |-
/M <1C60D8A8C9B67F583D81EE4AADE2DE11CA919E9B29D693CFCA6BC5B43AB3
A55EC00E06A0F826EFA3892FBA5F5EDD6FD4E0CAB361F6DFC323F744BEE90239
AA4F710A306C37B0AB6E957962824270914C46507FE2A86D30F8250849590381
B627648BA62D87221E57E25EA37EEC79> |-
/O <1C60D8A8C9B75A17B9017C4D9111199C2065CEC7A28EE6D16BFCCE52E845
5A1A151BF85D099CEF135CFD3459B55C9639DCDDEB59043BA314CE7D36A9F9A7
C9EA725E47F874D70D395561A4EEF8AF464D49DBFC7BD044D8842E> |-
/S <1C60D8A8C9B76BC2DDDD9714D645CB06EC9D719BA57463512E0C82C7AF65
83F32BC3DAB56B500D460E8FA342306FF29A948DBBE315C589A27C44704970F9
6C691954DA43536E888B7B05517AD61641F9006E6DBE5493B92A64C8AEAC1E76
A7491E4072660D861DA5EDB7D3912F7B3A772534> |-
/Y <1C60D8A8C9B70582B0E009F82773EEC7383DDEEE8113D4A3C3A2E0E1003C
8A0987CA3AE0709AB95F61985321F891C73AA4DCF422B57E653ADFDC> |-
/.notdef <1C60D8A8C9B8524C50> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/LJKSOT+SolexBold /NMYAAA+SolexBold findfont ct_VMDictPut
/LJKSOT+SolexBold*1 
[65{/.notdef}rp /A 2{/.notdef}rp /D /E 2{/.notdef}rp /H /I 
2{/.notdef}rp /L /M /.notdef /O 3{/.notdef}rp /S 5{/.notdef}rp 
/Y 166{/.notdef}rp]
LJKSOT+SolexBold nf
LJKSOT+SolexBold*1 [9.9624 0 0 -9.9624 0 0 ]msf
86.2246 71.7244 mo
(HEMODIALYSIS)
[5.01115 3.94507 6.4755 4.79195 4.98119 2.59017 4.47317 3.48691 4.04478 4.30383 2.59016 0 
]xsh
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: FALAAA+Times-Roman Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /FALAAA+Times-Roman def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989 Adobe Systems Incorporated.  All rights reserved.Times is a trademark of Linotype AG and/or its subsidiaries.) def
/Weight (Roman) def
/ItalicAngle 0 def
/BaseFontName (Times-Roman) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 54 /six put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 174 /fi put
dup 175 /fl put
dup 177 /endash put
def
/FontBBox {-168 -218 1000 898} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-14 -0 448 458 662 676 682 687] def
/StdHW [84] def
/StdVW [38] def
/StemSnapH [58 84 102 146] def
/StemSnapV [18 38 59 103] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
59 dict dup begin
/percent <1C60D8A8C9B6B41C319BB7832902172DB0779CCCE83BC15BA1BBF9
382F486A9BC0947C28F4EE01B8DE34E63050C31E68AD975F05AAFB3EC1AC4DFB
D9BBB68D5EC74782707113F422184A736D440777BC89A064E6C53378C4545BD5
B98AF6BCAD5F1FE6D0E72C947FE590B915A5D8A7F1304F034DF740B0FCD2AE72
66F589840AF94C6386546DCC9B6392EA6D76AE4586B681ED5E8542DB850B8951
2A93D34C2ED8E25529AB469A2857E7A5789AD6295727A86DB4C24296724F3EFE
9CA7F73C9A557A3184213536F4888650C5B2C7> |-
/parenleft <1C60D8A8C9B81F2C34DD536D148F5832C550FFF385C2EFA25FB6
A104E1300B3F45F721057DA9BD767C6D657510FE7EBEE02E75EB39144716DA4A
C8E0DA866B1EF49DCE> |-
/parenright <1C60D8A8C9B81F2C34DD536D5F96E20DFA08E90FCDD8719D151
C33BDF302EECBB99C49E3B634C4E7DB602F780613D00CFF6DD9AD2CBF0359578
B42DC59FB6A8EFD> |-
/comma <1C60D8A8C9B8707CA2FCA838BAB9936DA9164A4AEFF3E54B6A5E44CE
B43AAB8355CE44A39A609ED86F6D2EA47088ED05407E13401CAB058EF0845425
93FB7158> |-
/hyphen <1C60D8A8C9B81F2C3AED6F12472506FF143D3E1218419DA4D1B5FF2
5559B> |-
/period <1C60D8A8C9B8707C5632F7A7DB57DA5733967911950F5E22AF262BB
D760C7758EF0C71094B5AC59731C5> |-
/zero <1C60D8A8C9B7A73D3385549B14759C497ADFFC489C90826AC2D5A30FD
442B426012F37FBB8FA593960D1815CAED3F84DD153DF2127DA3377BD86EADC9
DD2D0B1440F492E92161B6F0A3B18D8D4DC0C4C5A016FE5040BF17F16C4A97D0
6601545> |-
/one <1C60D8A8C9B7A73DC54E0D6CDEF63D6D8A2D66CB7F34F12691C865E03E
4727AE86D106DD7A14355C5762701507B94DB823415EDE0F4F70A524177663B9
6F> |-
/two <1C60D8A8C9B7A73DC506FC27B647F3B22939D5B3CBFFB43D74A1B1B1FC
10FEC91F6329011405B844827BD3D8FBF11F4F51D7D0BEB3B50C1E236B01655D
CB9435EA2BFC33D10C57A7DA010FAA19F764AA871959AAFC6F674D5B5A1BF245
BEA2C1> |-
/three <1C60D8A8C9B7A73D33FAAC1270A07D426B3F4D35A1DEC8EAA741C708
569F177858BEB152F91696F21118F4CF101E9BEB08AD8583985AB34E074D65A0
0D1002A9B3AEF7C3E74D46696888F404C04AE25855690A9FE93F2440F1391A37
68C7C2EF22DEC88E0EAC2C2E610A63D28CE6> |-
/six <1C60D8A8C9B7A73D33B0006E6BE678904F145C5D4FAFCC1A7A74D3B651
DDCE095CF917F90D929F2EC61740A0872F5F9A8C3CE1D34D1F1A0F995276FC34
92C19F9603D4F085BBFDFA14732F82761B3443C0B77303A564B0E96ED9B9BBB6
50A082E4D0A730C1BF4E13388BB86A475A6A27CE3D2D0CE58BDADA8F69052E93
DBA1C910F8CA41AA844AADF028EA> |-
/eight <1C60D8A8C9B7A73D3385549B14759C2CF8FB40F9915C2FDE9A6CBB0E
9220661A4A8842EF4D7B6BB8260456EA6C98C85DB4CF0FE4C6F1C69B63074B60
20C8368D28E27ABB86DAA0DA80E805BA770E70264985A4E10C1A797A3486AB63
3C8D3C0E0A21CF4A94C5C5EFB654299C819C46D114A6C2166BD59BBAD43549BA
E06203701779ECB38A311C4AACDBF3512808B6> |-
/nine <1C60D8A8C9B7A73DB9A49615282931C32931F802FA3A1274DF7F85EA3
C4B2A91201F76A8C41E05FAC3B2B3F5FB59075034DC3C2C61E9F1E3B32AC28BE
59590EB3A6BDABC97950DDB9D4446FD851C0A5FD3193EDBC5327ACA43F11476C
A8E7008ED838DB13A621A57FEE02CA54AC3C750E2E4ABF6E600DDBB950954E75
8A1F2> |-
/colon <1C60D8A8C9B854D07EFA5C95877492F7856E7DE8E9A1AA82204FE622
5B4C6052A142B99C6E69EEC9BC40A6ABA68CC5AF1C60225C87A56B98F432D083
3C1BF0119767940123908E> |-
/A <1C60D8A8C9B6079F1E4BF1DC95A09FAA9117A1AB28F568433F5DD7CB2540
24484EEBFDDB06519E721C44AC5BDEC6158746C312FB5863BE448F0C5FD70734
EDE840E74E900AA0A93497029D990968DAB987BBEE3F08CB2B74B5B6D292B1BF
28A0F1AF18F769F10B711F> |-
/B <1C60D8A8C9B64EDF880E1A8563C044114CDEC5119B8F821A882B694CBE96
608F3B31313AD1EE02821675041E3F3E1DF40F37E517809360290ABCD3BA117E
3F5AB177E7EBAAD3CD082808C7C43BB275A81C4DF4626A0F32516D75F6C1DE70
1ADA9B1CF156D1066EC4CD9661FFEC7CA995A675F911AE2C43F73A36FDC01670
CF2EE687661F15D398> |-
/C <1C60D8A8C9B64EDF7E1EF844009D310F4BF59185D823844DA5D91701B6C0
BD52370549DAF8D74B15368765C09BD160C84388EA1113602517B943FD412AD5
97610DAF0191E2E8D4F7F0333A2E765CDD3339D4D4F73E0597DD8716C7C9843E
5F1F9507> |-
/D <1C60D8A8C9B6079F1E678501E6223CD163B4D80FD8DBE4D467ACA47926AE
86C627D801489213508E8BE85CB257D3F36D56AB6DC5C4911EF5D01C21D72C16
FA7E5C0E1983EA89DB9435B67251A8F4F52CAEC114A526FC373C80C0F8D41E5A
F7AB59A6C1D41F8C59> |-
/E <1C60D8A8C9B7D8BE6A6EDEC7A5DA64E14414BBB5B42D2FBCC22CF66CFE1E
56E1FDE5344C0888E4906A17739E2F7D2134C5F7DFFA7AF227CEAFBE95C76348
195386CF1D42868BEFAE8AF5C7910B2AEF18433B2E65DBEDCD4202EF1C422BB8
FF9431F0D30D0319A98B692CAD23AD23F3854E37EF6F6B5393BB54FA> |-
/F <1C60D8A8C9B7EF32570D6B0571BA62892F10F2CFB23946ED92F947118A32
134BCE6C8C427934F04A2FF7BF42C111C8990ABF04839F88662FC6ECA17B1712
A92A63EFB6367A5B14BA3D67C6EEC6310D0F891E44EE810341FBB77078A46D39
DC66A5DD2846F061D807AA2A5CEF> |-
/H <1C60D8A8C9B6079F1E4BF1DC2CD7A2FD4A8FAAF3EFA2FEADB59FE7819CEB
F83D1FEBC8AA459342A8B4A9DD2421F5664ED3766181D8C97159C8873853CAFE
B4D8C5327EFA575752590FF3244A5B9AC35DA73F05D8B0B9EF4884AA826E72B1
29A8CDBB3039830F99B8EB4FA3CEB24AF33BE48863BAACB84CD1B5C7E0> |-
/I <1C60D8A8C9B81F2C46F55B675DEF4FEF8999101F2E2ECC97A80A1974A256
672368BBD819FC13996890DD8D155D3702A8F468CA89A51AAC59FB570C8B9319
A7> |-
/L <1C60D8A8C9B7D8BE6A6EDEC904507D3B96D0CC16748D0B1C83B8467F3E4D
1B6D9BDD6EAA1F213D971699693474D2C73AFD93907D1829C04AFF3F3092806A
9F3681C8B9679FFB0AA7DC> |-
/M <1C60D8A8C9B59F859BE36722F335C424AF638BACEAF726DFF58171CAA94B
44B5A3545ADC1E7E62548CA41436A2A1CC0D24C3283F5915758DCBCA4F618E0F
BF10CF7709F696ED84EF68A61668E6F1432CC30F164AEAE924E11C33D1AABD5D
F33CB28F632C3EFA85BCDA750317250E3E45C79E01> |-
/O <1C60D8A8C9B6079FE8098E967CC2036E4E28FE17AB9B31C455ECDDFF3C03
E935AE9DD794B59C2264D01EB67CC3DE110787CD85815C29428C7B62F59D8073
2D0EA5335BBF583AA9929E5C4B46B52FB6A8DB24AAF36EE2B7C9F4B291352653
EE30CA3912D87EA797FEBD887433A2FF91A75B> |-
/P <1C60D8A8C9B7EF32570D6B051EAF758800F118FDCAE6CBD14E9419205007
96F8389470CA74E3FCBA82E1AA9FBB16AC737C789DFAD17B8A7CE7AFE2F89EE4
E8931877FB8D5AA50453110B6568FE7A7C5A8A15C180DEAC6A2AAD283BAE70AE
96E43BEFE10880C276FE004C30D1D3740B50AF> |-
/R <1C60D8A8C9B64EDF88223AA7F2773E43C1C530D0FEED3033901F4F978884
627337C2E2CE4C7EF10C3B1B2988F25A6BFA91EDFDA343F8E9276F6B0A6F89FC
3F7A498EF5FE07E13EE5D6DD3B69FC4F53496CF20F02DA1D5C020AD34CBB3F05
E84797B1812D4D1CAD4BED95098CC497129CDC38F2BA82BDCA6FA05512> |-
/S <1C60D8A8C9B7EF32A18D425A9DCD9BB4260362C4B954F832B2D42CD2AD5E
EBD80262CE8E0E10A94513609F38F7AB99AF45AF3F02049F3FCE8D01082116F6
3EB71A171CE04B24788BAC5955727CA1EF9D4414784750A25D23E5889F79085B
6B422C7D3D122E38A37720E8D8C994CBE788> |-
/T <1C60D8A8C9B7D8BE6A4264BF03803FFDDDE46F1155DAD455FEA5ED4582C8
0184A38A9BA2BAAFBAADAA5235D11F95B66BF6D4F477AC770217100304613488
6BE286521BC2E79F79933713ECC924FEC7A04B> |-
/U <1C60D8A8C9B6079FE8098E967600F454D5862567084C92502911EB3CD0C2
D1B18E9356C6084FDF691C2543675A662C86213F6D1AFDC37F0EFE012F85DF3B
78750B841184A8C76D9F476FAB8A5E7BE246BC05F47CA3619D0DCA641C237864
C5B85E2657B0D18E11C4C7419F17> |-
/a <1C60D8A8C9B77FE2B8A6712BC4D4DF30463C4AE2E494D816A023AE273E2C
0626810110781AFE97F4A90B4544D0F8C8A429BD1AA266A9F885467877140B36
64AD5090493238CF980235F62A078EC354E2CE1A8003A07759B9BA40DD87E77E
77B00C57A7D5B91F69900D681D24408680870146D3BE51F06BAABA3FB71E67DF
48432D01B411344E1871FA5274FF0185F7A2B9C0> |-
/b <1C60D8A8C9B7A73DCF524CD22CF883689A362DEA54AD28B84DE2CC41A476
AAC338991C7807C0E3201025ADC295522BCB35087BB83ABF33C2E3D54E6AEB2C
7EB04B237723FB8D7CF9159B011EF7CB8F48ABAC8CC4B603BD47CC2CBCCD0B78
44F919507CCDEF882A51AEAB22516C6AD207760CBD54C298A8F4645E20> |-
/c <1C60D8A8C9B77FE2B8B589C1BCC38C69B0234C53260E9B3A113AFF73A540
FCDE3DEBEF5CBFAE625A625A2FA358929B765AF53340086361140611FB865A85
5B49E3A85EFC45F8197480356BEF3AD250EA145A2B570F186A328841> |-
/d <1C60D8A8C9B7A73DCF5825AED5393ABA8AEF47F7223F966003EDFD8B1901
87CABA7254D43242221048711AB434DEB2B63FDB62CE3B10806F21ACE183F766
B268FAF67A3967BC4FA75132F5E6844FFC4A71127A1BA6BEC11A7A59BC1D0A65
17F858D5D53D8A51B4187978DAD5D4657696B2C9DABF64B0076B89ABC47DCD51> |-
/e <1C60D8A8C9B77FE2B8A6712441DE43CC13E19E9EA09D2EAF0C344BF2417F
3BDC3A027161B5DD0FC26A8EFA9ABE2D34D1EB898AE0B126C5DBE298113BA7F9
A7D2E33A0241AD450BE477F42CD7452AE5362572FA4468BA3A583C0CC4C5C854
1642431BCF> |-
/f <1C60D8A8C9B81F2C46F55B66592FD779C12C1B0AD82A16CED065E4D146D0
C8A65D59521D5B26EAE0F64C09ACF9DDD6CA2848EB643F97F458A899A0FABC85
63201076C2318A932F5560F39D4F7BF4041BBF1FAA93912BAAE459DCAA9AA0CB
5D39F255758CDE6C91362E9504336AAA3DA1E57BB2AC> |-
/g <1C60D8A8C9B7A73DB58143163B18B7A73EC151BD846138DE86BD58746500
F51AFBB247B794BD3A1DA3225BDF1FE4B27E5C70497EA24612BD196AC444B012
6B7ACA02A4EE615E4168C4B445840BB69279588A099B277EA50F1C2116C107C5
2D42BF344768E67BEB6FBBF8627F84C53D38F0F4F88E0D19D5310E0ADE5CB922
87DBF33E7E061E9001B56518E91C0A70F64332E250B71495DE36FB4E89EC3B62
5D9DC17DD83F5F45528DCE615BB50CE345A14C6E2B09CAE925C692E96741EDF3
7F5B049AFA4DAD65A51F> |-
/h <1C60D8A8C9B7A73DC50CD258D27EA65494DD15BBF1433366D771D8FCDBEE
2B7F91C83F874BC4C28B0FDD98A41BB2E382924B69EB259E06BEE9FD69666BE0
347169AF2C9773EFFF6CB5BAABA6B0D7B277A6DC9FA83160567BA1E445D4DDAD
525C9EBC523CD60EDB55B4AC1DDDD7452EE1CB951F1822B7A01303A2A29A4F> |-
/i <1C60D8A8C9B854D0888002328C2C36A3A39CF4DFF3B886A04390AAF42133
D10630C6C3E1AA9D7F9E738595696FB2E383A4BF3A88D72F2152F34984C1ED77
4C2D3C2AECC32A00AB659488F85CF5A692F257E186C855880A> |-
/k <1C60D8A8C9B7A73DC54E0D6DF6EB151E1DE4167579E408B57D0140DE6942
234F460E1EFEC0133AD367C7A358BFEF9A76B03CADC6B25402417A4FF79C1ADE
A7E21A76270F73EBB823D6BFFD134F3956154C382A93B20871B3758944D29286
5BF6FF76A34EC24F7CAB5AF5D33D2663D04B045EB6D6F002644D202A40E6E935
1A278BD9A26813E9A7F5F4252065FE4E> |-
/l <1C60D8A8C9B854D08880023314C207068B5E0A0B155A0AE046865382D6AC
7596919B00E4B9EE7B77E9297C2149EB5450D5A7D7F60724BAB6F7DF058897> |-
/m <1C60D8A8C9B6FF868907D1B430691DCAB5227CD6FBAA8E44675ED18CDE59
99F5C510FB9D4E0DEA4C3B1EF63113364DD3511A2420473FBBC9DC9B710084BD
27A80AFE7907850B2A6C9AF37985C6488B00405AD587D659F0D94C3E230B2E60
423716FAFB032FE222E7963DDCE7CEC321107822C735CF8AE85B1094BBCE30FB
0DF107E2F2DE470C932E27072EBBD31D5F1676665CC90A60338CA9B08F515FC2
CD2E918D19D8A5FE26AB1D162DC2CA3C6872B51E4E2804C8B0B52F95> |-
/n <1C60D8A8C9B7A73DC50CD258D27EA65494DD15BBF1433366D771D8FCDBEE
2B7F91C83F874BC4C28B0FDD98A41BB2E380FF36BCCA3BBC4F59F1DE9634D132
8BFEDC36F68C15CFD2A04D6CCE1F4006E5C79B2005B955300B2B345CA992416A
C6DCD1795CA5AB58BD256833DBA708B7B10D5CF41CF441C994> |-
/o <1C60D8A8C9B7A73DCF524CD237ACDD41358056EDA78C939DE6B7DC352335
503965046C24DC63CACB1C4E847632B5FEBF4114BD8527AA6D139D86DABA8C02
7B2186676858268FACDC095D29AE287319A97841474B04B2819E5E> |-
/p <1C60D8A8C9B7A73DB581186A938B189DD9373130CCAB6532B652DDD3974A
E59C90618F694EC1A059483A636F27954C9370AA3B7B511902C3B48D6F1BA548
0DA6DD4B54A0FCD8EC08B1C8A80324E5722B1A41251C4F5A340A8F692B33536C
1F1A64A1763AC4BDB0842DB3ED4ED9689080FCC66BA4D4DE3AF5C463DE7F79B8
A0247FD1C3B84C9F0D0EABDB1B0E5605EEBBAD884951654D> |-
/q <1C60D8A8C9B7A73DB581186A93FC3646FB8B121D9D8CA05630E5102E6221
D7A9290F748A62FE63966C5D0CB098555264739E6F0E0E9AB1DA5A74F5FC37B8
F06A5A17C3B12FE5C8C187289A7DB5FAAC78BE53637BFB41F9E6782D07A8AD0E
56493982A5F3E0EDF1DB09DBCC66751633CD3F7533484D4670E05BBEE53EC846
22AE64AF6895C34B7BCD49E8> |-
/r <1C60D8A8C9B81F2C46F55B69156A1AD4D2C51A7C427775815F456F1D58D4
F4F8FD63FCE7795FBA9690986074095F2C7E1CB65EA5A6145436C02C045A0AEC
3C56B9EF486A3E2641E526353E5C855F22025A0ED54B43E7F3E0E36831BB0B80
DD> |-
/s <1C60D8A8C9B7361F740382C399FBBE255798DF058D1289FCEE80E0B21726
37DEB857D1C448166C7618DAD01D6BBC368E5054D1ED2587D5C17BFB1A777A60
8C6CBE368D4FB8B42F5539423EF71B9F5158391744261275AFA107F74099DEB6
3C4175B76BB110174079010331053C55B92223E67F081CA231> |-
/t <1C60D8A8C9B854D082D85BCE96AC676BC221C844AE81E8E8777BD395FA1D
982692AA38980F3A7C00C644CB815522F13B1346762E80EAA9A79BCFA7E7EDFF
4E0E885214B37C9075A3B69C5F97E8219C9E4247ACFA> |-
/u <1C60D8A8C9B7A73DCF25053E7B1C3BC4F002CA92E249067CEE3C53159B57
FD6449C57265D8A7369B248CA8804371701709871B2DFC4AA465794114E6A2BA
E628EEEF9F1666F1F933C6411B623004E381001F165A170CAFB1F14B4A8D7D1A
5B0CC3D538ED17867C2F8664FD8305B15C6B> |-
/v <1C60D8A8C9B7A73DCF7C2AED0A782A532D0D83F417B314E0ED0EDC5DF4BB
22E07C331FA641C84705836E6B74814CEF443ABE88E9CBA58ECA82D594CA721B
EB87036CCD5690CFE18EE9EC0160D9D77387A77B07BE56ED069B042DFCEBDB04
3DCA2AB9CCAB> |-
/w <1C60D8A8C9B6079F145A01AA3C46AFC2AC6C3BCEC82CB0B8FC97A6531CA2
E495018A87A392236C8B790D5FE3B788CB88B34163F94CF689E29C5D0C233831
C4353EE26D4F2FF4F349B8FDD787D1FE1169B282D817FC4DB4D5F467CEA4CA1A
E10F8205CE48BD8B3DE16E5469D5E90CB53ADBC353044BDC659A50C13A523093
B5D0DD0CF845A40BA32B8228AA52F2A90A7001BC2997D63AF8A1738F4819A44A
B92A0F> |-
/x <1C60D8A8C9B7A73DC54E0D6DF6EB157BD6FEB1A28126FA93EA1221B4600B
4057433243F4AFDFAB15BB69F186550BA71AE40E9AC6EB78BF7DDEB182095351
1BED6AB9FD5A91D4D4A2C87ADCFA465D52B1E4B46B05C31DD2C9541C3DAB14DF
290FB9BEC0434F640CA734384C71004C3AAD7C78124472206D391CD483D93FE2
B6E4FF5A4FDF28C6FACFA105AA01524EB176220CD48F90> |-
/y <1C60D8A8C9B7A73DB5817707737F51B30EA0E36FD01D76AB225179A92368
0E2AFD640CE338ED605C75EC999EA10C1E804CE23DD7F2D5D503D2B918954174
26E75F8A243EFA523FD25BEBB5227B797F828CE888F2DC5CB1D488FE272C4EF5
A4FA2DF2AA1A0E9B3B0DDDD0FDABE9FB521A48025300E955AB83EA5D03ACEC8C
CF080E6A1D0A8342BB79849936> |-
/z <1C60D8A8C9B77FE2B23B8B2C85C528D2B8320B3FCC89C5346639E9E7F31E
AEF60E8EC1B2E1286AC71AF5520273C67AFE1727B7D19A406F40AB5E0CAF27E0
F40A6A65DFE4A341103B50250E2482> |-
/fi <1C60D8A8C9B7EF32570D6B0A9D3BB4264752C71FF32237EF1CDDE1C183E
396FF1980BEEA442A83A613C4BF88AA4E6C274D2102ECE19FAB99B51AE4C5030
B8A6B631791BEC68CD44FF5F3A9B024C730F1B056B6F451837534B3876C9468D
EC7D4CE31C65B47ECEC9CBB6F4D734DA1B17583801DF75DF695E7555493A443C
F367A716F9328EAFCC5DE0737AE500DE1142BD80C> |-
/fl <1C60D8A8C9B7EF32570D6B0A9D3BB426469CD697371C05A3658FFEBBA72
AB0506CF5E62850CE20C9712D612FEC080BDE4107FD3D62ED4E712F251A4C3CB
66A16ECBA14566AD26D7D53904BFE2FE49FB9597DD38BFD75E5C414B94A1D76E
1B4B33B3F181AE5A6BB2CE92666F554165427B6F13383EC215E27F11A8B7F28E
064C325E618A4DDA82D6FD63855BBA6783B72F1D32F0F663C> |-
/endash <1C60D8A8C9B7A73DB978172396C8449AC69C1E33793AE0DB0442> |-
/.notdef <1C60D8A8C9B8524C50> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/LJKSOU+Times-Roman /FALAAA+Times-Roman findfont ct_VMDictPut
/LJKSOU+Times-Roman*1 
[37{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/period /.notdef /zero /one /two /three 2{/.notdef}rp /six 
/.notdef /eight /nine /colon 6{/.notdef}rp /A /B /C 
/D /E /F /.notdef /H /I 2{/.notdef}rp /L 
/M /.notdef /O /P /.notdef /R /S /T 
/U 11{/.notdef}rp /a /b /c /d /e /f 
/g /h /i /.notdef /k /l /m /n 
/o /p /q /r /s /t /u /v 
/w /x /y /z 51{/.notdef}rp /fi /fl /.notdef 
/endash 78{/.notdef}rp]
LJKSOU+Times-Roman nf
LJKSOU+Times-Roman*1 [8.9662 0 0 -8.9662 0 0 ]msf
86.2246 84.3765 mo
(Hemodialysisreliesontheprinciplesofsolutediffusionacrossasemi-)
[6.47359 3.981 6.9757 4.48311 4.48309 2.49261 3.981 2.4926 4.4831 3.48792 2.4926 5.47841 
2.98569 3.98099 2.49261 2.4926 3.981 5.5322 4.48309 6.5274 2.4926 4.48311 5.97148 4.48311 
2.98567 2.4926 4.48309 3.981 2.4926 4.48309 2.49261 3.98099 5.47842 4.48309 4.93137 3.48792 
4.48309 2.49261 4.48309 2.49258 5.92667 4.48309 2.49261 2.98569 2.98566 4.48309 3.48795 2.49258 
4.48309 6.42877 3.98099 3.98099 2.98569 4.48309 3.48792 5.37979 5.77426 3.48792 3.98099 6.97571 
2.49261 0 ]xsh
86.2246 94.84 mo
(permeablemembrane.Movementofmetabolicwasteproductstakes)
[4.4831 3.981 2.98568 6.9757 3.981 3.981 4.4831 2.4926 7.21779 6.97571 3.981 6.97569 
4.48311 2.98567 3.981 4.48309 3.98099 5.47836 7.97101 4.48309 4.48311 3.981 6.97569 3.981 
4.48309 5.7294 4.48309 6.17764 6.97571 3.98099 2.49261 3.98099 4.48309 4.48309 2.49261 2.49261 
7.17294 6.4736 3.98102 3.48792 2.49258 7.11917 4.48309 2.98569 4.48309 4.48312 4.48309 3.98099 
2.49261 6.57227 2.49261 3.98099 4.48309 3.98102 0 ]xsh
86.2246 105.303 mo
(placedownaconcentrationgradientfromthecirculationintothedi-)
[4.4831 2.4926 3.981 3.981 6.86811 4.4831 4.4831 6.47359 7.42403 6.8681 3.98099 4.48311 
4.48311 3.98099 3.98099 4.48309 2.49261 2.98569 3.98099 2.4926 2.4926 4.48309 7.37024 4.48309 
2.98567 3.981 4.48309 2.49261 3.98099 4.48309 5.3349 2.98569 2.98566 4.48309 9.81799 2.49258 
4.48312 6.76947 3.98102 2.49258 2.98569 3.98099 4.48309 2.49261 3.98099 2.49261 2.49258 4.48312 
7.27158 2.49261 4.48309 2.49261 7.32538 2.49258 4.48309 6.7695 4.48309 2.49261 0 ]xsh
86.2246 115.767 mo
(alysate.Therateofdiffusivetransportincreasesinresponsetoseveral)
[3.981 2.4926 4.4831 3.48792 3.981 2.4926 3.981 4.5369 5.47829 4.48309 6.22255 2.98567 
3.981 2.4926 6.22255 4.48309 5.22723 4.48309 2.49261 2.98567 2.98567 4.48311 3.48792 2.4926 
4.48311 6.22255 2.49258 2.98569 3.98099 4.48311 3.48793 4.48309 4.48309 2.98569 4.73413 2.49261 
4.48309 3.98102 2.98566 3.98099 3.98102 3.48792 3.98099 5.63086 2.49258 6.62604 2.98566 3.98102 
3.48792 4.48309 4.48309 4.48309 3.48795 6.0701 2.49261 6.5722 3.48795 3.98099 4.48309 3.98099 
2.98569 3.98099 0 ]xsh
86.2246 126.23 mo
(factors,includingthemagnitudeoftheconcentrationgradient,the)
[2.98568 3.981 3.981 2.4926 4.4831 2.98568 3.48792 6.33014 2.4926 4.4831 3.981 2.4926 
4.48311 4.48309 2.4926 4.48311 8.51788 2.4926 4.48311 8.01579 6.97569 3.981 4.48309 4.48309 
2.49261 2.49258 4.48311 4.48311 7.96198 4.48312 7.02045 2.49261 4.48309 8.01578 3.98102 4.48309 
4.48309 3.98099 3.98102 4.48309 2.49258 2.98569 3.98099 2.49261 2.49261 4.48309 8.41925 4.48309 
2.98569 3.98099 4.48309 2.49261 3.98099 4.48309 2.49261 6.07907 2.49261 4.48309 0 ]xsh
86.2246 136.694 mo
(membranesurfacearea,andthemasstransfercoef\256cientofthemem-)
[6.9757 3.981 6.9757 4.48311 2.98567 3.981 4.4831 6.4736 3.48792 4.48309 2.98569 2.98567 
3.981 3.98099 6.4198 3.98099 2.98569 3.98099 3.98099 4.73416 3.98099 4.48311 6.92192 2.49258 
4.48311 6.37497 6.97569 3.98102 3.48792 5.92673 2.49258 2.98569 3.98099 4.48312 3.48792 2.98566 
3.98102 5.32584 3.98099 4.48312 3.98099 2.98569 4.9852 3.98099 2.49261 3.98099 4.48309 4.83279 
4.48309 5.22723 2.49258 4.48309 6.22256 6.97571 3.98099 6.97571 0 ]xsh
86.2246 147.157 mo
(brane.Thelatterisafunctionoftheporosityandthicknessofthe)
[4.4831 2.98568 3.981 4.48309 3.981 5.98045 5.47828 4.4831 7.66611 2.4926 3.98099 2.49261 
2.4926 3.98099 6.62596 2.4926 7.22682 7.66611 2.98569 4.48309 4.48309 3.981 2.4926 2.4926 
4.48311 8.16821 4.48309 6.62595 2.49261 4.48309 7.66611 4.48309 4.48309 2.98569 4.48309 3.48795 
2.49258 2.49261 8.16818 3.98102 4.48309 8.16818 2.49261 4.48309 2.49261 3.98099 4.48309 4.48312 
3.98099 3.48792 7.173 4.48312 6.62595 2.49261 4.48309 0 ]xsh
86.2246 157.621 mo
(membrane,thesizeofthesolutemolecule,andtheconditionsof\257ow)
[6.9757 3.981 6.9757 4.48311 2.98567 3.981 4.4831 3.981 4.73415 2.4926 4.48311 6.4198 
3.48792 2.4926 3.981 6.4198 4.48309 5.42448 2.4926 4.48311 6.4198 3.48793 4.48309 2.4926 
4.48311 2.49258 6.37498 6.97569 4.48309 2.49261 3.98099 3.98102 4.48306 2.49261 3.98099 4.68036 
3.98099 4.48309 6.87711 2.49258 4.48309 6.32117 3.98102 4.48309 4.48309 4.48309 2.49261 2.49261 
2.49258 4.48309 4.48312 5.8819 4.48309 5.28104 4.9852 4.48309 0 ]xsh
86.2246 168.085 mo
(onthetwosidesofthemembrane.Accordingtothelawsofdiffusion,)
[4.4831 6.82328 2.4926 4.4831 6.32117 2.49261 6.47359 6.82328 3.48792 2.4926 4.48311 3.98099 
5.82809 4.48311 5.28102 2.49261 4.48309 6.22255 6.97569 3.981 6.97569 4.48311 2.98567 3.981 
4.48311 3.98099 4.5369 6.4736 3.98099 3.98099 4.48312 2.98566 4.48312 2.49258 4.48309 6.72467 
2.49258 6.72467 2.49258 4.48309 6.12393 2.49261 3.98099 6.4736 5.63083 4.48309 5.07483 4.48309 
2.49258 2.98569 2.98569 4.48309 3.48792 2.49261 4.48309 4.48309 0 ]xsh
86.2246 178.548 mo
(thelargerthemolecule,thesloweritsrateoftransferacrossthemem-)
[2.4926 4.4831 6.37497 2.49261 3.981 2.98567 4.4831 3.981 5.32586 2.4926 4.4831 6.32117 
6.97571 4.48309 2.49261 3.98099 3.98099 4.48311 2.4926 3.98099 4.58173 2.49261 4.48309 6.27635 
3.48792 2.4926 4.48311 6.47359 3.981 5.28102 2.49261 2.49258 5.82809 2.98569 3.98099 2.49261 
6.27634 4.48312 5.2272 2.49261 2.98569 3.98099 4.48309 3.48792 2.98569 3.98099 5.22723 3.98099 
3.98099 2.98569 4.48309 3.48795 5.63083 2.49261 4.48309 6.0701 6.97571 3.98099 6.97571 0 
]xsh
86.2246 189.012 mo
(brane.Asmallmoleculesuchasurea\(60Da\)undergoessubstantial)
[4.4831 2.98568 3.981 4.48309 3.981 5.32592 9.51314 3.48792 6.9757 3.981 2.4926 5.57698 
6.97569 4.48311 2.49258 3.981 3.981 4.48309 2.49261 7.02052 3.48793 4.48309 3.98099 7.56747 
3.98099 6.5723 4.48309 2.98569 3.98099 6.96674 2.98569 4.48309 7.52264 6.4736 3.98102 5.92657 
4.48309 4.48309 4.48312 3.98099 2.98566 4.48312 4.48309 3.98099 6.42883 3.48792 4.48309 4.48309 
3.48795 2.49258 3.98099 4.48312 2.49258 2.49261 3.98099 0 ]xsh
86.2246 199.475 mo
(clearance,whereasalargermoleculesuchascreatinine\(113Da\)is)
[3.981 2.4926 3.981 3.981 2.98568 3.981 4.4831 3.981 3.981 5.63078 6.4736 4.48309 
3.98099 2.98569 3.98099 3.981 6.82335 7.27158 2.49261 3.98099 2.98569 4.48309 3.98099 6.27628 
6.97571 4.48309 2.4926 3.981 3.98099 4.48309 2.49261 7.27158 3.48792 4.48309 3.98102 7.77368 
3.98099 6.77853 3.98099 2.98569 3.98099 3.98099 2.49261 2.49261 4.48309 2.49258 4.48312 7.17294 
2.98569 4.48309 4.48312 7.71988 6.4736 3.98099 6.12387 2.49258 0 ]xsh
86.2246 209.939 mo
(clearedlessef\256ciently.Inadditiontodiffusiveclearance,movement)
[3.981 2.4926 3.981 3.981 2.98568 3.981 7.52264 2.4926 3.981 3.48792 6.52745 3.981 
2.98567 4.98521 3.98099 2.4926 3.981 4.48309 2.49261 2.49258 4.48311 5.22729 2.98567 7.46884 
3.981 4.48311 4.48309 2.4926 2.4926 2.49261 4.48309 7.46884 2.49261 7.46884 4.48309 2.49261 
2.98566 2.98569 4.48309 3.48795 2.49258 4.48309 6.86813 3.98099 2.49261 3.98099 3.98099 2.98569 
3.98099 4.48309 3.98099 3.98102 4.9314 6.97571 4.48309 4.48309 3.98099 6.97571 3.98099 4.48312 
0 ]xsh
86.2246 220.402 mo
(oftoxicmaterialssuchasureafromthecirculationintothedialysate)
[4.4831 5.77416 2.49261 4.48309 4.4831 2.49261 6.76948 6.9757 3.981 2.4926 3.981 2.98567 
2.4926 3.98099 2.49261 6.2764 3.48792 4.48311 3.981 7.27158 3.98099 6.23158 4.48311 2.98567 
3.981 6.67084 2.98569 2.98569 4.48309 9.71936 2.49258 4.48312 6.67084 3.98102 2.49258 2.98569 
3.98099 4.48309 2.49261 3.98099 2.49261 2.49258 4.48312 7.17294 2.49258 4.48312 2.49258 7.17297 
2.49258 4.48309 6.67087 4.48309 2.49261 3.98099 2.49258 4.48312 3.48792 3.98099 2.49261 0 
]xsh
86.2246 230.866 mo
(mayoccurasaresultofultra\256ltration.Convectiveclearanceoccurs)
[6.9757 3.981 7.81853 4.4831 3.981 3.981 4.4831 6.27627 3.981 6.82335 7.27158 2.98569 
3.98099 3.48792 4.48312 2.49258 5.82803 4.48309 6.27628 4.48309 2.49261 2.4926 2.98567 3.981 
4.98521 2.49258 2.49261 2.98567 3.981 2.49258 2.49261 4.48309 4.48309 5.53217 5.9805 4.48312 
4.48309 4.48309 3.98099 3.98102 2.49258 2.49261 4.48309 7.2178 3.98099 2.49258 3.98102 3.98099 
2.98569 3.98099 4.48309 3.98099 6.96677 4.48309 3.98099 3.98099 4.48309 2.98569 0 ]xsh
86.2246 241.329 mo
(becauseofsolventdragwithsolutesgettingsweptalongwithwater)
[4.4831 3.981 3.981 3.981 4.4831 3.48792 7.06537 4.4831 6.07005 3.48793 4.48309 2.4926 
4.48311 3.98099 4.48309 5.63077 4.48312 2.98567 3.981 7.62126 6.47359 2.49261 2.4926 7.62128 
3.48792 4.48311 2.4926 4.48311 2.49258 3.98099 6.6261 4.48312 3.98099 2.49258 2.49261 2.49261 
4.48309 7.62128 3.48792 6.4736 3.98099 4.48309 5.57697 3.98102 2.49258 4.48309 4.48312 7.56747 
6.47357 2.49261 2.49261 7.56747 6.47357 3.98102 2.49258 3.98099 0 ]xsh
86.2246 251.793 mo
(acrossthesemipermeabledialysismembrane.)
[3.981 3.981 2.98568 4.4831 3.48792 6.07915 2.4926 4.4831 6.61706 3.48793 3.98099 6.97571 
2.4926 4.48309 3.981 2.98567 6.97569 3.981 3.981 4.48309 2.4926 6.37498 4.48309 2.4926 
3.981 2.49258 4.48311 3.48793 2.49258 6.12399 6.97571 3.98099 6.97571 4.48309 2.98569 3.98099 
4.48309 3.98102 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: NMYAAA+SolexBold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
LJKSOT+SolexBold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/R <1C60D8A8C9B741FC406F1F7AC48C0D02EEDB622B544E73012010909FF808
1CF2C3B9D8CA37E5500A37FC6D09667FE93505B9D24C3864ADFE6736DDE719AF
EE5809C4A19735A92B8A802C83CB114A6DE3F2B309C2A660FAB688F15943D3> |-
/T <1C60D8A8C9B8151C558CFF53507152861C81E0DD9CD07E8C72DFEDFB21A9
9AE7AECB56134FE7C9318581981C10826C1B76> |-
/Z <1C60D8A8C9B802B3A07E4C9221B5F20AC62F4B1CC2EF6086075661536DCB
D3A93C1738ECE4FA0A4E36887F4B9052C4B457B20B16B29DA0EC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
LJKSOT+SolexBold /Encoding get
dup 82 /R put
dup 84 /T put
dup 90 /Z put
pop
%ADOEndSubsetFont
reset_gvm
/LJKSOT+SolexBold*1 
[65{/.notdef}rp /A 2{/.notdef}rp /D /E 2{/.notdef}rp /H /I 
2{/.notdef}rp /L /M /.notdef /O 2{/.notdef}rp /R /S 
/T 4{/.notdef}rp /Y /Z 165{/.notdef}rp]
LJKSOT+SolexBold nf
LJKSOT+SolexBold*1 [8.9662 0 0 -8.9662 0 0 ]msf
86.2246 266.74 mo
(THEDIALYZER)
[3.07542 4.51006 7.83643 4.4831 2.33116 4.02586 3.13823 3.64033 3.22784 3.55058 0 ]xsh
LJKSOU+Times-Roman*1 [8.9662 0 0 -8.9662 0 0 ]msf
139.224 266.74 mo
(Therearethreeessentialcomponentstodialysis:the)
[5.47829 4.48309 3.98099 2.98569 7.76472 3.981 2.98567 7.71989 2.49261 4.48309 2.98569 3.98099 
7.71989 3.981 3.48792 3.48792 3.98099 4.48311 2.4926 2.49261 3.98099 6.27634 3.98099 4.48311 
6.97569 4.48311 4.48311 4.48309 3.98102 4.48309 2.49258 7.22684 2.49258 8.26685 4.48312 2.49258 
3.98099 2.49261 4.48309 3.48792 2.49261 3.48792 6.1777 2.49258 4.48312 0 ]xsh
86.2246 277.203 mo
(dialyzer,thecompositionanddeliveryofthedialysate,andtheblood)
[4.4831 2.4926 3.981 2.49261 4.4831 3.98099 3.981 2.98567 4.87762 2.4926 4.4831 6.57224 
3.98099 4.48309 6.97571 4.48309 4.48311 3.48792 2.4926 2.49261 2.4926 4.48311 7.11914 3.981 
4.48311 7.07433 4.48311 3.98099 2.49261 2.49258 4.48311 3.98099 2.98569 7.07433 4.48309 5.5231 
2.49261 4.48309 6.4736 4.48309 2.49258 3.98102 2.49261 4.48309 3.48792 3.98099 2.49261 3.98099 
4.73413 3.98102 4.48309 6.97571 2.49261 4.48309 6.37497 4.48309 2.49258 4.48312 4.48309 0 
]xsh
86.2246 287.667 mo
(deliverysystem\(Fig.262-2\).Thedialyzerconsistsofaplasticdevice)
[4.4831 3.981 2.4926 2.49261 4.4831 3.98099 2.98568 6.9757 3.48792 4.4831 3.48792 2.4926 
3.981 9.46831 2.89601 4.98521 2.49258 4.48311 4.73415 4.48311 4.48311 4.48309 2.98567 4.52794 
2.98567 4.73415 5.47829 4.48311 6.37497 4.48309 2.4926 3.981 2.4926 4.48309 3.981 3.981 
5.37965 3.98099 4.48311 4.48309 3.48793 2.49258 3.48792 2.49261 5.8819 4.48309 5.32587 6.32117 
4.48309 2.49261 3.98099 3.48792 2.49261 2.49258 6.27637 4.48309 3.98099 4.48312 2.49258 3.98099 
0 ]xsh
86.2246 298.13 mo
(withthefacilitytoperfusebloodanddialysatecompartmentsatvery)
[6.47359 2.49261 2.4926 7.22676 2.4926 4.4831 6.72465 2.98569 3.98099 3.98099 2.49261 2.4926 
2.4926 2.49261 7.22675 2.49261 7.22675 4.48309 3.981 2.98567 2.98569 4.48309 3.48792 6.67087 
4.48309 2.49261 4.48309 4.48309 7.22676 3.981 4.48309 7.22675 4.48311 2.4926 3.981 2.4926 
4.48309 3.48792 3.981 2.4926 6.67087 3.98096 4.48312 6.97568 4.48312 3.98099 2.98569 2.49258 
6.97571 3.98102 4.48309 2.49261 6.12396 3.98102 5.0838 4.48309 3.98102 2.98566 0 ]xsh
86.2246 308.594 mo
(high\257owrates.Thesurfaceareaofdialysismembranesinadultpa-)
[4.4831 2.4926 4.4831 7.52264 4.9852 4.48311 9.45934 2.98568 3.981 2.4926 3.981 3.48792 
5.28108 5.47829 4.48311 6.96674 3.48792 4.48309 2.98569 2.98569 3.98099 3.98099 6.96674 3.981 
2.98567 3.981 6.92191 4.48311 5.92659 4.48309 2.4926 3.981 2.4926 4.48311 3.48792 2.4926 
6.47366 6.97571 3.98099 6.97571 4.48309 2.98569 3.98099 4.48312 3.98096 6.42883 2.49261 7.46884 
3.98099 4.48309 4.48312 2.49258 5.43353 4.48309 3.98099 0 ]xsh
86.2246 319.057 mo
(tientsisusuallyintherangeof0.8to1.2m)
[2.4926 2.49261 3.981 4.4831 2.4926 6.12399 2.4926 6.17778 4.4831 3.48792 4.48309 3.98099 
2.49261 2.4926 7.11916 2.49261 7.17296 2.4926 4.48309 6.61707 2.98567 3.981 4.48309 4.48309 
6.57224 4.48309 5.62173 4.48311 2.24156 7.17296 2.4926 7.17296 4.48309 2.24156 7.17296 0 
]xsh
LJKSOU+Times-Roman*1 [5.7782 0 0 -5.3797 0 0 ]msf
245.772 316.301 mo
(2)sh
LJKSOU+Times-Roman*1 [8.9662 0 0 -8.9662 0 0 ]msf
248.661 318.992 mo
(.)sh
98.1818 329.456 mo
(Therearecurrentlytwogeometriccon\256gurationsfordialyzers:hol-)
[5.47828 4.4831 3.981 2.98568 5.92666 3.981 2.98568 5.87286 3.98099 4.48311 2.98567 2.98569 
3.98099 4.48309 2.49261 2.4926 6.42876 2.49261 6.4736 6.37497 4.48309 3.98099 4.48311 6.97569 
3.981 2.4926 2.98569 2.4926 5.77423 3.981 4.48309 4.48309 4.9852 4.48309 4.48312 2.98566 
3.98102 2.49258 2.49261 4.48309 4.48309 5.28116 2.98569 4.48309 4.72513 4.48309 2.49261 3.98099 
2.49261 4.48309 3.98099 3.98099 2.98569 3.48792 4.08859 4.48309 4.48309 2.49261 0 ]xsh
86.2298 339.919 mo
(low\256berand\257atplate.Thehollow\256berdialyzeristhemostcommon)
[2.4926 4.4831 8.76894 4.98521 4.4831 3.981 5.32586 3.981 4.4831 6.82327 4.98521 3.98099 
4.83278 4.48311 2.4926 3.98099 2.49261 3.98099 4.58173 5.47827 4.48311 6.22255 4.48309 4.48309 
2.49261 2.4926 4.48311 8.71513 4.98521 4.48309 3.981 5.22722 4.48309 2.4926 3.981 2.4926 
4.48311 3.98099 3.98099 5.17343 2.49261 5.72946 2.49258 4.48309 6.16876 6.97571 4.48309 3.48792 
4.73416 3.98099 4.48309 6.97571 6.97571 4.48309 0 ]xsh
86.2298 350.383 mo
(inuseintheUnitedStates.Thesedialyzersarecomposedofbundles)
[2.4926 7.22676 4.4831 3.48792 6.76949 2.49261 7.22675 2.49261 4.48309 6.76949 6.4736 4.48309 
2.4926 2.49261 3.98099 7.22675 4.98521 2.4926 3.98099 2.49261 3.98099 3.48792 4.98521 5.47829 
4.48309 3.98099 3.48793 6.67085 4.48311 2.4926 3.98099 2.4926 4.48311 3.98099 3.981 2.98567 
6.17778 3.98099 2.98569 6.61708 3.98096 4.48309 6.97571 4.48312 4.48309 3.48792 3.98099 7.1192 
4.48309 5.5231 4.48312 4.48309 4.48309 4.48309 2.49261 3.98099 0 ]xsh
86.2298 360.846 mo
(ofcapillarytubesthroughwhichbloodcirculateswhiledialysatetrav-)
[4.4831 5.32586 3.98099 3.981 4.48309 2.49261 2.4926 2.49261 3.98099 2.98569 6.82327 2.4926 
4.48311 4.48309 3.981 5.82809 2.4926 4.48311 2.98567 4.48309 4.48311 4.48311 6.77844 6.4736 
4.48309 2.49261 3.98099 6.77844 4.48311 2.4926 4.48311 4.48309 6.77846 3.98099 2.4926 2.98569 
3.98099 4.48311 2.4926 3.98099 2.49261 3.98097 5.67569 6.4736 4.48309 2.49261 2.49258 6.0701 
4.48312 2.49258 3.98102 2.49261 4.48309 3.48792 3.98099 2.49258 5.9267 2.49258 2.98569 3.98099 
4.48312 0 ]xsh
86.2298 371.31 mo
(elsontheoutsideofthe\256berbundle.Incontrast,thelessfrequently)
[3.981 2.4926 6.42884 4.48309 7.42402 2.4926 4.4831 6.86811 4.4831 4.48309 2.49261 3.48792 
2.4926 4.48311 6.8681 4.48309 5.8728 2.4926 4.48311 6.8681 4.9852 4.48311 3.981 5.82796 
4.48311 4.48309 4.48309 4.48311 2.4926 3.981 5.12866 2.98567 7.37022 3.98099 4.48311 4.48309 
2.4926 2.98569 3.98097 3.48792 2.49261 5.12866 2.49261 4.48309 6.8233 2.49258 3.98099 3.48792 
6.3302 2.98569 2.98569 3.98099 4.48312 4.48309 3.98099 4.48309 2.49258 2.49261 0 ]xsh
86.2298 381.773 mo
(utilized\257atplatedialyzersarecomposedofsandwichedsheetsof)
[4.4831 2.4926 2.49261 2.4926 2.4926 3.981 3.98099 8.61652 4.98521 3.98099 6.62602 4.48311 
2.4926 3.98099 2.4926 8.11441 4.48309 2.49261 3.98099 2.49261 4.48309 3.98099 3.981 2.98567 
7.57651 3.981 2.98567 8.01578 3.981 4.48311 6.97569 4.48311 4.48309 3.48792 3.981 8.5179 
4.48309 7.02048 3.48792 3.98102 4.48309 4.48309 6.47357 2.49261 3.98102 4.48309 3.98099 8.46408 
3.48792 4.48312 3.98099 3.98102 2.49258 7.37027 4.48312 0 ]xsh
86.2298 392.237 mo
(membraneinaparallelplatecon\256guration.Theadvantageofthehol-)
[6.9757 3.981 6.97571 4.48309 2.98568 3.981 4.4831 6.51842 2.4926 7.07434 6.51843 4.48309 
3.98099 2.98569 3.98099 2.49261 2.49258 3.981 5.03004 4.48309 2.4926 3.981 2.4926 6.47359 
3.981 4.48311 4.48309 4.9852 4.48311 4.48309 2.98569 3.98099 2.4926 2.49261 4.48309 4.48311 
4.73415 5.47829 4.48309 6.41978 3.98102 4.48309 4.48309 3.98102 4.48309 2.49261 3.98096 4.48309 
6.375 4.48309 5.4245 2.49258 4.48309 6.32117 4.48312 4.48309 2.49261 0 ]xsh
86.2298 402.701 mo
(low\256berconstructionisthelowerprimingvolume\(60to90mLvs)
[2.4926 4.4831 9.45934 4.98521 4.4831 3.981 6.02522 3.981 4.4831 4.48311 3.48792 2.4926 
2.98567 4.48311 3.981 2.49258 2.49261 4.48309 7.46884 2.49261 6.47366 2.4926 4.48311 6.96674 
2.4926 4.48311 6.47359 3.981 5.92659 4.48309 2.98567 2.49261 6.97569 2.49261 4.48309 7.46884 
4.48311 4.48309 2.49261 4.48309 6.97571 6.92188 2.98569 4.48312 7.46881 2.49261 7.52264 4.48309 
7.52264 6.97571 8.46405 4.48309 0 ]xsh
86.2298 413.164 mo
(100to120mLforthe\257atplate\)andeasierreprocessingofthe\256lter)
[4.4831 4.4831 7.37022 2.4926 7.37022 4.4831 4.4831 7.37022 6.97569 8.32057 2.98567 4.48311 
5.87279 2.4926 4.48309 6.82329 4.98521 3.98099 5.37971 4.48311 2.49258 3.981 2.4926 3.98099 
5.82797 3.981 4.48309 7.37021 3.981 3.98099 3.48793 2.4926 3.98099 5.82796 2.98569 3.98099 
4.48311 2.98569 4.48309 3.98099 3.98099 3.48792 3.48792 2.49261 4.48309 7.27161 4.48309 5.72934 
2.49258 4.48312 6.7695 4.98517 2.49261 2.49261 3.98099 0 ]xsh
86.2298 423.628 mo
(forreuseinfuturedialysistreatments.)
[2.98568 4.4831 5.62173 2.98568 3.981 4.4831 3.48792 6.51843 2.4926 7.17296 2.98569 4.48309 
2.4926 4.48311 2.98567 6.51842 4.48311 2.4926 3.98099 2.49261 4.48309 3.48792 2.49261 6.12398 
2.4926 2.98569 3.98099 3.98099 2.49261 6.97569 3.981 4.48309 2.4926 3.48793 0 ]xsh
361.196 50.8311 mo
(Recentadvanceshaveledtothedevelopmentofmanydifferent)
[5.98053 3.98099 3.98099 3.98099 4.48312 6.02527 3.98099 4.48312 4.48309 3.98099 4.48309 3.98102 
3.98099 6.97577 4.48309 3.98099 4.48309 7.41507 2.49261 3.98099 7.97095 2.49261 7.97095 2.49258 
4.48312 7.41504 4.48309 3.98102 4.48309 3.98099 2.49258 4.48309 4.48309 6.97571 3.98102 4.48309 
5.92664 4.48309 6.41974 6.97571 3.98102 4.48309 7.91711 4.48315 2.49255 2.98572 2.98566 3.98102 
2.98566 3.98102 4.48309 0 ]xsh
349.244 61.2946 mo
(typesofmembranematerial.Broadly,therearefourcategoriesofdi-)
[2.49261 4.48309 4.48309 3.98099 6.2316 4.48309 5.67554 6.97571 3.98099 6.97571 4.48309 2.98569 
3.98099 4.48309 6.67087 6.97571 3.98099 2.49258 3.98102 2.98566 2.49261 3.98099 2.49261 4.9852 
5.98053 2.98566 4.48309 3.98102 4.48309 2.49261 4.48309 4.9314 2.49261 4.48309 3.98102 2.98566 
6.61707 3.98102 2.98566 6.61707 2.98572 4.48303 4.48315 5.6217 3.98102 3.98102 2.49255 3.98102 
4.48309 4.48309 2.98566 2.49261 3.98102 6.07916 4.48309 5.47827 4.48309 2.49261 0 ]xsh
349.244 71.7581 mo
(alysismembranes:cellulose,substitutedcellulose,cellulosynthetic,)
[3.98099 2.49261 4.48309 3.48792 2.49261 7.77374 6.97571 3.98099 6.97571 4.48309 2.98569 3.98099 
4.48312 3.98099 3.48792 6.72464 3.98099 3.98102 2.49261 2.49258 4.48309 2.49261 4.48309 3.48792 
3.98099 6.42877 3.48792 4.48309 4.48312 3.48792 2.49258 2.49261 2.49261 4.48309 2.49261 3.98099 
8.67032 3.98096 3.98102 2.49261 2.49261 4.48309 2.49261 4.48303 3.48798 3.98096 6.27637 3.98102 
3.98096 2.49261 2.49261 4.48309 2.49261 4.48309 3.48792 4.48309 4.48309 2.49261 4.48309 3.98102 
2.49255 2.49261 3.98102 0 ]xsh
349.244 82.2216 mo
(andsynthetic.Overthepasttwodecades,therehasbeenagradual)
[3.98099 4.48309 8.06958 3.48795 4.48309 4.48309 2.49261 4.48309 3.98099 2.49261 2.49258 3.98102 
5.77423 6.47357 4.48312 3.98099 6.47354 2.49258 4.48309 7.46887 4.48309 3.98099 3.48792 6.0253 
2.49261 6.47357 8.01581 4.48309 3.98099 3.98099 3.98102 4.48309 3.98099 3.48792 5.77423 2.49258 
4.48309 3.98102 2.98566 7.41504 4.48315 3.98096 6.97577 4.48309 3.98102 3.98102 7.97095 7.46881 
4.48309 2.98572 3.98096 4.48309 4.48309 3.98102 0 ]xsh
349.244 92.6851 mo
(switchfromcellulose-derivedtosyntheticmembranes,becausethe)
[3.48792 6.4736 2.49261 2.49258 3.98099 8.36548 2.98569 2.98566 4.48312 10.8132 3.98099 3.98099 
2.49261 2.49258 4.48309 2.49261 4.48309 3.48792 3.98102 2.98566 4.48312 3.98099 2.98569 2.49258 
4.48309 3.98102 8.26685 2.49258 8.26685 3.48792 4.48309 4.48309 2.49261 4.48309 3.98099 2.49261 
2.49261 7.71988 6.97574 3.98096 6.97571 4.48309 2.98566 3.98102 4.48309 3.98102 3.48792 5.92664 
4.48309 3.98102 3.98102 3.98096 4.48309 3.48792 7.51367 2.49261 4.48309 0 ]xsh
349.244 103.149 mo
(latteraremorebiocompatible.Bioincompatibilitymaybede\256nedas)
[2.49261 3.98099 2.49258 2.49261 3.98099 6.02524 3.98099 2.98569 7.02051 6.97571 4.48312 2.98566 
7.02054 4.48309 2.49261 4.48309 3.98102 4.48309 6.97571 4.48309 3.98099 2.49261 2.49258 4.48309 
2.49261 3.98099 5.32593 5.98053 2.49258 4.48312 2.49258 4.48309 3.98102 4.48309 6.97571 4.48309 
3.98099 2.49261 2.49258 4.48309 2.49261 2.49261 2.49261 2.49261 7.52258 6.97571 3.98102 7.52264 
4.48309 6.96674 4.48315 3.98096 4.98523 4.48309 3.98102 7.46881 3.98102 0 ]xsh
349.244 113.612 mo
(theabilityofthemembranetoactivatethecomplementcascade.Cel-)
[2.49261 4.48309 6.61707 3.98099 4.48309 2.49261 2.49258 2.49261 2.49261 7.11914 4.48309 5.62177 
2.49258 4.48312 6.61703 6.97571 3.98099 6.97571 4.48309 2.98569 3.98099 4.48309 6.51843 2.49261 
7.07434 3.98099 3.98099 2.49261 2.49261 4.48309 3.98099 2.49258 6.47363 2.49258 4.48312 6.47357 
3.98102 4.48309 6.97571 4.48309 2.49255 3.98102 6.97571 3.98102 4.48309 4.9314 3.98102 3.98096 
3.48792 3.98102 3.98102 4.48309 3.98096 4.42932 5.98053 3.98096 2.49261 0 ]xsh
349.244 124.076 mo
(lulosicmembranesarebioincompatiblebecauseofthepresenceoffree)
[2.49261 4.48309 2.49258 4.48312 3.48792 2.49258 5.9715 6.97571 3.98099 6.97571 4.48309 2.98569 
3.98099 4.48309 3.98102 5.5322 3.98102 2.98569 5.92664 4.48309 2.49261 4.48309 2.49261 4.48309 
3.98099 4.48312 6.97568 4.48312 3.98099 2.49258 2.49261 4.48309 2.49261 5.92664 4.48312 3.98099 
3.98102 3.98096 4.48309 3.48792 5.87292 4.48309 4.8775 2.49261 4.48309 5.87286 4.48309 2.98572 
3.98096 3.48792 3.98102 4.48309 3.98102 5.828 4.48309 4.77893 2.98572 2.98566 3.98102 0 
]xsh
349.244 134.539 mo
(hydroxylgroupsonthemembranesurface.Incontrast,withthesub-)
[4.48309 4.48309 4.48312 2.98566 4.48312 4.48309 4.48309 5.3349 4.48309 2.98566 4.48312 4.48309 
4.48309 6.3302 4.48312 7.37018 2.49261 4.48309 6.8233 6.97571 3.98099 6.97571 4.48309 2.98569 
3.98099 4.48309 6.7695 3.48792 4.48309 2.98566 2.98569 3.98099 3.98102 3.98099 5.03006 2.98566 
7.27161 3.98096 4.48315 4.48309 2.49261 2.98566 3.98102 3.48792 2.49255 4.98523 6.47357 2.49261 
2.49261 7.22675 2.49261 4.48309 6.72467 3.48792 4.48309 4.48309 0 ]xsh
349.244 145.003 mo
(stitutedcellulosemembranes\(e.g.,celluloseacetate\)orthecellulo-)
[3.48792 2.49261 2.49258 2.49261 4.48309 2.49261 3.98099 8.06958 3.98099 3.98099 2.49261 2.49261 
4.48309 2.49261 4.48309 3.48792 7.51367 6.97571 3.98099 6.97571 4.48309 2.98569 3.98099 4.48312 
3.98099 7.0206 2.98566 3.98102 2.24155 4.48309 2.24155 5.77423 3.98102 3.98099 2.49258 2.49261 
4.48309 2.49261 4.48309 3.48792 7.41504 3.98102 3.98102 3.98096 2.49261 3.98102 2.49255 3.98102 
6.37488 4.48309 6.37494 2.49261 4.48309 7.41504 3.98102 3.98096 2.49261 2.49261 4.48309 2.49261 
4.48309 0 ]xsh
349.244 155.466 mo
(syntheticmembranes,thehydroxylgroupsarechemicallybondedto)
[3.48792 4.48309 4.48312 2.49258 4.48309 3.98102 2.49258 2.49261 7.02054 6.97571 3.98099 6.97571 
4.48309 2.98569 3.98099 4.48309 3.98099 3.48792 5.22729 2.49261 4.48309 6.96674 4.48309 4.48312 
4.48309 2.98569 4.48309 4.48309 4.48309 5.47836 4.48309 2.98569 4.48309 4.48309 4.48312 6.47366 
3.98099 2.98569 6.92188 3.98102 4.48309 3.98102 6.97565 2.49261 3.98102 3.98096 2.49268 2.49255 
7.37024 4.48309 4.48309 4.48309 4.48309 3.98102 7.37024 2.49261 0 ]xsh
349.244 165.93 mo
(eitheracetateortertiaryaminogroups,resultinginlimitedcomplement)
[3.98099 2.49261 2.49258 4.48312 3.98099 4.77893 3.98099 3.98099 3.98099 2.49261 3.98099 2.49261 
5.72043 4.48309 4.72513 2.49261 3.98099 2.98569 2.49258 2.49261 3.98099 2.98569 6.22253 3.98099 
6.97571 2.49261 4.48309 6.22253 4.48309 2.98569 4.48309 4.48312 4.48309 3.48792 3.93616 2.98569 
3.98099 3.48792 4.48309 2.49261 2.49261 2.49258 4.48312 6.17767 2.49261 6.1239 2.49261 2.49261 
6.97571 2.49261 2.49261 3.98096 6.0791 3.98096 4.48315 6.97565 4.48309 2.49261 3.98102 6.97571 
3.98096 4.48315 0 ]xsh
349.244 176.393 mo
(activation.Syntheticmembranes,suchaspolysulfone,polymethyl-)
[3.98099 3.98099 2.49261 2.49261 4.48309 3.98099 2.49261 2.49258 4.48312 4.48309 6.27634 4.9852 
4.48309 4.48312 2.49258 4.48309 3.98099 2.49261 2.49261 8.01578 6.97571 3.98099 6.97571 4.48309 
2.98569 3.98099 4.48309 3.98102 3.48792 6.22253 3.48792 4.48309 3.98102 8.41925 3.98099 7.42407 
4.48312 4.48309 2.49261 4.48303 3.48798 4.48309 2.49255 2.98572 4.48309 4.48309 3.98102 6.1239 
4.48309 4.48309 2.49261 4.48309 6.97571 3.98102 2.49255 4.48315 4.48309 2.49261 0 ]xsh
349.244 186.857 mo
(methacrylate,andpolyacrylonitrilemembranes,aremorebiocompa-)
[6.97571 3.98099 2.49261 4.48309 3.98099 3.98099 2.98569 4.48309 2.49261 3.98099 2.49261 3.98099 
5.4335 3.98102 4.48309 7.67508 4.48309 4.48309 2.49261 4.48309 3.98099 3.98099 2.98569 4.48309 
2.49261 4.48309 4.48309 2.49261 2.49258 2.98569 2.49261 2.49258 7.11917 6.97571 3.98099 6.97571 
4.48309 2.98569 3.98099 4.48309 3.98102 3.48792 5.32593 3.98096 2.98572 7.02051 6.97571 4.48309 
2.98572 7.02051 4.48309 2.49261 4.48309 3.98102 4.48309 6.97571 4.48309 3.98102 0 ]xsh
349.244 197.32 mo
(tiblebecauseoftheabsenceofthesehydroxylgroups.Polysulfone)
[2.49261 2.49258 4.48309 2.49261 7.56747 4.48309 3.98102 3.98099 3.98099 4.48309 3.48792 7.56747 
4.48312 6.57214 2.49261 4.48309 7.56747 3.98099 4.48309 3.48792 3.98102 4.48309 3.98099 7.56747 
4.48309 6.57217 2.49258 4.48309 3.98102 3.48792 7.56747 4.48309 4.48312 4.48309 2.98566 4.48309 
4.48309 4.48315 6.07904 4.48309 2.98572 4.48309 4.48309 4.48309 3.48792 5.828 4.98523 4.48309 
2.49261 4.48309 3.48792 4.48309 2.49261 2.98566 4.48309 4.48315 0 ]xsh
349.244 207.784 mo
(membranesarenowusedinover60%ofthedialysistreatmentsinthe)
[6.97571 3.98099 6.97571 4.48309 2.98569 3.98099 4.48309 3.98099 5.78329 3.98099 2.98566 6.22256 
4.48309 4.48309 8.71518 4.48309 3.48792 3.98099 6.77844 2.49261 6.72464 4.48309 4.48312 3.98099 
5.17343 4.48309 4.48312 9.65652 4.48309 5.17343 2.49261 4.48309 6.16873 4.48312 2.49255 3.98102 
2.49261 4.48309 3.48792 2.49261 5.72949 2.49255 2.98572 3.98096 3.98102 2.49261 6.97571 3.98096 
4.48309 2.49261 5.57703 2.49261 6.5722 2.49261 4.48309 0 ]xsh
349.244 218.247 mo
(UnitedStates.)
[6.4736 4.48309 2.49261 2.49258 3.98102 7.11914 4.98523 2.49258 3.98099 2.49261 3.98099 3.48792 
0 ]xsh
361.196 228.711 mo
(Reprocessingandreuseofhemodialyzersareemployedforpatients)
[5.98053 3.98099 4.48309 2.98569 4.48309 3.98099 3.98102 3.48792 3.48792 2.49261 4.48309 6.42877 
3.98099 4.48309 6.42877 2.98569 3.98099 4.48309 3.48792 5.87286 4.48309 4.83273 4.48309 3.98099 
6.97571 4.48309 4.48312 2.49258 3.98099 2.49261 4.48309 3.98102 3.98096 2.98572 5.33496 3.98096 
2.98572 5.7204 3.98102 6.97571 4.48309 2.49261 4.48309 4.48309 3.98096 6.27637 2.98572 4.48309 
4.62646 4.48309 3.98102 2.49261 2.49255 3.98102 4.48309 2.49261 0 ]xsh
349.244 239.174 mo
(onchronichemodialysisinnearly80%ofdialysiscentersintheUnited)
[4.48309 6.37497 3.98099 4.48312 2.98566 4.48312 4.48309 2.49258 5.77423 4.48312 3.98099 6.97571 
4.48309 4.48309 2.49261 3.98099 2.49261 4.48309 3.48792 2.49261 5.33493 2.49261 6.33014 4.48309 
3.98099 3.98102 2.98566 2.49261 6.33014 4.48309 4.48309 9.20825 4.48309 4.7251 4.48309 2.49261 
3.98102 2.49258 4.48312 3.48792 2.49255 5.28119 3.98102 3.98096 4.48315 2.49255 3.98102 2.98566 
5.22736 2.49261 6.17773 2.49255 4.48315 5.62177 6.47363 4.48309 2.49261 2.49261 3.98096 0 
]xsh
349.244 249.638 mo
(States,inlargepartbecauseoftheexpenseofindividualdialyzers.)
[4.9852 2.49261 3.98099 2.49261 3.98099 3.48792 5.77423 2.49261 8.01578 2.49261 3.98099 2.98566 
4.48312 7.41504 4.48309 3.98102 2.98566 5.98047 4.48309 3.98099 3.98099 3.98102 4.48309 3.48792 
7.41504 4.48312 6.41971 2.49261 4.48309 7.41507 3.98099 4.48309 4.48309 3.98102 4.48309 3.48792 
7.41504 4.48309 6.41974 2.49261 4.48309 4.48309 2.49261 4.48309 2.49261 4.48309 4.48309 3.98102 
5.92664 4.48309 2.49261 3.98102 2.49255 4.48309 3.98102 3.98096 2.98572 3.48792 0 ]xsh
349.244 260.102 mo
(Evidencealsosuggeststhatreusereducescomplementactivation,the)
[5.47827 4.48309 2.49261 4.48309 3.98102 4.48309 3.98099 6.57224 3.98099 2.49261 3.48792 7.11917 
3.48792 4.48309 4.48309 4.48309 3.98102 3.48792 2.49258 6.12399 2.49261 4.48309 3.98099 5.12866 
2.98569 3.98099 4.48309 3.48792 6.51843 2.98569 3.98099 4.48312 4.48309 3.98096 3.98102 6.02536 
3.98099 4.48309 6.97571 4.48309 2.49261 3.98096 6.97571 3.98102 4.48309 4.9314 3.98102 3.98102 
2.49255 2.49261 4.48309 3.98102 2.49261 2.49255 4.48315 4.48309 4.48309 2.49255 4.48315 0 
]xsh
349.244 270.565 mo
(incidenceofanaphylactoidreactionstothemembrane\(\256rst-usesyn-)
[2.49261 4.48309 3.98099 2.49261 4.48309 3.98099 4.48309 3.98102 6.96674 4.48309 5.97144 3.98099 
4.48309 3.98099 4.48309 4.48312 4.48309 2.49258 3.98102 3.98099 2.49261 4.48309 2.49258 7.46887 
2.98566 3.98102 3.98099 3.98099 2.49261 2.49258 4.48312 4.48309 6.47363 2.49261 7.46887 2.49258 
4.48312 6.92188 6.97571 3.98096 6.97571 4.48315 2.98566 3.98102 4.48309 6.8681 2.98566 4.98523 
2.98566 3.48792 2.49261 2.98566 4.48315 3.48792 6.76947 3.48792 4.48309 4.48309 0 ]xsh
349.244 281.029 mo
(drome\),and,insomestudies,mortalityratesamongdialysispatients.)
[4.48309 2.98569 4.48309 6.97571 3.98099 2.98569 4.87762 3.98099 4.48309 4.48309 4.87762 2.49261 
7.11914 3.48792 4.48309 6.97571 6.57224 3.48792 2.49258 4.48312 4.48309 2.49261 3.98099 3.48792 
4.83276 6.97571 4.48309 2.98569 2.49261 3.98099 2.49261 2.49261 2.49258 7.07431 2.98569 3.98099 
2.49261 3.98099 5.98056 3.98096 6.97571 4.48309 4.48309 6.97571 4.48309 2.49261 3.98102 2.49261 
4.48303 3.48798 2.49261 5.88184 4.48315 3.98096 2.49261 2.49261 3.98096 4.48315 2.49255 3.48792 
0 ]xsh
349.244 291.492 mo
(Inmostcenters,onlythedialyzerunitisreprocessedandreused,)
[2.98569 8.76892 6.97571 4.48309 3.48795 6.72464 3.98099 3.98099 4.48312 2.49258 3.98099 2.98569 
3.48792 6.4736 4.48309 4.48309 2.49261 8.71515 2.49261 4.48309 8.16821 4.48309 2.49261 3.98099 
2.49258 4.48312 3.98099 3.98099 7.17288 4.48309 4.48312 2.49258 6.72467 2.49258 7.71997 2.98569 
3.98102 4.48303 2.98572 4.48309 3.98102 3.98096 3.48792 3.48792 3.98102 8.61652 3.98102 4.48309 
8.57166 2.98572 3.98096 4.48315 3.48792 3.98096 4.48309 0 ]xsh
349.244 301.956 mo
(whereasinthedevelopingworldbloodlinesarealsofrequentlyreused.)
[6.4736 4.48309 3.98099 2.98569 3.98099 3.98102 5.37976 2.49261 6.37497 2.49258 4.48312 5.82803 
4.48309 3.98099 4.48309 3.98099 2.49261 4.48309 4.48312 2.49258 4.48309 6.33014 6.47363 4.48309 
2.98566 2.49261 6.33014 4.48309 2.49261 4.48309 4.48309 6.33014 2.49261 2.49261 4.48309 3.98099 
5.28116 3.98102 2.98566 5.6756 3.98102 2.49255 3.48798 6.22253 2.98566 2.98572 3.98096 4.48309 
4.48309 3.98102 4.48309 2.49261 2.49261 5.98047 2.98566 3.98102 4.48303 3.48798 3.98096 4.48309 
0 ]xsh
349.244 312.419 mo
(Thereprocessingprocedurecanbeeithermanualorautomated.Itcon-)
[5.47827 4.48309 6.07013 2.98569 3.98099 4.48309 2.98569 4.48309 3.98099 3.98102 3.48792 3.48792 
2.49261 4.48309 6.5722 4.48309 2.98569 4.48312 3.98099 3.98099 4.48309 4.48309 2.98569 5.9715 
3.98099 3.98102 6.52737 4.48309 5.9715 3.98099 2.49261 2.49261 4.48309 3.98102 4.97614 6.97571 
3.98102 4.48309 4.48309 3.98102 4.48309 4.48309 4.93134 3.98102 4.48303 2.49268 4.48303 6.97571 
3.98102 2.49261 3.98096 4.48315 4.13342 2.98566 4.33966 3.98096 4.48309 4.48309 0 ]xsh
349.244 322.883 mo
(sistsofthesequentialrinsingofthebloodanddialysatecompartments)
[3.48792 2.49261 3.48792 2.49261 5.72946 4.48309 5.17343 2.49261 4.48309 6.16873 3.48792 3.98102 
4.48309 4.48309 3.98099 4.48309 2.49261 2.49261 3.98099 4.73416 2.98566 2.49261 4.48309 3.48792 
2.49261 4.48309 6.67087 4.48309 5.1286 2.49261 4.48309 6.12393 4.48309 2.49261 4.48309 4.48309 
6.67084 3.98102 4.48309 6.62604 4.48309 2.49261 3.98096 2.49261 4.48309 3.48792 3.98102 2.49261 
5.97144 3.98102 4.48309 6.97571 4.48309 3.98102 2.98566 2.49261 6.97571 3.98096 4.48315 2.49255 
0 ]xsh
349.244 333.347 mo
(withwater,achemicalcleansingstepwithreverseultra\256ltrationfrom)
[6.4736 2.49258 2.49261 7.07434 6.4736 3.98099 2.49258 3.98102 2.98566 4.77899 6.4736 3.98099 
4.48309 3.98102 6.97568 2.49261 3.98102 3.98099 4.9852 3.98099 2.49261 3.98099 3.98099 4.48312 
3.48792 2.49258 4.48312 6.97568 3.48792 2.49261 3.98099 6.92194 6.47357 2.49261 2.49261 6.92188 
2.98569 3.98099 4.48309 3.98102 2.98566 3.48792 6.2226 4.48309 2.49261 2.49255 2.98572 3.98096 
4.98523 2.49255 2.49268 2.98566 3.98096 2.49261 2.49261 4.48309 6.5722 2.98572 2.98566 4.48309 
0 ]xsh
349.244 343.81 mo
(thedialysatetothebloodcompartment,thetestingofthepatencyof)
[2.49261 4.48309 6.92191 4.48309 2.49261 3.98099 2.49261 4.48309 3.48792 3.98099 2.49261 6.8681 
2.49261 7.42401 2.49258 4.48309 6.86813 4.48309 2.49261 4.48309 4.48309 7.42401 3.98099 4.48312 
6.97568 4.48312 3.98099 2.98569 2.49258 6.97571 3.98102 4.48309 2.49258 5.12869 2.49258 4.48309 
6.82327 2.49261 3.98096 3.48798 2.49261 2.49255 4.48309 7.37024 4.48309 5.828 2.49255 4.48309 
6.8681 4.48315 3.98096 2.49261 3.98102 4.48309 3.98102 7.27155 4.48309 0 ]xsh
349.244 354.274 mo
(thedialyzer,and,\256nally,disinfectionofthedialyzer.Formaldehyde,)
[2.49261 4.48309 6.92191 4.48309 2.49261 3.98099 2.49261 4.48309 3.98099 3.98099 2.98569 5.12866 
3.98099 4.48312 4.48309 5.12866 4.9852 4.48309 3.98102 2.49258 2.49261 4.48309 5.12866 4.48312 
2.49258 3.48792 2.49261 4.48309 2.98569 3.98099 3.98099 2.49261 2.49261 4.48309 7.37021 4.48312 
5.82794 2.49261 4.48309 6.82324 4.48309 2.49261 3.98102 2.49261 4.48309 3.98096 3.98102 2.98566 
4.98523 4.98523 4.48309 2.98566 6.97571 3.98096 2.49261 4.48309 3.98102 4.48309 4.48309 4.48309 
3.98102 0 ]xsh
349.244 364.737 mo
(peraceticacid\261hydrogenperoxide,andglutaraldehydearethemost)
[4.48309 3.98099 2.98569 3.98099 3.98102 3.98099 2.49261 2.49258 7.56747 3.98099 3.98102 2.49258 
5.08383 5.43353 4.48309 4.48309 4.48312 2.98566 4.48309 4.48309 3.98102 8.06958 4.48309 3.98099 
2.98569 4.48309 4.48309 2.49261 4.48309 3.98099 5.82803 3.98102 4.48309 8.06958 4.48309 2.49258 
4.48312 2.49258 3.98099 2.98566 3.98102 2.49261 4.48309 3.98102 4.48309 4.48309 4.48309 7.46881 
3.98102 2.98566 7.41504 2.49268 4.48303 7.41504 6.97571 4.48315 3.48792 0 ]xsh
349.244 375.201 mo
(frequentlyusedreprocessingagents,withperaceticacid\261hydrogen)
[2.98569 2.98566 3.98102 4.48309 4.48309 3.98099 4.48309 2.49261 2.49261 8.67032 4.48309 3.48792 
3.98099 8.61652 2.98569 3.98099 4.48309 2.98569 4.48309 3.98099 3.98102 3.48792 3.48792 2.49261 
4.48309 8.57169 3.98099 4.48309 3.98102 4.48309 2.49261 3.48792 6.33014 6.47357 2.49261 2.49261 
8.57166 4.48309 3.98102 2.98566 3.98102 3.98102 3.98096 2.49261 2.49261 7.76471 3.98102 3.98096 
2.49261 5.08386 5.43353 4.48309 4.48309 4.48309 2.98566 4.48315 4.48303 3.98102 0 ]xsh
349.244 385.664 mo
(peroxidebeingthemostcommon.)
[4.48309 3.98099 2.98569 4.48309 4.48312 2.49258 4.48309 6.57224 4.48309 3.98102 2.49258 4.48309 
7.11917 2.49261 4.48309 6.61707 6.97571 4.48309 3.48792 5.18246 3.98099 4.48312 6.97571 6.97568 
4.48312 4.48309 0 ]xsh
LJKSOT+SolexBold*1 [8.9662 0 0 -8.9662 0 0 ]msf
349.244 402.799 mo
(DIALYSATE)
[4.48309 2.33118 4.02585 3.13824 3.64032 3.87347 4.02585 3.07544 0 ]xsh
LJKSOU+Times-Roman*1 [8.9662 0 0 -8.9662 0 0 ]msf
390.336 402.799 mo
(ThecompositionofdialysateislistedinTable262-1.Bi-)
[5.47827 4.48309 6.72467 3.98099 4.48309 6.97571 4.48309 4.48312 3.48792 2.49258 2.49261 2.49258 
4.48312 7.27158 4.48309 5.77417 4.48309 2.49261 3.98099 2.49261 4.48309 3.48792 3.98099 2.49261 
6.72464 2.49261 6.2764 2.49261 2.49261 3.48792 2.49255 3.98102 7.27161 2.49261 7.32538 5.47827 
3.98102 4.48303 2.49268 6.72461 4.48309 4.48309 4.48309 2.98572 4.48309 4.98523 5.98047 2.49261 
0 ]xsh
349.244 413.262 mo
(carbonatehasreplacedacetateasthepreferredbufferintheUnited)
[3.98099 3.98099 2.98569 4.48309 4.48312 4.48309 3.98099 2.49261 7.37021 4.48309 3.98102 6.92197 
2.98566 3.98102 4.48309 2.49258 3.98102 3.98099 3.98099 7.91718 3.98099 3.98099 3.98099 2.49261 
3.98099 2.49261 7.37021 3.98099 6.87714 2.49261 4.48309 7.37024 4.48309 2.98566 3.98102 2.98566 
3.98102 2.98566 2.98566 3.98102 7.81854 4.48309 4.48309 2.98572 2.98566 3.98096 6.22247 2.49261 
7.77374 2.49255 4.48315 7.27155 6.47363 4.48309 2.49255 2.49261 3.98102 0 ]xsh
349.244 423.726 mo
(States.Thischangehasresultedinfewerepisodesofhypotensiondur-)
[4.9852 2.49261 3.98099 2.49261 3.98099 3.48792 4.48309 5.4783 4.48309 2.49258 5.72949 3.98099 
4.48309 3.98099 4.48312 4.48309 6.1239 4.48309 3.98102 5.67566 2.98569 3.98099 3.48792 4.48312 
2.49258 2.49261 3.98099 6.67087 2.49258 6.67087 2.98566 3.98102 6.47357 3.98102 5.02997 3.98099 
4.48312 2.49258 3.48792 4.48312 4.48309 3.98096 5.57709 4.48309 4.9762 4.48303 4.48315 4.48309 
4.48309 2.49261 3.98096 4.48309 3.48792 2.49261 4.48309 6.47363 4.48309 4.48309 2.98572 0 
]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 /14 /15 ]]
[/Procedure [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.29 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
